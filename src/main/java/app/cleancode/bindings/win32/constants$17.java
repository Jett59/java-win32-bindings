// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$17 {

    static final FunctionDescriptor ReadPointerNoFence$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReadPointerNoFence$MH = RuntimeHelper.downcallHandle(
        "ReadPointerNoFence",
        constants$17.ReadPointerNoFence$FUNC
    );
    static final FunctionDescriptor ReadPointerRaw$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReadPointerRaw$MH = RuntimeHelper.downcallHandle(
        "ReadPointerRaw",
        constants$17.ReadPointerRaw$FUNC
    );
    static final FunctionDescriptor WritePointerRelease$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle WritePointerRelease$MH = RuntimeHelper.downcallHandle(
        "WritePointerRelease",
        constants$17.WritePointerRelease$FUNC
    );
    static final FunctionDescriptor WritePointerNoFence$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle WritePointerNoFence$MH = RuntimeHelper.downcallHandle(
        "WritePointerNoFence",
        constants$17.WritePointerNoFence$FUNC
    );
    static final FunctionDescriptor WritePointerRaw$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle WritePointerRaw$MH = RuntimeHelper.downcallHandle(
        "WritePointerRaw",
        constants$17.WritePointerRaw$FUNC
    );
    static final FunctionDescriptor ENCLAVE_TARGET_FUNCTION$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
}



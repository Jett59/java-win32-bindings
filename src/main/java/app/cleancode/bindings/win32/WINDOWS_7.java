// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class WINDOWS_7 extends WINDOWS_6 {

    public static int AF_PUP() {
        return (int)4L;
    }
    public static int AF_CHAOS() {
        return (int)5L;
    }
    public static int AF_IPX() {
        return (int)6L;
    }
    public static int AF_NS() {
        return (int)6L;
    }
    public static int AF_ISO() {
        return (int)7L;
    }
    public static int AF_ECMA() {
        return (int)8L;
    }
    public static int AF_DATAKIT() {
        return (int)9L;
    }
    public static int AF_CCITT() {
        return (int)10L;
    }
    public static int AF_SNA() {
        return (int)11L;
    }
    public static int AF_DECnet() {
        return (int)12L;
    }
    public static int AF_DLI() {
        return (int)13L;
    }
    public static int AF_LAT() {
        return (int)14L;
    }
    public static int AF_HYLINK() {
        return (int)15L;
    }
    public static int AF_APPLETALK() {
        return (int)16L;
    }
    public static int AF_NETBIOS() {
        return (int)17L;
    }
    public static int AF_VOICEVIEW() {
        return (int)18L;
    }
    public static int AF_FIREFOX() {
        return (int)19L;
    }
    public static int AF_UNKNOWN1() {
        return (int)20L;
    }
    public static int AF_BAN() {
        return (int)21L;
    }
    public static int AF_MAX() {
        return (int)22L;
    }
    public static int SOL_SOCKET() {
        return (int)65535L;
    }
    public static int SOMAXCONN() {
        return (int)5L;
    }
    public static int MSG_OOB() {
        return (int)1L;
    }
    public static int MSG_PEEK() {
        return (int)2L;
    }
    public static int MSG_DONTROUTE() {
        return (int)4L;
    }
    public static int MSG_MAXIOVLEN() {
        return (int)16L;
    }
    public static int MSG_PARTIAL() {
        return (int)32768L;
    }
    public static int MAXGETHOSTSTRUCT() {
        return (int)1024L;
    }
    public static int FD_READ() {
        return (int)1L;
    }
    public static int FD_WRITE() {
        return (int)2L;
    }
    public static int FD_OOB() {
        return (int)4L;
    }
    public static int FD_ACCEPT() {
        return (int)8L;
    }
    public static int FD_CONNECT() {
        return (int)16L;
    }
    public static int FD_CLOSE() {
        return (int)32L;
    }
    public static int TF_DISCONNECT() {
        return (int)1L;
    }
    public static int TF_REUSE_SOCKET() {
        return (int)2L;
    }
    public static int TF_WRITE_BEHIND() {
        return (int)4L;
    }
    public static int ALG_SID_RSA_ANY() {
        return (int)0L;
    }
    public static int ALG_SID_RSA_PKCS() {
        return (int)1L;
    }
    public static int ALG_SID_RSA_MSATWORK() {
        return (int)2L;
    }
    public static int ALG_SID_RSA_ENTRUST() {
        return (int)3L;
    }
    public static int ALG_SID_RSA_PGP() {
        return (int)4L;
    }
    public static int ALG_SID_DSS_ANY() {
        return (int)0L;
    }
    public static int ALG_SID_DSS_PKCS() {
        return (int)1L;
    }
    public static int ALG_SID_DSS_DMS() {
        return (int)2L;
    }
    public static int ALG_SID_ECDSA() {
        return (int)3L;
    }
    public static int ALG_SID_DES() {
        return (int)1L;
    }
    public static int ALG_SID_3DES() {
        return (int)3L;
    }
    public static int ALG_SID_DESX() {
        return (int)4L;
    }
    public static int ALG_SID_IDEA() {
        return (int)5L;
    }
    public static int ALG_SID_CAST() {
        return (int)6L;
    }
    public static int ALG_SID_SAFERSK64() {
        return (int)7L;
    }
    public static int ALG_SID_SAFERSK128() {
        return (int)8L;
    }
    public static int ALG_SID_3DES_112() {
        return (int)9L;
    }
    public static int ALG_SID_CYLINK_MEK() {
        return (int)12L;
    }
    public static int ALG_SID_RC5() {
        return (int)13L;
    }
    public static int ALG_SID_AES_128() {
        return (int)14L;
    }
    public static int ALG_SID_AES_192() {
        return (int)15L;
    }
    public static int ALG_SID_AES_256() {
        return (int)16L;
    }
    public static int ALG_SID_AES() {
        return (int)17L;
    }
    public static int ALG_SID_SKIPJACK() {
        return (int)10L;
    }
    public static int ALG_SID_TEK() {
        return (int)11L;
    }
    public static int CRYPT_MODE_CBCI() {
        return (int)6L;
    }
    public static int CRYPT_MODE_CFBP() {
        return (int)7L;
    }
    public static int CRYPT_MODE_OFBP() {
        return (int)8L;
    }
    public static int CRYPT_MODE_CBCOFM() {
        return (int)9L;
    }
    public static int CRYPT_MODE_CBCOFMI() {
        return (int)10L;
    }
    public static int ALG_SID_RC2() {
        return (int)2L;
    }
    public static int ALG_SID_RC4() {
        return (int)1L;
    }
    public static int ALG_SID_SEAL() {
        return (int)2L;
    }
    public static int ALG_SID_DH_SANDF() {
        return (int)1L;
    }
    public static int ALG_SID_DH_EPHEM() {
        return (int)2L;
    }
    public static int ALG_SID_AGREED_KEY_ANY() {
        return (int)3L;
    }
    public static int ALG_SID_KEA() {
        return (int)4L;
    }
    public static int ALG_SID_ECDH() {
        return (int)5L;
    }
    public static int ALG_SID_ECDH_EPHEM() {
        return (int)6L;
    }
    public static int ALG_SID_MD2() {
        return (int)1L;
    }
    public static int ALG_SID_MD4() {
        return (int)2L;
    }
    public static int ALG_SID_MD5() {
        return (int)3L;
    }
    public static int ALG_SID_SHA() {
        return (int)4L;
    }
    public static int ALG_SID_SHA1() {
        return (int)4L;
    }
    public static int ALG_SID_MAC() {
        return (int)5L;
    }
    public static int ALG_SID_RIPEMD() {
        return (int)6L;
    }
    public static int ALG_SID_RIPEMD160() {
        return (int)7L;
    }
    public static int ALG_SID_SSL3SHAMD5() {
        return (int)8L;
    }
    public static int ALG_SID_HMAC() {
        return (int)9L;
    }
    public static int ALG_SID_TLS1PRF() {
        return (int)10L;
    }
    public static int ALG_SID_HASH_REPLACE_OWF() {
        return (int)11L;
    }
    public static int ALG_SID_SHA_256() {
        return (int)12L;
    }
    public static int ALG_SID_SHA_384() {
        return (int)13L;
    }
    public static int ALG_SID_SHA_512() {
        return (int)14L;
    }
    public static int ALG_SID_SSL3_MASTER() {
        return (int)1L;
    }
    public static int ALG_SID_SCHANNEL_MASTER_HASH() {
        return (int)2L;
    }
    public static int ALG_SID_SCHANNEL_MAC_KEY() {
        return (int)3L;
    }
    public static int ALG_SID_PCT1_MASTER() {
        return (int)4L;
    }
    public static int ALG_SID_SSL2_MASTER() {
        return (int)5L;
    }
    public static int ALG_SID_TLS1_MASTER() {
        return (int)6L;
    }
    public static int ALG_SID_SCHANNEL_ENC_KEY() {
        return (int)7L;
    }
    public static int ALG_SID_ECMQV() {
        return (int)1L;
    }
    public static int ALG_SID_EXAMPLE() {
        return (int)80L;
    }
    public static int CRYPT_NEWKEYSET() {
        return (int)8L;
    }
    public static int CRYPT_DELETEKEYSET() {
        return (int)16L;
    }
    public static int CRYPT_MACHINE_KEYSET() {
        return (int)32L;
    }
    public static int CRYPT_SILENT() {
        return (int)64L;
    }
    public static int CRYPT_DEFAULT_CONTAINER_OPTIONAL() {
        return (int)128L;
    }
    public static int CRYPT_EXPORTABLE() {
        return (int)1L;
    }
    public static int CRYPT_USER_PROTECTED() {
        return (int)2L;
    }
    public static int CRYPT_CREATE_SALT() {
        return (int)4L;
    }
    public static int CRYPT_UPDATE_KEY() {
        return (int)8L;
    }
    public static int CRYPT_NO_SALT() {
        return (int)16L;
    }
    public static int CRYPT_PREGEN() {
        return (int)64L;
    }
    public static int CRYPT_RECIPIENT() {
        return (int)16L;
    }
    public static int CRYPT_INITIATOR() {
        return (int)64L;
    }
    public static int CRYPT_ONLINE() {
        return (int)128L;
    }
    public static int CRYPT_SF() {
        return (int)256L;
    }
    public static int CRYPT_CREATE_IV() {
        return (int)512L;
    }
    public static int CRYPT_KEK() {
        return (int)1024L;
    }
    public static int CRYPT_DATA_KEY() {
        return (int)2048L;
    }
    public static int CRYPT_VOLATILE() {
        return (int)4096L;
    }
    public static int CRYPT_SGCKEY() {
        return (int)8192L;
    }
    public static int CRYPT_USER_PROTECTED_STRONG() {
        return (int)1048576L;
    }
    public static int CRYPT_ARCHIVABLE() {
        return (int)16384L;
    }
    public static int CRYPT_FORCE_KEY_PROTECTION_HIGH() {
        return (int)32768L;
    }
    public static int RSA1024BIT_KEY() {
        return (int)67108864L;
    }
    public static int CRYPT_SERVER() {
        return (int)1024L;
    }
    public static int CRYPT_Y_ONLY() {
        return (int)1L;
    }
    public static int CRYPT_SSL2_FALLBACK() {
        return (int)2L;
    }
    public static int CRYPT_DESTROYKEY() {
        return (int)4L;
    }
    public static int CRYPT_OAEP() {
        return (int)64L;
    }
    public static int CRYPT_BLOB_VER3() {
        return (int)128L;
    }
    public static int CRYPT_IPSEC_HMAC_KEY() {
        return (int)256L;
    }
    public static int CRYPT_DECRYPT_RSA_NO_PADDING_CHECK() {
        return (int)32L;
    }
    public static int CRYPT_SECRETDIGEST() {
        return (int)1L;
    }
    public static int CRYPT_OWF_REPL_LM_HASH() {
        return (int)1L;
    }
    public static int CRYPT_LITTLE_ENDIAN() {
        return (int)1L;
    }
    public static int CRYPT_NOHASHOID() {
        return (int)1L;
    }
    public static int CRYPT_TYPE2_FORMAT() {
        return (int)2L;
    }
    public static int CRYPT_X931_FORMAT() {
        return (int)4L;
    }
    public static int CRYPT_MACHINE_DEFAULT() {
        return (int)1L;
    }
    public static int CRYPT_USER_DEFAULT() {
        return (int)2L;
    }
    public static int CRYPT_DELETE_DEFAULT() {
        return (int)4L;
    }
    public static int SIMPLEBLOB() {
        return (int)1L;
    }
    public static int PUBLICKEYBLOB() {
        return (int)6L;
    }
    public static int PRIVATEKEYBLOB() {
        return (int)7L;
    }
    public static int PLAINTEXTKEYBLOB() {
        return (int)8L;
    }
    public static int OPAQUEKEYBLOB() {
        return (int)9L;
    }
    public static int PUBLICKEYBLOBEX() {
        return (int)10L;
    }
    public static int SYMMETRICWRAPKEYBLOB() {
        return (int)11L;
    }
    public static int KEYSTATEBLOB() {
        return (int)12L;
    }
    public static int AT_KEYEXCHANGE() {
        return (int)1L;
    }
    public static int AT_SIGNATURE() {
        return (int)2L;
    }
    public static int CRYPT_USERDATA() {
        return (int)1L;
    }
    public static int KP_IV() {
        return (int)1L;
    }
    public static int KP_SALT() {
        return (int)2L;
    }
    public static int KP_PADDING() {
        return (int)3L;
    }
    public static int KP_MODE() {
        return (int)4L;
    }
    public static int KP_MODE_BITS() {
        return (int)5L;
    }
    public static int KP_PERMISSIONS() {
        return (int)6L;
    }
    public static int KP_ALGID() {
        return (int)7L;
    }
    public static int KP_BLOCKLEN() {
        return (int)8L;
    }
    public static int KP_KEYLEN() {
        return (int)9L;
    }
    public static int KP_SALT_EX() {
        return (int)10L;
    }
    public static int KP_P() {
        return (int)11L;
    }
    public static int KP_G() {
        return (int)12L;
    }
    public static int KP_Q() {
        return (int)13L;
    }
    public static int KP_X() {
        return (int)14L;
    }
    public static int KP_Y() {
        return (int)15L;
    }
    public static int KP_RA() {
        return (int)16L;
    }
    public static int KP_RB() {
        return (int)17L;
    }
    public static int KP_INFO() {
        return (int)18L;
    }
    public static int KP_EFFECTIVE_KEYLEN() {
        return (int)19L;
    }
    public static int KP_SCHANNEL_ALG() {
        return (int)20L;
    }
    public static int KP_CLIENT_RANDOM() {
        return (int)21L;
    }
    public static int KP_SERVER_RANDOM() {
        return (int)22L;
    }
    public static int KP_RP() {
        return (int)23L;
    }
    public static int KP_PRECOMP_MD5() {
        return (int)24L;
    }
    public static int KP_PRECOMP_SHA() {
        return (int)25L;
    }
    public static int KP_CERTIFICATE() {
        return (int)26L;
    }
    public static int KP_CLEAR_KEY() {
        return (int)27L;
    }
    public static int KP_PUB_EX_LEN() {
        return (int)28L;
    }
    public static int KP_PUB_EX_VAL() {
        return (int)29L;
    }
    public static int KP_KEYVAL() {
        return (int)30L;
    }
    public static int KP_ADMIN_PIN() {
        return (int)31L;
    }
    public static int KP_KEYEXCHANGE_PIN() {
        return (int)32L;
    }
    public static int KP_SIGNATURE_PIN() {
        return (int)33L;
    }
    public static int KP_PREHASH() {
        return (int)34L;
    }
    public static int KP_ROUNDS() {
        return (int)35L;
    }
    public static int KP_OAEP_PARAMS() {
        return (int)36L;
    }
    public static int KP_CMS_KEY_INFO() {
        return (int)37L;
    }
    public static int KP_CMS_DH_KEY_INFO() {
        return (int)38L;
    }
    public static int KP_PUB_PARAMS() {
        return (int)39L;
    }
    public static int KP_VERIFY_PARAMS() {
        return (int)40L;
    }
    public static int KP_HIGHEST_VERSION() {
        return (int)41L;
    }
    public static int KP_GET_USE_COUNT() {
        return (int)42L;
    }
    public static int KP_PIN_ID() {
        return (int)43L;
    }
    public static int KP_PIN_INFO() {
        return (int)44L;
    }
    public static int PKCS5_PADDING() {
        return (int)1L;
    }
    public static int RANDOM_PADDING() {
        return (int)2L;
    }
    public static int ZERO_PADDING() {
        return (int)3L;
    }
    public static int CRYPT_MODE_CBC() {
        return (int)1L;
    }
    public static int CRYPT_MODE_ECB() {
        return (int)2L;
    }
    public static int CRYPT_MODE_OFB() {
        return (int)3L;
    }
    public static int CRYPT_MODE_CFB() {
        return (int)4L;
    }
    public static int CRYPT_MODE_CTS() {
        return (int)5L;
    }
    public static int CRYPT_ENCRYPT() {
        return (int)1L;
    }
    public static int CRYPT_DECRYPT() {
        return (int)2L;
    }
    public static int CRYPT_EXPORT() {
        return (int)4L;
    }
    public static int CRYPT_READ() {
        return (int)8L;
    }
    public static int CRYPT_WRITE() {
        return (int)16L;
    }
    public static int CRYPT_MAC() {
        return (int)32L;
    }
    public static int CRYPT_EXPORT_KEY() {
        return (int)64L;
    }
    public static int CRYPT_IMPORT_KEY() {
        return (int)128L;
    }
    public static int CRYPT_ARCHIVE() {
        return (int)256L;
    }
    public static int HP_ALGID() {
        return (int)1L;
    }
    public static int HP_HASHVAL() {
        return (int)2L;
    }
    public static int HP_HASHSIZE() {
        return (int)4L;
    }
    public static int HP_HMAC_INFO() {
        return (int)5L;
    }
    public static int HP_TLS1PRF_LABEL() {
        return (int)6L;
    }
    public static int HP_TLS1PRF_SEED() {
        return (int)7L;
    }
    public static int PP_ENUMALGS() {
        return (int)1L;
    }
    public static int PP_ENUMCONTAINERS() {
        return (int)2L;
    }
    public static int PP_IMPTYPE() {
        return (int)3L;
    }
    public static int PP_NAME() {
        return (int)4L;
    }
    public static int PP_VERSION() {
        return (int)5L;
    }
    public static int PP_CONTAINER() {
        return (int)6L;
    }
    public static int PP_CHANGE_PASSWORD() {
        return (int)7L;
    }
    public static int PP_KEYSET_SEC_DESCR() {
        return (int)8L;
    }
    public static int PP_CERTCHAIN() {
        return (int)9L;
    }
    public static int PP_KEY_TYPE_SUBTYPE() {
        return (int)10L;
    }
    public static int PP_PROVTYPE() {
        return (int)16L;
    }
    public static int PP_KEYSTORAGE() {
        return (int)17L;
    }
    public static int PP_APPLI_CERT() {
        return (int)18L;
    }
    public static int PP_SYM_KEYSIZE() {
        return (int)19L;
    }
    public static int PP_SESSION_KEYSIZE() {
        return (int)20L;
    }
    public static int PP_UI_PROMPT() {
        return (int)21L;
    }
    public static int PP_ENUMALGS_EX() {
        return (int)22L;
    }
    public static int PP_ENUMMANDROOTS() {
        return (int)25L;
    }
    public static int PP_ENUMELECTROOTS() {
        return (int)26L;
    }
    public static int PP_KEYSET_TYPE() {
        return (int)27L;
    }
    public static int PP_ADMIN_PIN() {
        return (int)31L;
    }
    public static int PP_KEYEXCHANGE_PIN() {
        return (int)32L;
    }
    public static int PP_SIGNATURE_PIN() {
        return (int)33L;
    }
    public static int PP_SIG_KEYSIZE_INC() {
        return (int)34L;
    }
    public static int PP_KEYX_KEYSIZE_INC() {
        return (int)35L;
    }
    public static int PP_UNIQUE_CONTAINER() {
        return (int)36L;
    }
    public static int PP_SGC_INFO() {
        return (int)37L;
    }
    public static int PP_USE_HARDWARE_RNG() {
        return (int)38L;
    }
    public static int PP_KEYSPEC() {
        return (int)39L;
    }
    public static int PP_ENUMEX_SIGNING_PROT() {
        return (int)40L;
    }
    public static int PP_CRYPT_COUNT_KEY_USE() {
        return (int)41L;
    }
    public static int PP_USER_CERTSTORE() {
        return (int)42L;
    }
    public static int PP_SMARTCARD_READER() {
        return (int)43L;
    }
    public static int PP_SMARTCARD_GUID() {
        return (int)45L;
    }
    public static int PP_ROOT_CERTSTORE() {
        return (int)46L;
    }
    public static int PP_SMARTCARD_READER_ICON() {
        return (int)47L;
    }
    public static int CRYPT_FIRST() {
        return (int)1L;
    }
    public static int CRYPT_NEXT() {
        return (int)2L;
    }
    public static int CRYPT_SGC_ENUM() {
        return (int)4L;
    }
    public static int CRYPT_IMPL_HARDWARE() {
        return (int)1L;
    }
    public static int CRYPT_IMPL_SOFTWARE() {
        return (int)2L;
    }
    public static int CRYPT_IMPL_MIXED() {
        return (int)3L;
    }
    public static int CRYPT_IMPL_UNKNOWN() {
        return (int)4L;
    }
    public static int CRYPT_IMPL_REMOVABLE() {
        return (int)8L;
    }
    public static int CRYPT_SEC_DESCR() {
        return (int)1L;
    }
    public static int CRYPT_PSTORE() {
        return (int)2L;
    }
    public static int CRYPT_UI_PROMPT() {
        return (int)4L;
    }
    public static int CRYPT_FLAG_PCT1() {
        return (int)1L;
    }
    public static int CRYPT_FLAG_SSL2() {
        return (int)2L;
    }
    public static int CRYPT_FLAG_SSL3() {
        return (int)4L;
    }
    public static int CRYPT_FLAG_TLS1() {
        return (int)8L;
    }
    public static int CRYPT_FLAG_IPSEC() {
        return (int)16L;
    }
    public static int CRYPT_FLAG_SIGNING() {
        return (int)32L;
    }
    public static int CRYPT_SGC() {
        return (int)1L;
    }
    public static int CRYPT_FASTSGC() {
        return (int)2L;
    }
    public static int PP_CLIENT_HWND() {
        return (int)1L;
    }
    public static int PP_CONTEXT_INFO() {
        return (int)11L;
    }
    public static int PP_KEYEXCHANGE_KEYSIZE() {
        return (int)12L;
    }
    public static int PP_SIGNATURE_KEYSIZE() {
        return (int)13L;
    }
    public static int PP_KEYEXCHANGE_ALG() {
        return (int)14L;
    }
    public static int PP_SIGNATURE_ALG() {
        return (int)15L;
    }
    public static int PP_DELETEKEY() {
        return (int)24L;
    }
    public static int PP_PIN_PROMPT_STRING() {
        return (int)44L;
    }
    public static int PP_SECURE_KEYEXCHANGE_PIN() {
        return (int)47L;
    }
    public static int PP_SECURE_SIGNATURE_PIN() {
        return (int)48L;
    }
    public static int PP_DISMISS_PIN_UI_SEC() {
        return (int)49L;
    }
    public static int PROV_RSA_FULL() {
        return (int)1L;
    }
    public static int PROV_RSA_SIG() {
        return (int)2L;
    }
    public static int PROV_DSS() {
        return (int)3L;
    }
    public static int PROV_FORTEZZA() {
        return (int)4L;
    }
    public static int PROV_MS_EXCHANGE() {
        return (int)5L;
    }
    public static int PROV_SSL() {
        return (int)6L;
    }
    public static int PROV_RSA_SCHANNEL() {
        return (int)12L;
    }
    public static int PROV_DSS_DH() {
        return (int)13L;
    }
    public static int PROV_EC_ECDSA_SIG() {
        return (int)14L;
    }
    public static int PROV_EC_ECNRA_SIG() {
        return (int)15L;
    }
    public static int PROV_EC_ECDSA_FULL() {
        return (int)16L;
    }
    public static int PROV_EC_ECNRA_FULL() {
        return (int)17L;
    }
    public static int PROV_DH_SCHANNEL() {
        return (int)18L;
    }
    public static int PROV_SPYRUS_LYNKS() {
        return (int)20L;
    }
    public static int PROV_RNG() {
        return (int)21L;
    }
    public static int PROV_INTEL_SEC() {
        return (int)22L;
    }
    public static int PROV_REPLACE_OWF() {
        return (int)23L;
    }
    public static int PROV_RSA_AES() {
        return (int)24L;
    }
    public static int MAXUIDLEN() {
        return (int)64L;
    }
    public static int cPRIV_KEY_CACHE_MAX_ITEMS_DEFAULT() {
        return (int)20L;
    }
    public static int cPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS_DEFAULT() {
        return (int)86400L;
    }
    public static int CUR_BLOB_VERSION() {
        return (int)2L;
    }
    public static int SCHANNEL_MAC_KEY() {
        return (int)0L;
    }
    public static int SCHANNEL_ENC_KEY() {
        return (int)1L;
    }
    public static int INTERNATIONAL_USAGE() {
        return (int)1L;
    }
    public static int CERT_RDN_ANY_TYPE() {
        return (int)0L;
    }
    public static int CERT_RDN_ENCODED_BLOB() {
        return (int)1L;
    }
    public static int CERT_RDN_OCTET_STRING() {
        return (int)2L;
    }
    public static int CERT_RDN_NUMERIC_STRING() {
        return (int)3L;
    }
    public static int CERT_RDN_PRINTABLE_STRING() {
        return (int)4L;
    }
    public static int CERT_RDN_TELETEX_STRING() {
        return (int)5L;
    }
    public static int CERT_RDN_T61_STRING() {
        return (int)5L;
    }
    public static int CERT_RDN_VIDEOTEX_STRING() {
        return (int)6L;
    }
    public static int CERT_RDN_IA5_STRING() {
        return (int)7L;
    }
    public static int CERT_RDN_GRAPHIC_STRING() {
        return (int)8L;
    }
    public static int CERT_RDN_VISIBLE_STRING() {
        return (int)9L;
    }
    public static int CERT_RDN_ISO646_STRING() {
        return (int)9L;
    }
    public static int CERT_RDN_GENERAL_STRING() {
        return (int)10L;
    }
    public static int CERT_RDN_UNIVERSAL_STRING() {
        return (int)11L;
    }
    public static int CERT_RDN_INT4_STRING() {
        return (int)11L;
    }
    public static int CERT_RDN_BMP_STRING() {
        return (int)12L;
    }
    public static int CERT_RDN_UNICODE_STRING() {
        return (int)12L;
    }
    public static int CERT_RDN_UTF8_STRING() {
        return (int)13L;
    }
    public static int CERT_RDN_TYPE_MASK() {
        return (int)255L;
    }
    public static int CERT_RDN_ENABLE_UTF8_UNICODE_FLAG() {
        return (int)536870912L;
    }
    public static int CERT_RDN_FORCE_UTF8_UNICODE_FLAG() {
        return (int)268435456L;
    }
    public static int CERT_RDN_DISABLE_CHECK_TYPE_FLAG() {
        return (int)1073741824L;
    }
    public static int CERT_RDN_DISABLE_IE4_UTF8_FLAG() {
        return (int)16777216L;
    }
    public static int CERT_RDN_ENABLE_PUNYCODE_FLAG() {
        return (int)33554432L;
    }
    public static int CRYPT_ECC_PRIVATE_KEY_INFO_v1() {
        return (int)1L;
    }
    public static int CERT_V1() {
        return (int)0L;
    }
    public static int CERT_V2() {
        return (int)1L;
    }
    public static int CERT_V3() {
        return (int)2L;
    }
    public static int CERT_INFO_VERSION_FLAG() {
        return (int)1L;
    }
    public static int CERT_INFO_SERIAL_NUMBER_FLAG() {
        return (int)2L;
    }
    public static int CERT_INFO_SIGNATURE_ALGORITHM_FLAG() {
        return (int)3L;
    }
    public static int CERT_INFO_ISSUER_FLAG() {
        return (int)4L;
    }
    public static int CERT_INFO_NOT_BEFORE_FLAG() {
        return (int)5L;
    }
    public static int CERT_INFO_NOT_AFTER_FLAG() {
        return (int)6L;
    }
    public static int CERT_INFO_SUBJECT_FLAG() {
        return (int)7L;
    }
    public static int CERT_INFO_SUBJECT_PUBLIC_KEY_INFO_FLAG() {
        return (int)8L;
    }
    public static int CERT_INFO_ISSUER_UNIQUE_ID_FLAG() {
        return (int)9L;
    }
    public static int CERT_INFO_SUBJECT_UNIQUE_ID_FLAG() {
        return (int)10L;
    }
    public static int CERT_INFO_EXTENSION_FLAG() {
        return (int)11L;
    }
    public static int CRL_V1() {
        return (int)0L;
    }
    public static int CRL_V2() {
        return (int)1L;
    }
    public static int CERT_BUNDLE_CERTIFICATE() {
        return (int)0L;
    }
    public static int CERT_BUNDLE_CRL() {
        return (int)1L;
    }
    public static int CERT_REQUEST_V1() {
        return (int)0L;
    }
    public static int CERT_KEYGEN_REQUEST_V1() {
        return (int)0L;
    }
    public static int CTL_V1() {
        return (int)0L;
    }
    public static int CERT_ENCODING_TYPE_MASK() {
        return (int)65535L;
    }
    public static int CRYPT_ASN_ENCODING() {
        return (int)1L;
    }
    public static int CRYPT_NDR_ENCODING() {
        return (int)2L;
    }
    public static int X509_ASN_ENCODING() {
        return (int)1L;
    }
    public static int X509_NDR_ENCODING() {
        return (int)2L;
    }
    public static int PKCS_7_ASN_ENCODING() {
        return (int)65536L;
    }
    public static int PKCS_7_NDR_ENCODING() {
        return (int)131072L;
    }
    public static int CRYPT_FORMAT_STR_MULTI_LINE() {
        return (int)1L;
    }
    public static int CRYPT_FORMAT_STR_NO_HEX() {
        return (int)16L;
    }
    public static int CRYPT_FORMAT_SIMPLE() {
        return (int)1L;
    }
    public static int CRYPT_FORMAT_X509() {
        return (int)2L;
    }
    public static int CRYPT_FORMAT_OID() {
        return (int)4L;
    }
    public static int CRYPT_FORMAT_RDN_SEMICOLON() {
        return (int)256L;
    }
    public static int CRYPT_FORMAT_RDN_CRLF() {
        return (int)512L;
    }
    public static int CRYPT_FORMAT_RDN_UNQUOTE() {
        return (int)1024L;
    }
    public static int CRYPT_FORMAT_RDN_REVERSE() {
        return (int)2048L;
    }
    public static int CRYPT_FORMAT_COMMA() {
        return (int)4096L;
    }
    public static int CRYPT_ENCODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG() {
        return (int)8L;
    }
    public static int CRYPT_ENCODE_ALLOC_FLAG() {
        return (int)32768L;
    }
    public static int CRYPT_SORTED_CTL_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG() {
        return (int)65536L;
    }
    public static int CRYPT_ENCODE_ENABLE_PUNYCODE_FLAG() {
        return (int)131072L;
    }
    public static int CRYPT_ENCODE_ENABLE_UTF8PERCENT_FLAG() {
        return (int)262144L;
    }
    public static int CRYPT_DECODE_NOCOPY_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_DECODE_TO_BE_SIGNED_FLAG() {
        return (int)2L;
    }
    public static int CRYPT_DECODE_SHARE_OID_STRING_FLAG() {
        return (int)4L;
    }
    public static int CRYPT_DECODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG() {
        return (int)8L;
    }
    public static int CRYPT_DECODE_ALLOC_FLAG() {
        return (int)32768L;
    }
    public static int CRYPT_DECODE_ENABLE_PUNYCODE_FLAG() {
        return (int)33554432L;
    }
    public static int CRYPT_DECODE_ENABLE_UTF8PERCENT_FLAG() {
        return (int)67108864L;
    }
    public static int CRYPT_ENCODE_DECODE_NONE() {
        return (int)0L;
    }
    public static int SITE_PIN_RULES_ALL_SUBDOMAINS_FLAG() {
        return (int)1L;
    }
    public static int CERT_ROOT_PROGRAM_FLAG_ORG() {
        return (int)128L;
    }
    public static int CERT_ROOT_PROGRAM_FLAG_LSC() {
        return (int)64L;
    }
    public static int CERT_ROOT_PROGRAM_FLAG_SUBJECT_LOGO() {
        return (int)32L;
    }
    public static int CERT_ROOT_PROGRAM_FLAG_OU() {
        return (int)16L;
    }
    public static int CERT_ROOT_PROGRAM_FLAG_ADDRESS() {
        return (int)8L;
    }
    public static int CERT_UNICODE_RDN_ERR_INDEX_MASK() {
        return (int)1023L;
    }
    public static int CERT_UNICODE_RDN_ERR_INDEX_SHIFT() {
        return (int)22L;
    }
    public static int CERT_UNICODE_ATTR_ERR_INDEX_MASK() {
        return (int)63L;
    }
    public static int CERT_UNICODE_ATTR_ERR_INDEX_SHIFT() {
        return (int)16L;
    }
    public static int CERT_UNICODE_VALUE_ERR_INDEX_MASK() {
        return (int)65535L;
    }
    public static int CERT_UNICODE_VALUE_ERR_INDEX_SHIFT() {
        return (int)0L;
    }
    public static int CERT_DIGITAL_SIGNATURE_KEY_USAGE() {
        return (int)128L;
    }
    public static int CERT_NON_REPUDIATION_KEY_USAGE() {
        return (int)64L;
    }
    public static int CERT_KEY_ENCIPHERMENT_KEY_USAGE() {
        return (int)32L;
    }
    public static int CERT_DATA_ENCIPHERMENT_KEY_USAGE() {
        return (int)16L;
    }
    public static int CERT_KEY_AGREEMENT_KEY_USAGE() {
        return (int)8L;
    }
    public static int CERT_KEY_CERT_SIGN_KEY_USAGE() {
        return (int)4L;
    }
    public static int CERT_OFFLINE_CRL_SIGN_KEY_USAGE() {
        return (int)2L;
    }
    public static int CERT_CRL_SIGN_KEY_USAGE() {
        return (int)2L;
    }
    public static int CERT_ENCIPHER_ONLY_KEY_USAGE() {
        return (int)1L;
    }
    public static int CERT_DECIPHER_ONLY_KEY_USAGE() {
        return (int)128L;
    }
    public static int CERT_ALT_NAME_OTHER_NAME() {
        return (int)1L;
    }
    public static int CERT_ALT_NAME_RFC822_NAME() {
        return (int)2L;
    }
    public static int CERT_ALT_NAME_DNS_NAME() {
        return (int)3L;
    }
    public static int CERT_ALT_NAME_X400_ADDRESS() {
        return (int)4L;
    }
    public static int CERT_ALT_NAME_DIRECTORY_NAME() {
        return (int)5L;
    }
    public static int CERT_ALT_NAME_EDI_PARTY_NAME() {
        return (int)6L;
    }
    public static int CERT_ALT_NAME_URL() {
        return (int)7L;
    }
    public static int CERT_ALT_NAME_IP_ADDRESS() {
        return (int)8L;
    }
    public static int CERT_ALT_NAME_REGISTERED_ID() {
        return (int)9L;
    }
    public static int CERT_ALT_NAME_ENTRY_ERR_INDEX_MASK() {
        return (int)255L;
    }
    public static int CERT_ALT_NAME_ENTRY_ERR_INDEX_SHIFT() {
        return (int)16L;
    }
    public static int CERT_ALT_NAME_VALUE_ERR_INDEX_MASK() {
        return (int)65535L;
    }
    public static int CERT_ALT_NAME_VALUE_ERR_INDEX_SHIFT() {
        return (int)0L;
    }
    public static int CERT_CA_SUBJECT_FLAG() {
        return (int)128L;
    }
    public static int CERT_END_ENTITY_SUBJECT_FLAG() {
        return (int)64L;
    }
    public static int CRL_REASON_UNSPECIFIED() {
        return (int)0L;
    }
    public static int CRL_REASON_KEY_COMPROMISE() {
        return (int)1L;
    }
    public static int CRL_REASON_CA_COMPROMISE() {
        return (int)2L;
    }
    public static int CRL_REASON_AFFILIATION_CHANGED() {
        return (int)3L;
    }
    public static int CRL_REASON_SUPERSEDED() {
        return (int)4L;
    }
    public static int CRL_REASON_CESSATION_OF_OPERATION() {
        return (int)5L;
    }
    public static int CRL_REASON_CERTIFICATE_HOLD() {
        return (int)6L;
    }
    public static int CRL_REASON_REMOVE_FROM_CRL() {
        return (int)8L;
    }
    public static int CRL_REASON_PRIVILEGE_WITHDRAWN() {
        return (int)9L;
    }
    public static int CRL_REASON_AA_COMPROMISE() {
        return (int)10L;
    }
    public static int CRL_DIST_POINT_NO_NAME() {
        return (int)0L;
    }
    public static int CRL_DIST_POINT_FULL_NAME() {
        return (int)1L;
    }
    public static int CRL_DIST_POINT_ISSUER_RDN_NAME() {
        return (int)2L;
    }
    public static int CRL_REASON_UNUSED_FLAG() {
        return (int)128L;
    }
    public static int CRL_REASON_KEY_COMPROMISE_FLAG() {
        return (int)64L;
    }
    public static int CRL_REASON_CA_COMPROMISE_FLAG() {
        return (int)32L;
    }
    public static int CRL_REASON_AFFILIATION_CHANGED_FLAG() {
        return (int)16L;
    }
    public static int CRL_REASON_SUPERSEDED_FLAG() {
        return (int)8L;
    }
    public static int CRL_REASON_CESSATION_OF_OPERATION_FLAG() {
        return (int)4L;
    }
    public static int CRL_REASON_CERTIFICATE_HOLD_FLAG() {
        return (int)2L;
    }
    public static int CRL_REASON_PRIVILEGE_WITHDRAWN_FLAG() {
        return (int)1L;
    }
    public static int CRL_REASON_AA_COMPROMISE_FLAG() {
        return (int)128L;
    }
    public static int CRL_DIST_POINT_ERR_INDEX_MASK() {
        return (int)127L;
    }
    public static int CRL_DIST_POINT_ERR_INDEX_SHIFT() {
        return (int)24L;
    }
    public static int CROSS_CERT_DIST_POINT_ERR_INDEX_MASK() {
        return (int)255L;
    }
    public static int CROSS_CERT_DIST_POINT_ERR_INDEX_SHIFT() {
        return (int)24L;
    }
    public static int SORTED_CTL_EXT_HASHED_SUBJECT_IDENTIFIER_FLAG() {
        return (int)1L;
    }
    public static int CERT_DSS_R_LEN() {
        return (int)20L;
    }
    public static int CERT_DSS_S_LEN() {
        return (int)20L;
    }
    public static int CRYPT_X942_COUNTER_BYTE_LENGTH() {
        return (int)4L;
    }
    public static int CRYPT_X942_KEY_LENGTH_BYTE_LENGTH() {
        return (int)4L;
    }
    public static int CRYPT_ECC_CMS_SHARED_INFO_SUPPPUBINFO_BYTE_LENGTH() {
        return (int)4L;
    }
    public static int CRYPT_RC2_40BIT_VERSION() {
        return (int)160L;
    }
    public static int CRYPT_RC2_56BIT_VERSION() {
        return (int)52L;
    }
    public static int CRYPT_RC2_64BIT_VERSION() {
        return (int)120L;
    }
    public static int CRYPT_RC2_128BIT_VERSION() {
        return (int)58L;
    }
    public static int PKCS_RSA_SSA_PSS_TRAILER_FIELD_BC() {
        return (int)1L;
    }
    public static int NETSCAPE_SSL_CLIENT_AUTH_CERT_TYPE() {
        return (int)128L;
    }
    public static int NETSCAPE_SSL_SERVER_AUTH_CERT_TYPE() {
        return (int)64L;
    }
    public static int NETSCAPE_SMIME_CERT_TYPE() {
        return (int)32L;
    }
    public static int NETSCAPE_SIGN_CERT_TYPE() {
        return (int)16L;
    }
    public static int NETSCAPE_SSL_CA_CERT_TYPE() {
        return (int)4L;
    }
    public static int NETSCAPE_SMIME_CA_CERT_TYPE() {
        return (int)2L;
    }
    public static int NETSCAPE_SIGN_CA_CERT_TYPE() {
        return (int)1L;
    }
    public static int CMC_TAGGED_CERT_REQUEST_CHOICE() {
        return (int)1L;
    }
    public static int CMC_OTHER_INFO_NO_CHOICE() {
        return (int)0L;
    }
    public static int CMC_OTHER_INFO_FAIL_CHOICE() {
        return (int)1L;
    }
    public static int CMC_OTHER_INFO_PEND_CHOICE() {
        return (int)2L;
    }
    public static int CMC_STATUS_SUCCESS() {
        return (int)0L;
    }
    public static int CMC_STATUS_FAILED() {
        return (int)2L;
    }
    public static int CMC_STATUS_PENDING() {
        return (int)3L;
    }
    public static int CMC_STATUS_NO_SUPPORT() {
        return (int)4L;
    }
    public static int CMC_STATUS_CONFIRM_REQUIRED() {
        return (int)5L;
    }
    public static int CMC_FAIL_BAD_ALG() {
        return (int)0L;
    }
    public static int CMC_FAIL_BAD_MESSAGE_CHECK() {
        return (int)1L;
    }
    public static int CMC_FAIL_BAD_REQUEST() {
        return (int)2L;
    }
    public static int CMC_FAIL_BAD_TIME() {
        return (int)3L;
    }
    public static int CMC_FAIL_BAD_CERT_ID() {
        return (int)4L;
    }
    public static int CMC_FAIL_UNSUPORTED_EXT() {
        return (int)5L;
    }
    public static int CMC_FAIL_MUST_ARCHIVE_KEYS() {
        return (int)6L;
    }
    public static int CMC_FAIL_BAD_IDENTITY() {
        return (int)7L;
    }
    public static int CMC_FAIL_POP_REQUIRED() {
        return (int)8L;
    }
    public static int CMC_FAIL_POP_FAILED() {
        return (int)9L;
    }
    public static int CMC_FAIL_NO_KEY_REUSE() {
        return (int)10L;
    }
    public static int CMC_FAIL_INTERNAL_CA_ERROR() {
        return (int)11L;
    }
    public static int CMC_FAIL_TRY_LATER() {
        return (int)12L;
    }
    public static int CERT_LOGOTYPE_GRAY_SCALE_IMAGE_INFO_CHOICE() {
        return (int)1L;
    }
    public static int CERT_LOGOTYPE_COLOR_IMAGE_INFO_CHOICE() {
        return (int)2L;
    }
    public static int CERT_LOGOTYPE_NO_IMAGE_RESOLUTION_CHOICE() {
        return (int)0L;
    }
    public static int CERT_LOGOTYPE_BITS_IMAGE_RESOLUTION_CHOICE() {
        return (int)1L;
    }
    public static int CERT_LOGOTYPE_TABLE_SIZE_IMAGE_RESOLUTION_CHOICE() {
        return (int)2L;
    }
    public static int CERT_LOGOTYPE_DIRECT_INFO_CHOICE() {
        return (int)1L;
    }
    public static int CERT_LOGOTYPE_INDIRECT_INFO_CHOICE() {
        return (int)2L;
    }
    public static int CERT_BIOMETRIC_PREDEFINED_DATA_CHOICE() {
        return (int)1L;
    }
    public static int CERT_BIOMETRIC_OID_DATA_CHOICE() {
        return (int)2L;
    }
    public static int CERT_BIOMETRIC_PICTURE_TYPE() {
        return (int)0L;
    }
    public static int CERT_BIOMETRIC_SIGNATURE_TYPE() {
        return (int)1L;
    }
    public static int OCSP_REQUEST_V1() {
        return (int)0L;
    }
    public static int OCSP_SUCCESSFUL_RESPONSE() {
        return (int)0L;
    }
    public static int OCSP_MALFORMED_REQUEST_RESPONSE() {
        return (int)1L;
    }
    public static int OCSP_INTERNAL_ERROR_RESPONSE() {
        return (int)2L;
    }
    public static int OCSP_TRY_LATER_RESPONSE() {
        return (int)3L;
    }
    public static int OCSP_SIG_REQUIRED_RESPONSE() {
        return (int)5L;
    }
    public static int OCSP_UNAUTHORIZED_RESPONSE() {
        return (int)6L;
    }
    public static int OCSP_BASIC_GOOD_CERT_STATUS() {
        return (int)0L;
    }
    public static int OCSP_BASIC_REVOKED_CERT_STATUS() {
        return (int)1L;
    }
    public static int OCSP_BASIC_UNKNOWN_CERT_STATUS() {
        return (int)2L;
    }
    public static int OCSP_BASIC_RESPONSE_V1() {
        return (int)0L;
    }
    public static int OCSP_BASIC_BY_NAME_RESPONDER_ID() {
        return (int)1L;
    }
    public static int OCSP_BASIC_BY_KEY_RESPONDER_ID() {
        return (int)2L;
    }
    public static int CRYPT_INSTALL_OID_FUNC_BEFORE_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_GET_INSTALLED_OID_FUNC_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_REGISTER_FIRST_INDEX() {
        return (int)0L;
    }
    public static int CRYPT_HASH_ALG_OID_GROUP_ID() {
        return (int)1L;
    }
    public static int CRYPT_ENCRYPT_ALG_OID_GROUP_ID() {
        return (int)2L;
    }
    public static int CRYPT_PUBKEY_ALG_OID_GROUP_ID() {
        return (int)3L;
    }
    public static int CRYPT_SIGN_ALG_OID_GROUP_ID() {
        return (int)4L;
    }
    public static int CRYPT_RDN_ATTR_OID_GROUP_ID() {
        return (int)5L;
    }
    public static int CRYPT_EXT_OR_ATTR_OID_GROUP_ID() {
        return (int)6L;
    }
    public static int CRYPT_ENHKEY_USAGE_OID_GROUP_ID() {
        return (int)7L;
    }
    public static int CRYPT_POLICY_OID_GROUP_ID() {
        return (int)8L;
    }
    public static int CRYPT_TEMPLATE_OID_GROUP_ID() {
        return (int)9L;
    }
    public static int CRYPT_KDF_OID_GROUP_ID() {
        return (int)10L;
    }
    public static int CRYPT_LAST_OID_GROUP_ID() {
        return (int)10L;
    }
    public static int CRYPT_OID_INHIBIT_SIGNATURE_FORMAT_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_OID_USE_PUBKEY_PARA_FOR_PKCS7_FLAG() {
        return (int)2L;
    }
    public static int CRYPT_OID_NO_NULL_ALGORITHM_PARA_FLAG() {
        return (int)4L;
    }
    public static int CRYPT_OID_PUBKEY_ENCRYPT_ONLY_FLAG() {
        return (int)1073741824L;
    }
    public static int CRYPT_OID_USE_CURVE_NAME_FOR_ENCODE_FLAG() {
        return (int)536870912L;
    }
    public static int CRYPT_OID_USE_CURVE_PARAMETERS_FOR_ENCODE_FLAG() {
        return (int)268435456L;
    }
    public static int CRYPT_OID_INFO_OID_KEY() {
        return (int)1L;
    }
    public static int CRYPT_OID_INFO_NAME_KEY() {
        return (int)2L;
    }
    public static int CRYPT_OID_INFO_ALGID_KEY() {
        return (int)3L;
    }
    public static int CRYPT_OID_INFO_SIGN_KEY() {
        return (int)4L;
    }
    public static int CRYPT_OID_INFO_CNG_ALGID_KEY() {
        return (int)5L;
    }
    public static int CRYPT_OID_INFO_CNG_SIGN_KEY() {
        return (int)6L;
    }
    public static int CRYPT_OID_INFO_PUBKEY_ENCRYPT_KEY_FLAG() {
        return (int)1073741824L;
    }
    public static int CRYPT_OID_INFO_OID_GROUP_BIT_LEN_MASK() {
        return (int)268369920L;
    }
    public static int CRYPT_OID_INFO_OID_GROUP_BIT_LEN_SHIFT() {
        return (int)16L;
    }
    public static int CRYPT_INSTALL_OID_INFO_BEFORE_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_LOCALIZED_NAME_ENCODING_TYPE() {
        return (int)0L;
    }
    public static int CERT_STRONG_SIGN_SERIALIZED_INFO_CHOICE() {
        return (int)1L;
    }
    public static int CERT_STRONG_SIGN_OID_INFO_CHOICE() {
        return (int)2L;
    }
    public static int CERT_STRONG_SIGN_ENABLE_CRL_CHECK() {
        return (int)1L;
    }
    public static int CERT_STRONG_SIGN_ENABLE_OCSP_CHECK() {
        return (int)2L;
    }
    public static int CMSG_DATA() {
        return (int)1L;
    }
    public static int CMSG_SIGNED() {
        return (int)2L;
    }
    public static int CMSG_ENVELOPED() {
        return (int)3L;
    }
    public static int CMSG_SIGNED_AND_ENVELOPED() {
        return (int)4L;
    }
    public static int CMSG_HASHED() {
        return (int)5L;
    }
    public static int CMSG_ENCRYPTED() {
        return (int)6L;
    }
    public static int CERT_ID_ISSUER_SERIAL_NUMBER() {
        return (int)1L;
    }
    public static int CERT_ID_KEY_IDENTIFIER() {
        return (int)2L;
    }
    public static int CERT_ID_SHA1_HASH() {
        return (int)3L;
    }
    public static int CMSG_KEY_AGREE_EPHEMERAL_KEY_CHOICE() {
        return (int)1L;
    }
    public static int CMSG_KEY_AGREE_STATIC_KEY_CHOICE() {
        return (int)2L;
    }
    public static int CMSG_MAIL_LIST_HANDLE_KEY_CHOICE() {
        return (int)1L;
    }
    public static int CMSG_KEY_TRANS_RECIPIENT() {
        return (int)1L;
    }
    public static int CMSG_KEY_AGREE_RECIPIENT() {
        return (int)2L;
    }
    public static int CMSG_MAIL_LIST_RECIPIENT() {
        return (int)3L;
    }
    public static int CMSG_RC4_NO_SALT_FLAG() {
        return (int)1073741824L;
    }
    public static int CMSG_BARE_CONTENT_FLAG() {
        return (int)1L;
    }
    public static int CMSG_LENGTH_ONLY_FLAG() {
        return (int)2L;
    }
    public static int CMSG_DETACHED_FLAG() {
        return (int)4L;
    }
    public static int CMSG_AUTHENTICATED_ATTRIBUTES_FLAG() {
        return (int)8L;
    }
    public static int CMSG_CONTENTS_OCTETS_FLAG() {
        return (int)16L;
    }
    public static int CMSG_MAX_LENGTH_FLAG() {
        return (int)32L;
    }
    public static int CMSG_CMS_ENCAPSULATED_CONTENT_FLAG() {
        return (int)64L;
    }
    public static int CMSG_SIGNED_DATA_NO_SIGN_FLAG() {
        return (int)128L;
    }
    public static int CMSG_CRYPT_RELEASE_CONTEXT_FLAG() {
        return (int)32768L;
    }
    public static int CMSG_TYPE_PARAM() {
        return (int)1L;
    }
    public static int CMSG_CONTENT_PARAM() {
        return (int)2L;
    }
    public static int CMSG_BARE_CONTENT_PARAM() {
        return (int)3L;
    }
    public static int CMSG_INNER_CONTENT_TYPE_PARAM() {
        return (int)4L;
    }
    public static int CMSG_SIGNER_COUNT_PARAM() {
        return (int)5L;
    }
    public static int CMSG_SIGNER_INFO_PARAM() {
        return (int)6L;
    }
    public static int CMSG_SIGNER_CERT_INFO_PARAM() {
        return (int)7L;
    }
    public static int CMSG_SIGNER_HASH_ALGORITHM_PARAM() {
        return (int)8L;
    }
    public static int CMSG_SIGNER_AUTH_ATTR_PARAM() {
        return (int)9L;
    }
    public static int CMSG_SIGNER_UNAUTH_ATTR_PARAM() {
        return (int)10L;
    }
    public static int CMSG_CERT_COUNT_PARAM() {
        return (int)11L;
    }
    public static int CMSG_CERT_PARAM() {
        return (int)12L;
    }
    public static int CMSG_CRL_COUNT_PARAM() {
        return (int)13L;
    }
    public static int CMSG_CRL_PARAM() {
        return (int)14L;
    }
    public static int CMSG_ENVELOPE_ALGORITHM_PARAM() {
        return (int)15L;
    }
    public static int CMSG_RECIPIENT_COUNT_PARAM() {
        return (int)17L;
    }
    public static int CMSG_RECIPIENT_INDEX_PARAM() {
        return (int)18L;
    }
    public static int CMSG_RECIPIENT_INFO_PARAM() {
        return (int)19L;
    }
    public static int CMSG_HASH_ALGORITHM_PARAM() {
        return (int)20L;
    }
    public static int CMSG_HASH_DATA_PARAM() {
        return (int)21L;
    }
    public static int CMSG_COMPUTED_HASH_PARAM() {
        return (int)22L;
    }
    public static int CMSG_ENCRYPT_PARAM() {
        return (int)26L;
    }
    public static int CMSG_ENCRYPTED_DIGEST() {
        return (int)27L;
    }
    public static int CMSG_ENCODED_SIGNER() {
        return (int)28L;
    }
    public static int CMSG_ENCODED_MESSAGE() {
        return (int)29L;
    }
    public static int CMSG_VERSION_PARAM() {
        return (int)30L;
    }
    public static int CMSG_ATTR_CERT_COUNT_PARAM() {
        return (int)31L;
    }
    public static int CMSG_ATTR_CERT_PARAM() {
        return (int)32L;
    }
    public static int CMSG_CMS_RECIPIENT_COUNT_PARAM() {
        return (int)33L;
    }
    public static int CMSG_CMS_RECIPIENT_INDEX_PARAM() {
        return (int)34L;
    }
    public static int CMSG_CMS_RECIPIENT_ENCRYPTED_KEY_INDEX_PARAM() {
        return (int)35L;
    }
    public static int CMSG_CMS_RECIPIENT_INFO_PARAM() {
        return (int)36L;
    }
    public static int CMSG_UNPROTECTED_ATTR_PARAM() {
        return (int)37L;
    }
    public static int CMSG_SIGNER_CERT_ID_PARAM() {
        return (int)38L;
    }
    public static int CMSG_CMS_SIGNER_INFO_PARAM() {
        return (int)39L;
    }
    public static int CMSG_SIGNED_DATA_V1() {
        return (int)1L;
    }
    public static int CMSG_SIGNED_DATA_V3() {
        return (int)3L;
    }
    public static int CMSG_SIGNER_INFO_V1() {
        return (int)1L;
    }
    public static int CMSG_SIGNER_INFO_V3() {
        return (int)3L;
    }
    public static int CMSG_HASHED_DATA_V0() {
        return (int)0L;
    }
    public static int CMSG_HASHED_DATA_V2() {
        return (int)2L;
    }
    public static int CMSG_ENVELOPED_DATA_V0() {
        return (int)0L;
    }
    public static int CMSG_ENVELOPED_DATA_V2() {
        return (int)2L;
    }
    public static int CMSG_KEY_AGREE_ORIGINATOR_CERT() {
        return (int)1L;
    }
    public static int CMSG_KEY_AGREE_ORIGINATOR_PUBLIC_KEY() {
        return (int)2L;
    }
    public static int CMSG_ENVELOPED_RECIPIENT_V0() {
        return (int)0L;
    }
    public static int CMSG_ENVELOPED_RECIPIENT_V2() {
        return (int)2L;
    }
    public static int CMSG_ENVELOPED_RECIPIENT_V3() {
        return (int)3L;
    }
    public static int CMSG_ENVELOPED_RECIPIENT_V4() {
        return (int)4L;
    }
    public static int CMSG_CTRL_VERIFY_SIGNATURE() {
        return (int)1L;
    }
    public static int CMSG_CTRL_DECRYPT() {
        return (int)2L;
    }
    public static int CMSG_CTRL_VERIFY_HASH() {
        return (int)5L;
    }
    public static int CMSG_CTRL_ADD_SIGNER() {
        return (int)6L;
    }
    public static int CMSG_CTRL_DEL_SIGNER() {
        return (int)7L;
    }
    public static int CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR() {
        return (int)8L;
    }
    public static int CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR() {
        return (int)9L;
    }
    public static int CMSG_CTRL_ADD_CERT() {
        return (int)10L;
    }
    public static int CMSG_CTRL_DEL_CERT() {
        return (int)11L;
    }
    public static int CMSG_CTRL_ADD_CRL() {
        return (int)12L;
    }
    public static int CMSG_CTRL_DEL_CRL() {
        return (int)13L;
    }
    public static int CMSG_CTRL_ADD_ATTR_CERT() {
        return (int)14L;
    }
    public static int CMSG_CTRL_DEL_ATTR_CERT() {
        return (int)15L;
    }
    public static int CMSG_CTRL_KEY_TRANS_DECRYPT() {
        return (int)16L;
    }
    public static int CMSG_CTRL_KEY_AGREE_DECRYPT() {
        return (int)17L;
    }
    public static int CMSG_CTRL_MAIL_LIST_DECRYPT() {
        return (int)18L;
    }
    public static int CMSG_CTRL_VERIFY_SIGNATURE_EX() {
        return (int)19L;
    }
    public static int CMSG_CTRL_ADD_CMS_SIGNER_INFO() {
        return (int)20L;
    }
    public static int CMSG_CTRL_ENABLE_STRONG_SIGNATURE() {
        return (int)21L;
    }
    public static int CMSG_VERIFY_SIGNER_PUBKEY() {
        return (int)1L;
    }
    public static int CMSG_VERIFY_SIGNER_CERT() {
        return (int)2L;
    }
    public static int CMSG_VERIFY_SIGNER_CHAIN() {
        return (int)3L;
    }
    public static int CMSG_VERIFY_SIGNER_NULL() {
        return (int)4L;
    }
    public static int CMSG_VERIFY_COUNTER_SIGN_ENABLE_STRONG_FLAG() {
        return (int)1L;
    }
    public static int CMSG_CONTENT_ENCRYPT_PAD_ENCODED_LEN_FLAG() {
        return (int)1L;
    }
    public static int CMSG_CONTENT_ENCRYPT_FREE_PARA_FLAG() {
        return (int)1L;
    }
    public static int CMSG_CONTENT_ENCRYPT_FREE_OBJID_FLAG() {
        return (int)2L;
    }
    public static int CMSG_CONTENT_ENCRYPT_RELEASE_CONTEXT_FLAG() {
        return (int)32768L;
    }
    public static int CMSG_KEY_TRANS_ENCRYPT_FREE_PARA_FLAG() {
        return (int)1L;
    }
    public static int CMSG_KEY_TRANS_ENCRYPT_FREE_OBJID_FLAG() {
        return (int)2L;
    }
    public static int CMSG_KEY_AGREE_ENCRYPT_FREE_PARA_FLAG() {
        return (int)1L;
    }
    public static int CMSG_KEY_AGREE_ENCRYPT_FREE_MATERIAL_FLAG() {
        return (int)2L;
    }
    public static int CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_ALG_FLAG() {
        return (int)4L;
    }
    public static int CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_PARA_FLAG() {
        return (int)8L;
    }
    public static int CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_BITS_FLAG() {
        return (int)16L;
    }
    public static int CMSG_KEY_AGREE_ENCRYPT_FREE_OBJID_FLAG() {
        return (int)32L;
    }
    public static int CMSG_MAIL_LIST_ENCRYPT_FREE_PARA_FLAG() {
        return (int)1L;
    }
    public static int CMSG_MAIL_LIST_ENCRYPT_FREE_OBJID_FLAG() {
        return (int)2L;
    }
    public static int CERT_KEY_PROV_HANDLE_PROP_ID() {
        return (int)1L;
    }
    public static int CERT_KEY_PROV_INFO_PROP_ID() {
        return (int)2L;
    }
    public static int CERT_SHA1_HASH_PROP_ID() {
        return (int)3L;
    }
    public static int CERT_MD5_HASH_PROP_ID() {
        return (int)4L;
    }
    public static int CERT_KEY_CONTEXT_PROP_ID() {
        return (int)5L;
    }
    public static int CERT_KEY_SPEC_PROP_ID() {
        return (int)6L;
    }
    public static int CERT_IE30_RESERVED_PROP_ID() {
        return (int)7L;
    }
    public static int CERT_PUBKEY_HASH_RESERVED_PROP_ID() {
        return (int)8L;
    }
    public static int CERT_ENHKEY_USAGE_PROP_ID() {
        return (int)9L;
    }
    public static int CERT_NEXT_UPDATE_LOCATION_PROP_ID() {
        return (int)10L;
    }
    public static int CERT_FRIENDLY_NAME_PROP_ID() {
        return (int)11L;
    }
    public static int CERT_PVK_FILE_PROP_ID() {
        return (int)12L;
    }
    public static int CERT_DESCRIPTION_PROP_ID() {
        return (int)13L;
    }
    public static int CERT_ACCESS_STATE_PROP_ID() {
        return (int)14L;
    }
    public static int CERT_SIGNATURE_HASH_PROP_ID() {
        return (int)15L;
    }
    public static int CERT_SMART_CARD_DATA_PROP_ID() {
        return (int)16L;
    }
    public static int CERT_EFS_PROP_ID() {
        return (int)17L;
    }
    public static int CERT_FORTEZZA_DATA_PROP_ID() {
        return (int)18L;
    }
    public static int CERT_ARCHIVED_PROP_ID() {
        return (int)19L;
    }
    public static int CERT_KEY_IDENTIFIER_PROP_ID() {
        return (int)20L;
    }
    public static int CERT_AUTO_ENROLL_PROP_ID() {
        return (int)21L;
    }
    public static int CERT_PUBKEY_ALG_PARA_PROP_ID() {
        return (int)22L;
    }
    public static int CERT_CROSS_CERT_DIST_POINTS_PROP_ID() {
        return (int)23L;
    }
    public static int CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID() {
        return (int)24L;
    }
    public static int CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID() {
        return (int)25L;
    }
    public static int CERT_ENROLLMENT_PROP_ID() {
        return (int)26L;
    }
    public static int CERT_DATE_STAMP_PROP_ID() {
        return (int)27L;
    }
    public static int CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID() {
        return (int)28L;
    }
    public static int CERT_SUBJECT_NAME_MD5_HASH_PROP_ID() {
        return (int)29L;
    }
    public static int CERT_EXTENDED_ERROR_INFO_PROP_ID() {
        return (int)30L;
    }
    public static int CERT_RENEWAL_PROP_ID() {
        return (int)64L;
    }
    public static int CERT_ARCHIVED_KEY_HASH_PROP_ID() {
        return (int)65L;
    }
    public static int CERT_AUTO_ENROLL_RETRY_PROP_ID() {
        return (int)66L;
    }
    public static int CERT_AIA_URL_RETRIEVED_PROP_ID() {
        return (int)67L;
    }
    public static int CERT_AUTHORITY_INFO_ACCESS_PROP_ID() {
        return (int)68L;
    }
    public static int CERT_BACKED_UP_PROP_ID() {
        return (int)69L;
    }
    public static int CERT_OCSP_RESPONSE_PROP_ID() {
        return (int)70L;
    }
    public static int CERT_REQUEST_ORIGINATOR_PROP_ID() {
        return (int)71L;
    }
    public static int CERT_SOURCE_LOCATION_PROP_ID() {
        return (int)72L;
    }
    public static int CERT_SOURCE_URL_PROP_ID() {
        return (int)73L;
    }
    public static int CERT_NEW_KEY_PROP_ID() {
        return (int)74L;
    }
    public static int CERT_OCSP_CACHE_PREFIX_PROP_ID() {
        return (int)75L;
    }
    public static int CERT_SMART_CARD_ROOT_INFO_PROP_ID() {
        return (int)76L;
    }
    public static int CERT_NO_AUTO_EXPIRE_CHECK_PROP_ID() {
        return (int)77L;
    }
    public static int CERT_NCRYPT_KEY_HANDLE_PROP_ID() {
        return (int)78L;
    }
    public static int CERT_HCRYPTPROV_OR_NCRYPT_KEY_HANDLE_PROP_ID() {
        return (int)79L;
    }
    public static int CERT_SUBJECT_INFO_ACCESS_PROP_ID() {
        return (int)80L;
    }
    public static int CERT_CA_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID() {
        return (int)81L;
    }
    public static int CERT_CA_DISABLE_CRL_PROP_ID() {
        return (int)82L;
    }
    public static int CERT_ROOT_PROGRAM_CERT_POLICIES_PROP_ID() {
        return (int)83L;
    }
    public static int CERT_ROOT_PROGRAM_NAME_CONSTRAINTS_PROP_ID() {
        return (int)84L;
    }
    public static int CERT_SUBJECT_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID() {
        return (int)85L;
    }
    public static int CERT_SUBJECT_DISABLE_CRL_PROP_ID() {
        return (int)86L;
    }
    public static int CERT_CEP_PROP_ID() {
        return (int)87L;
    }
    public static int CERT_SIGN_HASH_CNG_ALG_PROP_ID() {
        return (int)89L;
    }
    public static int CERT_SCARD_PIN_ID_PROP_ID() {
        return (int)90L;
    }
    public static int CERT_SCARD_PIN_INFO_PROP_ID() {
        return (int)91L;
    }
    public static int CERT_SUBJECT_PUB_KEY_BIT_LENGTH_PROP_ID() {
        return (int)92L;
    }
    public static int CERT_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID() {
        return (int)93L;
    }
    public static int CERT_ISSUER_PUB_KEY_BIT_LENGTH_PROP_ID() {
        return (int)94L;
    }
    public static int CERT_ISSUER_CHAIN_SIGN_HASH_CNG_ALG_PROP_ID() {
        return (int)95L;
    }
    public static int CERT_ISSUER_CHAIN_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID() {
        return (int)96L;
    }
    public static int CERT_NO_EXPIRE_NOTIFICATION_PROP_ID() {
        return (int)97L;
    }
    public static int CERT_AUTH_ROOT_SHA256_HASH_PROP_ID() {
        return (int)98L;
    }
    public static int CERT_NCRYPT_KEY_HANDLE_TRANSFER_PROP_ID() {
        return (int)99L;
    }
    public static int CERT_HCRYPTPROV_TRANSFER_PROP_ID() {
        return (int)100L;
    }
    public static int CERT_SMART_CARD_READER_PROP_ID() {
        return (int)101L;
    }
    public static int CERT_SEND_AS_TRUSTED_ISSUER_PROP_ID() {
        return (int)102L;
    }
    public static int CERT_KEY_REPAIR_ATTEMPTED_PROP_ID() {
        return (int)103L;
    }
    public static int CERT_DISALLOWED_FILETIME_PROP_ID() {
        return (int)104L;
    }
    public static int CERT_ROOT_PROGRAM_CHAIN_POLICIES_PROP_ID() {
        return (int)105L;
    }
    public static int CERT_SMART_CARD_READER_NON_REMOVABLE_PROP_ID() {
        return (int)106L;
    }
    public static int CERT_SHA256_HASH_PROP_ID() {
        return (int)107L;
    }
    public static int CERT_SCEP_SERVER_CERTS_PROP_ID() {
        return (int)108L;
    }
    public static int CERT_SCEP_RA_SIGNATURE_CERT_PROP_ID() {
        return (int)109L;
    }
    public static int CERT_SCEP_RA_ENCRYPTION_CERT_PROP_ID() {
        return (int)110L;
    }
    public static int CERT_SCEP_CA_CERT_PROP_ID() {
        return (int)111L;
    }
    public static int CERT_SCEP_SIGNER_CERT_PROP_ID() {
        return (int)112L;
    }
    public static int CERT_SCEP_NONCE_PROP_ID() {
        return (int)113L;
    }
    public static int CERT_SCEP_ENCRYPT_HASH_CNG_ALG_PROP_ID() {
        return (int)114L;
    }
    public static int CERT_SCEP_FLAGS_PROP_ID() {
        return (int)115L;
    }
    public static int CERT_SCEP_GUID_PROP_ID() {
        return (int)116L;
    }
    public static int CERT_SERIALIZABLE_KEY_CONTEXT_PROP_ID() {
        return (int)117L;
    }
    public static int CERT_ISOLATED_KEY_PROP_ID() {
        return (int)118L;
    }
    public static int CERT_SERIAL_CHAIN_PROP_ID() {
        return (int)119L;
    }
    public static int CERT_KEY_CLASSIFICATION_PROP_ID() {
        return (int)120L;
    }
    public static int CERT_OCSP_MUST_STAPLE_PROP_ID() {
        return (int)121L;
    }
    public static int CERT_DISALLOWED_ENHKEY_USAGE_PROP_ID() {
        return (int)122L;
    }
    public static int CERT_NONCOMPLIANT_ROOT_URL_PROP_ID() {
        return (int)123L;
    }
    public static int CERT_PIN_SHA256_HASH_PROP_ID() {
        return (int)124L;
    }
    public static int CERT_CLR_DELETE_KEY_PROP_ID() {
        return (int)125L;
    }
    public static int CERT_NOT_BEFORE_FILETIME_PROP_ID() {
        return (int)126L;
    }
    public static int CERT_NOT_BEFORE_ENHKEY_USAGE_PROP_ID() {
        return (int)127L;
    }
    public static int CERT_FIRST_RESERVED_PROP_ID() {
        return (int)128L;
    }
    public static int CERT_LAST_RESERVED_PROP_ID() {
        return (int)32767L;
    }
    public static int CERT_FIRST_USER_PROP_ID() {
        return (int)32768L;
    }
    public static int CERT_LAST_USER_PROP_ID() {
        return (int)65535L;
    }
    public static int CERT_ACCESS_STATE_WRITE_PERSIST_FLAG() {
        return (int)1L;
    }
    public static int CERT_ACCESS_STATE_SYSTEM_STORE_FLAG() {
        return (int)2L;
    }
    public static int CERT_ACCESS_STATE_LM_SYSTEM_STORE_FLAG() {
        return (int)4L;
    }
    public static int CERT_ACCESS_STATE_GP_SYSTEM_STORE_FLAG() {
        return (int)8L;
    }
    public static int CERT_ACCESS_STATE_SHARED_USER_FLAG() {
        return (int)16L;
    }
    public static int CERT_SET_KEY_PROV_HANDLE_PROP_ID() {
        return (int)1L;
    }
    public static int CERT_SET_KEY_CONTEXT_PROP_ID() {
        return (int)1L;
    }
    public static int CERT_STORE_SIGNATURE_FLAG() {
        return (int)1L;
    }
    public static int CERT_STORE_TIME_VALIDITY_FLAG() {
        return (int)2L;
    }
    public static int CERT_STORE_REVOCATION_FLAG() {
        return (int)4L;
    }
    public static int CERT_STORE_NO_CRL_FLAG() {
        return (int)65536L;
    }
    public static int CERT_STORE_NO_ISSUER_FLAG() {
        return (int)131072L;
    }
    public static int CERT_STORE_BASE_CRL_FLAG() {
        return (int)256L;
    }
    public static int CERT_STORE_DELTA_CRL_FLAG() {
        return (int)512L;
    }
    public static int CERT_STORE_NO_CRYPT_RELEASE_FLAG() {
        return (int)1L;
    }
    public static int CERT_STORE_SET_LOCALIZED_NAME_FLAG() {
        return (int)2L;
    }
    public static int CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG() {
        return (int)4L;
    }
    public static int CERT_STORE_DELETE_FLAG() {
        return (int)16L;
    }
    public static int CERT_STORE_UNSAFE_PHYSICAL_FLAG() {
        return (int)32L;
    }
    public static int CERT_STORE_SHARE_STORE_FLAG() {
        return (int)64L;
    }
    public static int CERT_STORE_SHARE_CONTEXT_FLAG() {
        return (int)128L;
    }
    public static int CERT_STORE_MANIFOLD_FLAG() {
        return (int)256L;
    }
    public static int CERT_STORE_ENUM_ARCHIVED_FLAG() {
        return (int)512L;
    }
    public static int CERT_STORE_UPDATE_KEYID_FLAG() {
        return (int)1024L;
    }
    public static int CERT_STORE_BACKUP_RESTORE_FLAG() {
        return (int)2048L;
    }
    public static int CERT_STORE_READONLY_FLAG() {
        return (int)32768L;
    }
    public static int CERT_STORE_OPEN_EXISTING_FLAG() {
        return (int)16384L;
    }
    public static int CERT_STORE_CREATE_NEW_FLAG() {
        return (int)8192L;
    }
    public static int CERT_STORE_MAXIMUM_ALLOWED_FLAG() {
        return (int)4096L;
    }
    public static int CERT_SYSTEM_STORE_UNPROTECTED_FLAG() {
        return (int)1073741824L;
    }
    public static int CERT_SYSTEM_STORE_DEFER_READ_FLAG() {
        return (int)536870912L;
    }
    public static int CERT_SYSTEM_STORE_LOCATION_MASK() {
        return (int)16711680L;
    }
    public static int CERT_SYSTEM_STORE_LOCATION_SHIFT() {
        return (int)16L;
    }
    public static int CERT_SYSTEM_STORE_CURRENT_USER_ID() {
        return (int)1L;
    }
    public static int CERT_SYSTEM_STORE_LOCAL_MACHINE_ID() {
        return (int)2L;
    }
    public static int CERT_SYSTEM_STORE_CURRENT_SERVICE_ID() {
        return (int)4L;
    }
    public static int CERT_SYSTEM_STORE_SERVICES_ID() {
        return (int)5L;
    }
    public static int CERT_SYSTEM_STORE_USERS_ID() {
        return (int)6L;
    }
    public static int CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY_ID() {
        return (int)7L;
    }
    public static int CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY_ID() {
        return (int)8L;
    }
    public static int CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE_ID() {
        return (int)9L;
    }
    public static int CERT_SYSTEM_STORE_LOCAL_MACHINE_WCOS_ID() {
        return (int)10L;
    }
    public static int CERT_PROT_ROOT_DISABLE_CURRENT_USER_FLAG() {
        return (int)1L;
    }
    public static int CERT_PROT_ROOT_INHIBIT_ADD_AT_INIT_FLAG() {
        return (int)2L;
    }
    public static int CERT_PROT_ROOT_INHIBIT_PURGE_LM_FLAG() {
        return (int)4L;
    }
    public static int CERT_PROT_ROOT_DISABLE_LM_AUTH_FLAG() {
        return (int)8L;
    }
    public static int CERT_PROT_ROOT_ONLY_LM_GPT_FLAG() {
        return (int)8L;
    }
    public static int CERT_PROT_ROOT_DISABLE_NT_AUTH_REQUIRED_FLAG() {
        return (int)16L;
    }
    public static int CERT_PROT_ROOT_DISABLE_NOT_DEFINED_NAME_CONSTRAINT_FLAG() {
        return (int)32L;
    }
    public static int CERT_PROT_ROOT_DISABLE_PEER_TRUST() {
        return (int)65536L;
    }
    public static int CERT_TRUST_PUB_ALLOW_TRUST_MASK() {
        return (int)3L;
    }
    public static int CERT_TRUST_PUB_ALLOW_END_USER_TRUST() {
        return (int)0L;
    }
    public static int CERT_TRUST_PUB_ALLOW_MACHINE_ADMIN_TRUST() {
        return (int)1L;
    }
    public static int CERT_TRUST_PUB_ALLOW_ENTERPRISE_ADMIN_TRUST() {
        return (int)2L;
    }
    public static int CERT_TRUST_PUB_CHECK_PUBLISHER_REV_FLAG() {
        return (int)256L;
    }
    public static int CERT_TRUST_PUB_CHECK_TIMESTAMP_REV_FLAG() {
        return (int)512L;
    }
    public static int CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_UNTRUSTED_ROOT_LOGGING_FLAG() {
        return (int)1L;
    }
    public static int CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_PARTIAL_CHAIN_LOGGING_FLAG() {
        return (int)2L;
    }
    public static int CERT_AUTO_UPDATE_DISABLE_RANDOM_QUERY_STRING_FLAG() {
        return (int)4L;
    }
    public static int CERT_REGISTRY_STORE_REMOTE_FLAG() {
        return (int)65536L;
    }
    public static int CERT_REGISTRY_STORE_SERIALIZED_FLAG() {
        return (int)131072L;
    }
    public static int CERT_REGISTRY_STORE_LM_GPT_FLAG() {
        return (int)16777216L;
    }
    public static int CERT_REGISTRY_STORE_ROAMING_FLAG() {
        return (int)262144L;
    }
    public static int CERT_REGISTRY_STORE_MY_IE_DIRTY_FLAG() {
        return (int)524288L;
    }
    public static int CERT_REGISTRY_STORE_EXTERNAL_FLAG() {
        return (int)1048576L;
    }
    public static int CERT_FILE_STORE_COMMIT_ENABLE_FLAG() {
        return (int)65536L;
    }
    public static int CERT_LDAP_STORE_SIGN_FLAG() {
        return (int)65536L;
    }
    public static int CERT_LDAP_STORE_AREC_EXCLUSIVE_FLAG() {
        return (int)131072L;
    }
    public static int CERT_LDAP_STORE_OPENED_FLAG() {
        return (int)262144L;
    }
    public static int CERT_LDAP_STORE_UNBIND_FLAG() {
        return (int)524288L;
    }
    public static int CERT_STORE_PROV_EXTERNAL_FLAG() {
        return (int)1L;
    }
    public static int CERT_STORE_PROV_DELETED_FLAG() {
        return (int)2L;
    }
    public static int CERT_STORE_PROV_NO_PERSIST_FLAG() {
        return (int)4L;
    }
    public static int CERT_STORE_PROV_SYSTEM_STORE_FLAG() {
        return (int)8L;
    }
    public static int CERT_STORE_PROV_LM_SYSTEM_STORE_FLAG() {
        return (int)16L;
    }
    public static int CERT_STORE_PROV_GP_SYSTEM_STORE_FLAG() {
        return (int)32L;
    }
    public static int CERT_STORE_PROV_SHARED_USER_FLAG() {
        return (int)64L;
    }
    public static int CERT_STORE_PROV_CLOSE_FUNC() {
        return (int)0L;
    }
    public static int CERT_STORE_PROV_READ_CERT_FUNC() {
        return (int)1L;
    }
    public static int CERT_STORE_PROV_WRITE_CERT_FUNC() {
        return (int)2L;
    }
    public static int CERT_STORE_PROV_DELETE_CERT_FUNC() {
        return (int)3L;
    }
    public static int CERT_STORE_PROV_SET_CERT_PROPERTY_FUNC() {
        return (int)4L;
    }
    public static int CERT_STORE_PROV_READ_CRL_FUNC() {
        return (int)5L;
    }
    public static int CERT_STORE_PROV_WRITE_CRL_FUNC() {
        return (int)6L;
    }
    public static int CERT_STORE_PROV_DELETE_CRL_FUNC() {
        return (int)7L;
    }
    public static int CERT_STORE_PROV_SET_CRL_PROPERTY_FUNC() {
        return (int)8L;
    }
    public static int CERT_STORE_PROV_READ_CTL_FUNC() {
        return (int)9L;
    }
    public static int CERT_STORE_PROV_WRITE_CTL_FUNC() {
        return (int)10L;
    }
    public static int CERT_STORE_PROV_DELETE_CTL_FUNC() {
        return (int)11L;
    }
    public static int CERT_STORE_PROV_SET_CTL_PROPERTY_FUNC() {
        return (int)12L;
    }
    public static int CERT_STORE_PROV_CONTROL_FUNC() {
        return (int)13L;
    }
    public static int CERT_STORE_PROV_FIND_CERT_FUNC() {
        return (int)14L;
    }
    public static int CERT_STORE_PROV_FREE_FIND_CERT_FUNC() {
        return (int)15L;
    }
    public static int CERT_STORE_PROV_GET_CERT_PROPERTY_FUNC() {
        return (int)16L;
    }
    public static int CERT_STORE_PROV_FIND_CRL_FUNC() {
        return (int)17L;
    }
    public static int CERT_STORE_PROV_FREE_FIND_CRL_FUNC() {
        return (int)18L;
    }
    public static int CERT_STORE_PROV_GET_CRL_PROPERTY_FUNC() {
        return (int)19L;
    }
    public static int CERT_STORE_PROV_FIND_CTL_FUNC() {
        return (int)20L;
    }
    public static int CERT_STORE_PROV_FREE_FIND_CTL_FUNC() {
        return (int)21L;
    }
    public static int CERT_STORE_PROV_GET_CTL_PROPERTY_FUNC() {
        return (int)22L;
    }
    public static int CERT_STORE_PROV_WRITE_ADD_FLAG() {
        return (int)1L;
    }
    public static int CERT_STORE_SAVE_AS_STORE() {
        return (int)1L;
    }
    public static int CERT_STORE_SAVE_AS_PKCS7() {
        return (int)2L;
    }
    public static int CERT_STORE_SAVE_AS_PKCS12() {
        return (int)3L;
    }
    public static int CERT_STORE_SAVE_TO_FILE() {
        return (int)1L;
    }
    public static int CERT_STORE_SAVE_TO_MEMORY() {
        return (int)2L;
    }
    public static int CERT_STORE_SAVE_TO_FILENAME_A() {
        return (int)3L;
    }
    public static int CERT_STORE_SAVE_TO_FILENAME_W() {
        return (int)4L;
    }
    public static int CERT_CLOSE_STORE_FORCE_FLAG() {
        return (int)1L;
    }
    public static int CERT_CLOSE_STORE_CHECK_FLAG() {
        return (int)2L;
    }
    public static int CERT_COMPARE_MASK() {
        return (int)65535L;
    }
    public static int CERT_COMPARE_SHIFT() {
        return (int)16L;
    }
    public static int CERT_COMPARE_ANY() {
        return (int)0L;
    }
    public static int CERT_COMPARE_SHA1_HASH() {
        return (int)1L;
    }
    public static int CERT_COMPARE_NAME() {
        return (int)2L;
    }
    public static int CERT_COMPARE_ATTR() {
        return (int)3L;
    }
    public static int CERT_COMPARE_MD5_HASH() {
        return (int)4L;
    }
    public static int CERT_COMPARE_PROPERTY() {
        return (int)5L;
    }
    public static int CERT_COMPARE_PUBLIC_KEY() {
        return (int)6L;
    }
    public static int CERT_COMPARE_NAME_STR_A() {
        return (int)7L;
    }
    public static int CERT_COMPARE_NAME_STR_W() {
        return (int)8L;
    }
    public static int CERT_COMPARE_KEY_SPEC() {
        return (int)9L;
    }
    public static int CERT_COMPARE_ENHKEY_USAGE() {
        return (int)10L;
    }
    public static int CERT_COMPARE_SUBJECT_CERT() {
        return (int)11L;
    }
    public static int CERT_COMPARE_ISSUER_OF() {
        return (int)12L;
    }
    public static int CERT_COMPARE_EXISTING() {
        return (int)13L;
    }
    public static int CERT_COMPARE_SIGNATURE_HASH() {
        return (int)14L;
    }
    public static int CERT_COMPARE_KEY_IDENTIFIER() {
        return (int)15L;
    }
    public static int CERT_COMPARE_CERT_ID() {
        return (int)16L;
    }
    public static int CERT_COMPARE_CROSS_CERT_DIST_POINTS() {
        return (int)17L;
    }
    public static int CERT_COMPARE_PUBKEY_MD5_HASH() {
        return (int)18L;
    }
    public static int CERT_COMPARE_SUBJECT_INFO_ACCESS() {
        return (int)19L;
    }
    public static int CERT_COMPARE_HASH_STR() {
        return (int)20L;
    }
    public static int CERT_COMPARE_HAS_PRIVATE_KEY() {
        return (int)21L;
    }
    public static int CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG() {
        return (int)1L;
    }
    public static int CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG() {
        return (int)2L;
    }
    public static int CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG() {
        return (int)4L;
    }
    public static int CERT_FIND_NO_ENHKEY_USAGE_FLAG() {
        return (int)8L;
    }
    public static int CERT_FIND_OR_ENHKEY_USAGE_FLAG() {
        return (int)16L;
    }
    public static int CERT_FIND_VALID_ENHKEY_USAGE_FLAG() {
        return (int)32L;
    }
    public static int CERT_SET_PROPERTY_INHIBIT_PERSIST_FLAG() {
        return (int)1073741824L;
    }
    public static int CTL_ENTRY_FROM_PROP_CHAIN_FLAG() {
        return (int)1L;
    }
    public static int CRL_FIND_ANY() {
        return (int)0L;
    }
    public static int CRL_FIND_ISSUED_BY() {
        return (int)1L;
    }
    public static int CRL_FIND_EXISTING() {
        return (int)2L;
    }
    public static int CRL_FIND_ISSUED_FOR() {
        return (int)3L;
    }
    public static int CRL_FIND_ISSUED_BY_AKI_FLAG() {
        return (int)1L;
    }
    public static int CRL_FIND_ISSUED_BY_SIGNATURE_FLAG() {
        return (int)2L;
    }
    public static int CRL_FIND_ISSUED_BY_DELTA_FLAG() {
        return (int)4L;
    }
    public static int CRL_FIND_ISSUED_BY_BASE_FLAG() {
        return (int)8L;
    }
    public static int CRL_FIND_ISSUED_FOR_SET_STRONG_PROPERTIES_FLAG() {
        return (int)16L;
    }
    public static int CERT_STORE_ADD_NEW() {
        return (int)1L;
    }
    public static int CERT_STORE_ADD_USE_EXISTING() {
        return (int)2L;
    }
    public static int CERT_STORE_ADD_REPLACE_EXISTING() {
        return (int)3L;
    }
    public static int CERT_STORE_ADD_ALWAYS() {
        return (int)4L;
    }
    public static int CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES() {
        return (int)5L;
    }
    public static int CERT_STORE_ADD_NEWER() {
        return (int)6L;
    }
    public static int CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES() {
        return (int)7L;
    }
    public static int CERT_STORE_CERTIFICATE_CONTEXT() {
        return (int)1L;
    }
    public static int CERT_STORE_CRL_CONTEXT() {
        return (int)2L;
    }
    public static int CERT_STORE_CTL_CONTEXT() {
        return (int)3L;
    }
    public static int CTL_ANY_SUBJECT_TYPE() {
        return (int)1L;
    }
    public static int CTL_CERT_SUBJECT_TYPE() {
        return (int)2L;
    }
    public static int CTL_FIND_ANY() {
        return (int)0L;
    }
    public static int CTL_FIND_SHA1_HASH() {
        return (int)1L;
    }
    public static int CTL_FIND_MD5_HASH() {
        return (int)2L;
    }
    public static int CTL_FIND_USAGE() {
        return (int)3L;
    }
    public static int CTL_FIND_SUBJECT() {
        return (int)4L;
    }
    public static int CTL_FIND_EXISTING() {
        return (int)5L;
    }
    public static int CTL_FIND_SAME_USAGE_FLAG() {
        return (int)1L;
    }
    public static int CERT_STORE_CTRL_RESYNC() {
        return (int)1L;
    }
    public static int CERT_STORE_CTRL_NOTIFY_CHANGE() {
        return (int)2L;
    }
    public static int CERT_STORE_CTRL_COMMIT() {
        return (int)3L;
    }
    public static int CERT_STORE_CTRL_AUTO_RESYNC() {
        return (int)4L;
    }
    public static int CERT_STORE_CTRL_CANCEL_NOTIFY() {
        return (int)5L;
    }
    public static int CERT_STORE_CTRL_INHIBIT_DUPLICATE_HANDLE_FLAG() {
        return (int)1L;
    }
    public static int CERT_STORE_CTRL_COMMIT_FORCE_FLAG() {
        return (int)1L;
    }
    public static int CERT_STORE_CTRL_COMMIT_CLEAR_FLAG() {
        return (int)2L;
    }
    public static int CERT_STORE_LOCALIZED_NAME_PROP_ID() {
        return (int)4096L;
    }
    public static int CERT_CREATE_CONTEXT_NOCOPY_FLAG() {
        return (int)1L;
    }
    public static int CERT_CREATE_CONTEXT_SORTED_FLAG() {
        return (int)2L;
    }
    public static int CERT_CREATE_CONTEXT_NO_HCRYPTMSG_FLAG() {
        return (int)4L;
    }
    public static int CERT_CREATE_CONTEXT_NO_ENTRY_FLAG() {
        return (int)8L;
    }
    public static int CERT_PHYSICAL_STORE_ADD_ENABLE_FLAG() {
        return (int)1L;
    }
    public static int CERT_PHYSICAL_STORE_OPEN_DISABLE_FLAG() {
        return (int)2L;
    }
    public static int CERT_PHYSICAL_STORE_REMOTE_OPEN_DISABLE_FLAG() {
        return (int)4L;
    }
    public static int CERT_PHYSICAL_STORE_INSERT_COMPUTER_NAME_ENABLE_FLAG() {
        return (int)8L;
    }
    public static int CERT_PHYSICAL_STORE_PREDEFINED_ENUM_FLAG() {
        return (int)1L;
    }
    public static int CMSG_TRUSTED_SIGNER_FLAG() {
        return (int)1L;
    }
    public static int CMSG_SIGNER_ONLY_FLAG() {
        return (int)2L;
    }
    public static int CMSG_USE_SIGNER_INDEX_FLAG() {
        return (int)4L;
    }
    public static int CMSG_CMS_ENCAPSULATED_CTL_FLAG() {
        return (int)32768L;
    }
    public static int CMSG_ENCODE_SORTED_CTL_FLAG() {
        return (int)1L;
    }
    public static int CMSG_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG() {
        return (int)2L;
    }
    public static int CERT_VERIFY_INHIBIT_CTL_UPDATE_FLAG() {
        return (int)1L;
    }
    public static int CERT_VERIFY_TRUSTED_SIGNERS_FLAG() {
        return (int)2L;
    }
    public static int CERT_VERIFY_NO_TIME_CHECK_FLAG() {
        return (int)4L;
    }
    public static int CERT_VERIFY_ALLOW_MORE_USAGE_FLAG() {
        return (int)8L;
    }
    public static int CERT_VERIFY_UPDATED_CTL_FLAG() {
        return (int)1L;
    }
    public static int CERT_CONTEXT_REVOCATION_TYPE() {
        return (int)1L;
    }
    public static int CERT_VERIFY_REV_CHAIN_FLAG() {
        return (int)1L;
    }
    public static int CERT_VERIFY_CACHE_ONLY_BASED_REVOCATION() {
        return (int)2L;
    }
    public static int CERT_VERIFY_REV_ACCUMULATIVE_TIMEOUT_FLAG() {
        return (int)4L;
    }
    public static int CERT_VERIFY_REV_SERVER_OCSP_FLAG() {
        return (int)8L;
    }
    public static int CERT_VERIFY_REV_NO_OCSP_FAILOVER_TO_CRL_FLAG() {
        return (int)16L;
    }
    public static int CERT_VERIFY_REV_SERVER_OCSP_WIRE_ONLY_FLAG() {
        return (int)32L;
    }
    public static int CERT_UNICODE_IS_RDN_ATTRS_FLAG() {
        return (int)1L;
    }
    public static int CERT_CASE_INSENSITIVE_IS_RDN_ATTRS_FLAG() {
        return (int)2L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_SUBJECT_BLOB() {
        return (int)1L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_SUBJECT_CERT() {
        return (int)2L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_SUBJECT_CRL() {
        return (int)3L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_SUBJECT_OCSP_BASIC_SIGNED_RESPONSE() {
        return (int)4L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_ISSUER_PUBKEY() {
        return (int)1L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_ISSUER_CERT() {
        return (int)2L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_ISSUER_CHAIN() {
        return (int)3L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_ISSUER_NULL() {
        return (int)4L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_DISABLE_MD2_MD4_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_SET_STRONG_PROPERTIES_FLAG() {
        return (int)2L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_RETURN_STRONG_PROPERTIES_FLAG() {
        return (int)4L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_CHECK_WEAK_HASH_FLAG() {
        return (int)8L;
    }
    public static int CRYPT_DEFAULT_CONTEXT_AUTO_RELEASE_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_DEFAULT_CONTEXT_PROCESS_FLAG() {
        return (int)2L;
    }
    public static int CRYPT_DEFAULT_CONTEXT_CERT_SIGN_OID() {
        return (int)1L;
    }
    public static int CRYPT_DEFAULT_CONTEXT_MULTI_CERT_SIGN_OID() {
        return (int)2L;
    }
    public static int CRYPT_ACQUIRE_CACHE_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_ACQUIRE_USE_PROV_INFO_FLAG() {
        return (int)2L;
    }
    public static int CRYPT_ACQUIRE_COMPARE_KEY_FLAG() {
        return (int)4L;
    }
    public static int CRYPT_ACQUIRE_NO_HEALING() {
        return (int)8L;
    }
    public static int CRYPT_ACQUIRE_SILENT_FLAG() {
        return (int)64L;
    }
    public static int CRYPT_ACQUIRE_WINDOW_HANDLE_FLAG() {
        return (int)128L;
    }
    public static int CRYPT_ACQUIRE_NCRYPT_KEY_FLAGS_MASK() {
        return (int)458752L;
    }
    public static int CRYPT_ACQUIRE_ALLOW_NCRYPT_KEY_FLAG() {
        return (int)65536L;
    }
    public static int CRYPT_ACQUIRE_PREFER_NCRYPT_KEY_FLAG() {
        return (int)131072L;
    }
    public static int CRYPT_ACQUIRE_ONLY_NCRYPT_KEY_FLAG() {
        return (int)262144L;
    }
    public static int CRYPT_FIND_USER_KEYSET_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_FIND_MACHINE_KEYSET_FLAG() {
        return (int)2L;
    }
    public static int CRYPT_FIND_SILENT_KEYSET_FLAG() {
        return (int)64L;
    }
    public static int CERT_SIMPLE_NAME_STR() {
        return (int)1L;
    }
    public static int CERT_OID_NAME_STR() {
        return (int)2L;
    }
    public static int CERT_X500_NAME_STR() {
        return (int)3L;
    }
    public static int CERT_XML_NAME_STR() {
        return (int)4L;
    }
    public static int CERT_NAME_STR_SEMICOLON_FLAG() {
        return (int)1073741824L;
    }
    public static int CERT_NAME_STR_NO_PLUS_FLAG() {
        return (int)536870912L;
    }
}



// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class WINDOWS_21 extends WINDOWS_20 {

    public static int ERROR_MENU_ITEM_NOT_FOUND() {
        return (int)1456L;
    }
    public static int ERROR_INVALID_KEYBOARD_HANDLE() {
        return (int)1457L;
    }
    public static int ERROR_HOOK_TYPE_NOT_ALLOWED() {
        return (int)1458L;
    }
    public static int ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION() {
        return (int)1459L;
    }
    public static int ERROR_TIMEOUT() {
        return (int)1460L;
    }
    public static int ERROR_INVALID_MONITOR_HANDLE() {
        return (int)1461L;
    }
    public static int ERROR_INCORRECT_SIZE() {
        return (int)1462L;
    }
    public static int ERROR_SYMLINK_CLASS_DISABLED() {
        return (int)1463L;
    }
    public static int ERROR_SYMLINK_NOT_SUPPORTED() {
        return (int)1464L;
    }
    public static int ERROR_XML_PARSE_ERROR() {
        return (int)1465L;
    }
    public static int ERROR_XMLDSIG_ERROR() {
        return (int)1466L;
    }
    public static int ERROR_RESTART_APPLICATION() {
        return (int)1467L;
    }
    public static int ERROR_WRONG_COMPARTMENT() {
        return (int)1468L;
    }
    public static int ERROR_AUTHIP_FAILURE() {
        return (int)1469L;
    }
    public static int ERROR_NO_NVRAM_RESOURCES() {
        return (int)1470L;
    }
    public static int ERROR_NOT_GUI_PROCESS() {
        return (int)1471L;
    }
    public static int ERROR_EVENTLOG_FILE_CORRUPT() {
        return (int)1500L;
    }
    public static int ERROR_EVENTLOG_CANT_START() {
        return (int)1501L;
    }
    public static int ERROR_LOG_FILE_FULL() {
        return (int)1502L;
    }
    public static int ERROR_EVENTLOG_FILE_CHANGED() {
        return (int)1503L;
    }
    public static int ERROR_CONTAINER_ASSIGNED() {
        return (int)1504L;
    }
    public static int ERROR_JOB_NO_CONTAINER() {
        return (int)1505L;
    }
    public static int ERROR_INVALID_TASK_NAME() {
        return (int)1550L;
    }
    public static int ERROR_INVALID_TASK_INDEX() {
        return (int)1551L;
    }
    public static int ERROR_THREAD_ALREADY_IN_TASK() {
        return (int)1552L;
    }
    public static int ERROR_INSTALL_SERVICE_FAILURE() {
        return (int)1601L;
    }
    public static int ERROR_INSTALL_USEREXIT() {
        return (int)1602L;
    }
    public static int ERROR_INSTALL_FAILURE() {
        return (int)1603L;
    }
    public static int ERROR_INSTALL_SUSPEND() {
        return (int)1604L;
    }
    public static int ERROR_UNKNOWN_PRODUCT() {
        return (int)1605L;
    }
    public static int ERROR_UNKNOWN_FEATURE() {
        return (int)1606L;
    }
    public static int ERROR_UNKNOWN_COMPONENT() {
        return (int)1607L;
    }
    public static int ERROR_UNKNOWN_PROPERTY() {
        return (int)1608L;
    }
    public static int ERROR_INVALID_HANDLE_STATE() {
        return (int)1609L;
    }
    public static int ERROR_BAD_CONFIGURATION() {
        return (int)1610L;
    }
    public static int ERROR_INDEX_ABSENT() {
        return (int)1611L;
    }
    public static int ERROR_INSTALL_SOURCE_ABSENT() {
        return (int)1612L;
    }
    public static int ERROR_INSTALL_PACKAGE_VERSION() {
        return (int)1613L;
    }
    public static int ERROR_PRODUCT_UNINSTALLED() {
        return (int)1614L;
    }
    public static int ERROR_BAD_QUERY_SYNTAX() {
        return (int)1615L;
    }
    public static int ERROR_INVALID_FIELD() {
        return (int)1616L;
    }
    public static int ERROR_DEVICE_REMOVED() {
        return (int)1617L;
    }
    public static int ERROR_INSTALL_ALREADY_RUNNING() {
        return (int)1618L;
    }
    public static int ERROR_INSTALL_PACKAGE_OPEN_FAILED() {
        return (int)1619L;
    }
    public static int ERROR_INSTALL_PACKAGE_INVALID() {
        return (int)1620L;
    }
    public static int ERROR_INSTALL_UI_FAILURE() {
        return (int)1621L;
    }
    public static int ERROR_INSTALL_LOG_FAILURE() {
        return (int)1622L;
    }
    public static int ERROR_INSTALL_LANGUAGE_UNSUPPORTED() {
        return (int)1623L;
    }
    public static int ERROR_INSTALL_TRANSFORM_FAILURE() {
        return (int)1624L;
    }
    public static int ERROR_INSTALL_PACKAGE_REJECTED() {
        return (int)1625L;
    }
    public static int ERROR_FUNCTION_NOT_CALLED() {
        return (int)1626L;
    }
    public static int ERROR_FUNCTION_FAILED() {
        return (int)1627L;
    }
    public static int ERROR_INVALID_TABLE() {
        return (int)1628L;
    }
    public static int ERROR_DATATYPE_MISMATCH() {
        return (int)1629L;
    }
    public static int ERROR_UNSUPPORTED_TYPE() {
        return (int)1630L;
    }
    public static int ERROR_CREATE_FAILED() {
        return (int)1631L;
    }
    public static int ERROR_INSTALL_TEMP_UNWRITABLE() {
        return (int)1632L;
    }
    public static int ERROR_INSTALL_PLATFORM_UNSUPPORTED() {
        return (int)1633L;
    }
    public static int ERROR_INSTALL_NOTUSED() {
        return (int)1634L;
    }
    public static int ERROR_PATCH_PACKAGE_OPEN_FAILED() {
        return (int)1635L;
    }
    public static int ERROR_PATCH_PACKAGE_INVALID() {
        return (int)1636L;
    }
    public static int ERROR_PATCH_PACKAGE_UNSUPPORTED() {
        return (int)1637L;
    }
    public static int ERROR_PRODUCT_VERSION() {
        return (int)1638L;
    }
    public static int ERROR_INVALID_COMMAND_LINE() {
        return (int)1639L;
    }
    public static int ERROR_INSTALL_REMOTE_DISALLOWED() {
        return (int)1640L;
    }
    public static int ERROR_SUCCESS_REBOOT_INITIATED() {
        return (int)1641L;
    }
    public static int ERROR_PATCH_TARGET_NOT_FOUND() {
        return (int)1642L;
    }
    public static int ERROR_PATCH_PACKAGE_REJECTED() {
        return (int)1643L;
    }
    public static int ERROR_INSTALL_TRANSFORM_REJECTED() {
        return (int)1644L;
    }
    public static int ERROR_INSTALL_REMOTE_PROHIBITED() {
        return (int)1645L;
    }
    public static int ERROR_PATCH_REMOVAL_UNSUPPORTED() {
        return (int)1646L;
    }
    public static int ERROR_UNKNOWN_PATCH() {
        return (int)1647L;
    }
    public static int ERROR_PATCH_NO_SEQUENCE() {
        return (int)1648L;
    }
    public static int ERROR_PATCH_REMOVAL_DISALLOWED() {
        return (int)1649L;
    }
    public static int ERROR_INVALID_PATCH_XML() {
        return (int)1650L;
    }
    public static int ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT() {
        return (int)1651L;
    }
    public static int ERROR_INSTALL_SERVICE_SAFEBOOT() {
        return (int)1652L;
    }
    public static int ERROR_FAIL_FAST_EXCEPTION() {
        return (int)1653L;
    }
    public static int ERROR_INSTALL_REJECTED() {
        return (int)1654L;
    }
    public static int ERROR_DYNAMIC_CODE_BLOCKED() {
        return (int)1655L;
    }
    public static int ERROR_NOT_SAME_OBJECT() {
        return (int)1656L;
    }
    public static int ERROR_STRICT_CFG_VIOLATION() {
        return (int)1657L;
    }
    public static int ERROR_SET_CONTEXT_DENIED() {
        return (int)1660L;
    }
    public static int ERROR_CROSS_PARTITION_VIOLATION() {
        return (int)1661L;
    }
    public static int ERROR_RETURN_ADDRESS_HIJACK_ATTEMPT() {
        return (int)1662L;
    }
    public static int RPC_S_INVALID_STRING_BINDING() {
        return (int)1700L;
    }
    public static int RPC_S_WRONG_KIND_OF_BINDING() {
        return (int)1701L;
    }
    public static int RPC_S_INVALID_BINDING() {
        return (int)1702L;
    }
    public static int RPC_S_PROTSEQ_NOT_SUPPORTED() {
        return (int)1703L;
    }
    public static int RPC_S_INVALID_RPC_PROTSEQ() {
        return (int)1704L;
    }
    public static int RPC_S_INVALID_STRING_UUID() {
        return (int)1705L;
    }
    public static int RPC_S_INVALID_ENDPOINT_FORMAT() {
        return (int)1706L;
    }
    public static int RPC_S_INVALID_NET_ADDR() {
        return (int)1707L;
    }
    public static int RPC_S_NO_ENDPOINT_FOUND() {
        return (int)1708L;
    }
    public static int RPC_S_INVALID_TIMEOUT() {
        return (int)1709L;
    }
    public static int RPC_S_OBJECT_NOT_FOUND() {
        return (int)1710L;
    }
    public static int RPC_S_ALREADY_REGISTERED() {
        return (int)1711L;
    }
    public static int RPC_S_TYPE_ALREADY_REGISTERED() {
        return (int)1712L;
    }
    public static int RPC_S_ALREADY_LISTENING() {
        return (int)1713L;
    }
    public static int RPC_S_NO_PROTSEQS_REGISTERED() {
        return (int)1714L;
    }
    public static int RPC_S_NOT_LISTENING() {
        return (int)1715L;
    }
    public static int RPC_S_UNKNOWN_MGR_TYPE() {
        return (int)1716L;
    }
    public static int RPC_S_UNKNOWN_IF() {
        return (int)1717L;
    }
    public static int RPC_S_NO_BINDINGS() {
        return (int)1718L;
    }
    public static int RPC_S_NO_PROTSEQS() {
        return (int)1719L;
    }
    public static int RPC_S_CANT_CREATE_ENDPOINT() {
        return (int)1720L;
    }
    public static int RPC_S_OUT_OF_RESOURCES() {
        return (int)1721L;
    }
    public static int RPC_S_SERVER_UNAVAILABLE() {
        return (int)1722L;
    }
    public static int RPC_S_SERVER_TOO_BUSY() {
        return (int)1723L;
    }
    public static int RPC_S_INVALID_NETWORK_OPTIONS() {
        return (int)1724L;
    }
    public static int RPC_S_NO_CALL_ACTIVE() {
        return (int)1725L;
    }
    public static int RPC_S_CALL_FAILED() {
        return (int)1726L;
    }
    public static int RPC_S_CALL_FAILED_DNE() {
        return (int)1727L;
    }
    public static int RPC_S_PROTOCOL_ERROR() {
        return (int)1728L;
    }
    public static int RPC_S_PROXY_ACCESS_DENIED() {
        return (int)1729L;
    }
    public static int RPC_S_UNSUPPORTED_TRANS_SYN() {
        return (int)1730L;
    }
    public static int RPC_S_UNSUPPORTED_TYPE() {
        return (int)1732L;
    }
    public static int RPC_S_INVALID_TAG() {
        return (int)1733L;
    }
    public static int RPC_S_INVALID_BOUND() {
        return (int)1734L;
    }
    public static int RPC_S_NO_ENTRY_NAME() {
        return (int)1735L;
    }
    public static int RPC_S_INVALID_NAME_SYNTAX() {
        return (int)1736L;
    }
    public static int RPC_S_UNSUPPORTED_NAME_SYNTAX() {
        return (int)1737L;
    }
    public static int RPC_S_UUID_NO_ADDRESS() {
        return (int)1739L;
    }
    public static int RPC_S_DUPLICATE_ENDPOINT() {
        return (int)1740L;
    }
    public static int RPC_S_UNKNOWN_AUTHN_TYPE() {
        return (int)1741L;
    }
    public static int RPC_S_MAX_CALLS_TOO_SMALL() {
        return (int)1742L;
    }
    public static int RPC_S_STRING_TOO_LONG() {
        return (int)1743L;
    }
    public static int RPC_S_PROTSEQ_NOT_FOUND() {
        return (int)1744L;
    }
    public static int RPC_S_PROCNUM_OUT_OF_RANGE() {
        return (int)1745L;
    }
    public static int RPC_S_BINDING_HAS_NO_AUTH() {
        return (int)1746L;
    }
    public static int RPC_S_UNKNOWN_AUTHN_SERVICE() {
        return (int)1747L;
    }
    public static int RPC_S_UNKNOWN_AUTHN_LEVEL() {
        return (int)1748L;
    }
    public static int RPC_S_INVALID_AUTH_IDENTITY() {
        return (int)1749L;
    }
    public static int RPC_S_UNKNOWN_AUTHZ_SERVICE() {
        return (int)1750L;
    }
    public static int EPT_S_INVALID_ENTRY() {
        return (int)1751L;
    }
    public static int EPT_S_CANT_PERFORM_OP() {
        return (int)1752L;
    }
    public static int EPT_S_NOT_REGISTERED() {
        return (int)1753L;
    }
    public static int RPC_S_NOTHING_TO_EXPORT() {
        return (int)1754L;
    }
    public static int RPC_S_INCOMPLETE_NAME() {
        return (int)1755L;
    }
    public static int RPC_S_INVALID_VERS_OPTION() {
        return (int)1756L;
    }
    public static int RPC_S_NO_MORE_MEMBERS() {
        return (int)1757L;
    }
    public static int RPC_S_NOT_ALL_OBJS_UNEXPORTED() {
        return (int)1758L;
    }
    public static int RPC_S_INTERFACE_NOT_FOUND() {
        return (int)1759L;
    }
    public static int RPC_S_ENTRY_ALREADY_EXISTS() {
        return (int)1760L;
    }
    public static int RPC_S_ENTRY_NOT_FOUND() {
        return (int)1761L;
    }
    public static int RPC_S_NAME_SERVICE_UNAVAILABLE() {
        return (int)1762L;
    }
    public static int RPC_S_INVALID_NAF_ID() {
        return (int)1763L;
    }
    public static int RPC_S_CANNOT_SUPPORT() {
        return (int)1764L;
    }
    public static int RPC_S_NO_CONTEXT_AVAILABLE() {
        return (int)1765L;
    }
    public static int RPC_S_INTERNAL_ERROR() {
        return (int)1766L;
    }
    public static int RPC_S_ZERO_DIVIDE() {
        return (int)1767L;
    }
    public static int RPC_S_ADDRESS_ERROR() {
        return (int)1768L;
    }
    public static int RPC_S_FP_DIV_ZERO() {
        return (int)1769L;
    }
    public static int RPC_S_FP_UNDERFLOW() {
        return (int)1770L;
    }
    public static int RPC_S_FP_OVERFLOW() {
        return (int)1771L;
    }
    public static int RPC_X_NO_MORE_ENTRIES() {
        return (int)1772L;
    }
    public static int RPC_X_SS_CHAR_TRANS_OPEN_FAIL() {
        return (int)1773L;
    }
    public static int RPC_X_SS_CHAR_TRANS_SHORT_FILE() {
        return (int)1774L;
    }
    public static int RPC_X_SS_IN_NULL_CONTEXT() {
        return (int)1775L;
    }
    public static int RPC_X_SS_CONTEXT_DAMAGED() {
        return (int)1777L;
    }
    public static int RPC_X_SS_HANDLES_MISMATCH() {
        return (int)1778L;
    }
    public static int RPC_X_SS_CANNOT_GET_CALL_HANDLE() {
        return (int)1779L;
    }
    public static int RPC_X_NULL_REF_POINTER() {
        return (int)1780L;
    }
    public static int RPC_X_ENUM_VALUE_OUT_OF_RANGE() {
        return (int)1781L;
    }
    public static int RPC_X_BYTE_COUNT_TOO_SMALL() {
        return (int)1782L;
    }
    public static int RPC_X_BAD_STUB_DATA() {
        return (int)1783L;
    }
    public static int ERROR_INVALID_USER_BUFFER() {
        return (int)1784L;
    }
    public static int ERROR_UNRECOGNIZED_MEDIA() {
        return (int)1785L;
    }
    public static int ERROR_NO_TRUST_LSA_SECRET() {
        return (int)1786L;
    }
    public static int ERROR_NO_TRUST_SAM_ACCOUNT() {
        return (int)1787L;
    }
    public static int ERROR_TRUSTED_DOMAIN_FAILURE() {
        return (int)1788L;
    }
    public static int ERROR_TRUSTED_RELATIONSHIP_FAILURE() {
        return (int)1789L;
    }
    public static int ERROR_TRUST_FAILURE() {
        return (int)1790L;
    }
    public static int RPC_S_CALL_IN_PROGRESS() {
        return (int)1791L;
    }
    public static int ERROR_NETLOGON_NOT_STARTED() {
        return (int)1792L;
    }
    public static int ERROR_ACCOUNT_EXPIRED() {
        return (int)1793L;
    }
    public static int ERROR_REDIRECTOR_HAS_OPEN_HANDLES() {
        return (int)1794L;
    }
    public static int ERROR_PRINTER_DRIVER_ALREADY_INSTALLED() {
        return (int)1795L;
    }
    public static int ERROR_UNKNOWN_PORT() {
        return (int)1796L;
    }
    public static int ERROR_UNKNOWN_PRINTER_DRIVER() {
        return (int)1797L;
    }
    public static int ERROR_UNKNOWN_PRINTPROCESSOR() {
        return (int)1798L;
    }
    public static int ERROR_INVALID_SEPARATOR_FILE() {
        return (int)1799L;
    }
    public static int ERROR_INVALID_PRIORITY() {
        return (int)1800L;
    }
    public static int ERROR_INVALID_PRINTER_NAME() {
        return (int)1801L;
    }
    public static int ERROR_PRINTER_ALREADY_EXISTS() {
        return (int)1802L;
    }
    public static int ERROR_INVALID_PRINTER_COMMAND() {
        return (int)1803L;
    }
    public static int ERROR_INVALID_DATATYPE() {
        return (int)1804L;
    }
    public static int ERROR_INVALID_ENVIRONMENT() {
        return (int)1805L;
    }
    public static int RPC_S_NO_MORE_BINDINGS() {
        return (int)1806L;
    }
    public static int ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT() {
        return (int)1807L;
    }
    public static int ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT() {
        return (int)1808L;
    }
    public static int ERROR_NOLOGON_SERVER_TRUST_ACCOUNT() {
        return (int)1809L;
    }
    public static int ERROR_DOMAIN_TRUST_INCONSISTENT() {
        return (int)1810L;
    }
    public static int ERROR_SERVER_HAS_OPEN_HANDLES() {
        return (int)1811L;
    }
    public static int ERROR_RESOURCE_DATA_NOT_FOUND() {
        return (int)1812L;
    }
    public static int ERROR_RESOURCE_TYPE_NOT_FOUND() {
        return (int)1813L;
    }
    public static int ERROR_RESOURCE_NAME_NOT_FOUND() {
        return (int)1814L;
    }
    public static int ERROR_RESOURCE_LANG_NOT_FOUND() {
        return (int)1815L;
    }
    public static int ERROR_NOT_ENOUGH_QUOTA() {
        return (int)1816L;
    }
    public static int RPC_S_NO_INTERFACES() {
        return (int)1817L;
    }
    public static int RPC_S_CALL_CANCELLED() {
        return (int)1818L;
    }
    public static int RPC_S_BINDING_INCOMPLETE() {
        return (int)1819L;
    }
    public static int RPC_S_COMM_FAILURE() {
        return (int)1820L;
    }
    public static int RPC_S_UNSUPPORTED_AUTHN_LEVEL() {
        return (int)1821L;
    }
    public static int RPC_S_NO_PRINC_NAME() {
        return (int)1822L;
    }
    public static int RPC_S_NOT_RPC_ERROR() {
        return (int)1823L;
    }
    public static int RPC_S_UUID_LOCAL_ONLY() {
        return (int)1824L;
    }
    public static int RPC_S_SEC_PKG_ERROR() {
        return (int)1825L;
    }
    public static int RPC_S_NOT_CANCELLED() {
        return (int)1826L;
    }
    public static int RPC_X_INVALID_ES_ACTION() {
        return (int)1827L;
    }
    public static int RPC_X_WRONG_ES_VERSION() {
        return (int)1828L;
    }
    public static int RPC_X_WRONG_STUB_VERSION() {
        return (int)1829L;
    }
    public static int RPC_X_INVALID_PIPE_OBJECT() {
        return (int)1830L;
    }
    public static int RPC_X_WRONG_PIPE_ORDER() {
        return (int)1831L;
    }
    public static int RPC_X_WRONG_PIPE_VERSION() {
        return (int)1832L;
    }
    public static int RPC_S_COOKIE_AUTH_FAILED() {
        return (int)1833L;
    }
    public static int RPC_S_DO_NOT_DISTURB() {
        return (int)1834L;
    }
    public static int RPC_S_SYSTEM_HANDLE_COUNT_EXCEEDED() {
        return (int)1835L;
    }
    public static int RPC_S_SYSTEM_HANDLE_TYPE_MISMATCH() {
        return (int)1836L;
    }
    public static int RPC_S_GROUP_MEMBER_NOT_FOUND() {
        return (int)1898L;
    }
    public static int EPT_S_CANT_CREATE() {
        return (int)1899L;
    }
    public static int RPC_S_INVALID_OBJECT() {
        return (int)1900L;
    }
    public static int ERROR_INVALID_TIME() {
        return (int)1901L;
    }
    public static int ERROR_INVALID_FORM_NAME() {
        return (int)1902L;
    }
    public static int ERROR_INVALID_FORM_SIZE() {
        return (int)1903L;
    }
    public static int ERROR_ALREADY_WAITING() {
        return (int)1904L;
    }
    public static int ERROR_PRINTER_DELETED() {
        return (int)1905L;
    }
    public static int ERROR_INVALID_PRINTER_STATE() {
        return (int)1906L;
    }
    public static int ERROR_PASSWORD_MUST_CHANGE() {
        return (int)1907L;
    }
    public static int ERROR_DOMAIN_CONTROLLER_NOT_FOUND() {
        return (int)1908L;
    }
    public static int ERROR_ACCOUNT_LOCKED_OUT() {
        return (int)1909L;
    }
    public static int OR_INVALID_OXID() {
        return (int)1910L;
    }
    public static int OR_INVALID_OID() {
        return (int)1911L;
    }
    public static int OR_INVALID_SET() {
        return (int)1912L;
    }
    public static int RPC_S_SEND_INCOMPLETE() {
        return (int)1913L;
    }
    public static int RPC_S_INVALID_ASYNC_HANDLE() {
        return (int)1914L;
    }
    public static int RPC_S_INVALID_ASYNC_CALL() {
        return (int)1915L;
    }
    public static int RPC_X_PIPE_CLOSED() {
        return (int)1916L;
    }
    public static int RPC_X_PIPE_DISCIPLINE_ERROR() {
        return (int)1917L;
    }
    public static int RPC_X_PIPE_EMPTY() {
        return (int)1918L;
    }
    public static int ERROR_NO_SITENAME() {
        return (int)1919L;
    }
    public static int ERROR_CANT_ACCESS_FILE() {
        return (int)1920L;
    }
    public static int ERROR_CANT_RESOLVE_FILENAME() {
        return (int)1921L;
    }
    public static int RPC_S_ENTRY_TYPE_MISMATCH() {
        return (int)1922L;
    }
    public static int RPC_S_NOT_ALL_OBJS_EXPORTED() {
        return (int)1923L;
    }
    public static int RPC_S_INTERFACE_NOT_EXPORTED() {
        return (int)1924L;
    }
    public static int RPC_S_PROFILE_NOT_ADDED() {
        return (int)1925L;
    }
    public static int RPC_S_PRF_ELT_NOT_ADDED() {
        return (int)1926L;
    }
    public static int RPC_S_PRF_ELT_NOT_REMOVED() {
        return (int)1927L;
    }
    public static int RPC_S_GRP_ELT_NOT_ADDED() {
        return (int)1928L;
    }
    public static int RPC_S_GRP_ELT_NOT_REMOVED() {
        return (int)1929L;
    }
    public static int ERROR_KM_DRIVER_BLOCKED() {
        return (int)1930L;
    }
    public static int ERROR_CONTEXT_EXPIRED() {
        return (int)1931L;
    }
    public static int ERROR_PER_USER_TRUST_QUOTA_EXCEEDED() {
        return (int)1932L;
    }
    public static int ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED() {
        return (int)1933L;
    }
    public static int ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED() {
        return (int)1934L;
    }
    public static int ERROR_AUTHENTICATION_FIREWALL_FAILED() {
        return (int)1935L;
    }
    public static int ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED() {
        return (int)1936L;
    }
    public static int ERROR_NTLM_BLOCKED() {
        return (int)1937L;
    }
    public static int ERROR_PASSWORD_CHANGE_REQUIRED() {
        return (int)1938L;
    }
    public static int ERROR_LOST_MODE_LOGON_RESTRICTION() {
        return (int)1939L;
    }
    public static int ERROR_INVALID_PIXEL_FORMAT() {
        return (int)2000L;
    }
    public static int ERROR_BAD_DRIVER() {
        return (int)2001L;
    }
    public static int ERROR_INVALID_WINDOW_STYLE() {
        return (int)2002L;
    }
    public static int ERROR_METAFILE_NOT_SUPPORTED() {
        return (int)2003L;
    }
    public static int ERROR_TRANSFORM_NOT_SUPPORTED() {
        return (int)2004L;
    }
    public static int ERROR_CLIPPING_NOT_SUPPORTED() {
        return (int)2005L;
    }
    public static int ERROR_INVALID_CMM() {
        return (int)2010L;
    }
    public static int ERROR_INVALID_PROFILE() {
        return (int)2011L;
    }
    public static int ERROR_TAG_NOT_FOUND() {
        return (int)2012L;
    }
    public static int ERROR_TAG_NOT_PRESENT() {
        return (int)2013L;
    }
    public static int ERROR_DUPLICATE_TAG() {
        return (int)2014L;
    }
    public static int ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE() {
        return (int)2015L;
    }
    public static int ERROR_PROFILE_NOT_FOUND() {
        return (int)2016L;
    }
    public static int ERROR_INVALID_COLORSPACE() {
        return (int)2017L;
    }
    public static int ERROR_ICM_NOT_ENABLED() {
        return (int)2018L;
    }
    public static int ERROR_DELETING_ICM_XFORM() {
        return (int)2019L;
    }
    public static int ERROR_INVALID_TRANSFORM() {
        return (int)2020L;
    }
    public static int ERROR_COLORSPACE_MISMATCH() {
        return (int)2021L;
    }
    public static int ERROR_INVALID_COLORINDEX() {
        return (int)2022L;
    }
    public static int ERROR_PROFILE_DOES_NOT_MATCH_DEVICE() {
        return (int)2023L;
    }
    public static int ERROR_CONNECTED_OTHER_PASSWORD() {
        return (int)2108L;
    }
    public static int ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT() {
        return (int)2109L;
    }
    public static int ERROR_BAD_USERNAME() {
        return (int)2202L;
    }
    public static int ERROR_NOT_CONNECTED() {
        return (int)2250L;
    }
    public static int ERROR_OPEN_FILES() {
        return (int)2401L;
    }
    public static int ERROR_ACTIVE_CONNECTIONS() {
        return (int)2402L;
    }
    public static int ERROR_DEVICE_IN_USE() {
        return (int)2404L;
    }
    public static int ERROR_UNKNOWN_PRINT_MONITOR() {
        return (int)3000L;
    }
    public static int ERROR_PRINTER_DRIVER_IN_USE() {
        return (int)3001L;
    }
    public static int ERROR_SPOOL_FILE_NOT_FOUND() {
        return (int)3002L;
    }
    public static int ERROR_SPL_NO_STARTDOC() {
        return (int)3003L;
    }
    public static int ERROR_SPL_NO_ADDJOB() {
        return (int)3004L;
    }
    public static int ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED() {
        return (int)3005L;
    }
    public static int ERROR_PRINT_MONITOR_ALREADY_INSTALLED() {
        return (int)3006L;
    }
    public static int ERROR_INVALID_PRINT_MONITOR() {
        return (int)3007L;
    }
    public static int ERROR_PRINT_MONITOR_IN_USE() {
        return (int)3008L;
    }
    public static int ERROR_PRINTER_HAS_JOBS_QUEUED() {
        return (int)3009L;
    }
    public static int ERROR_SUCCESS_REBOOT_REQUIRED() {
        return (int)3010L;
    }
    public static int ERROR_SUCCESS_RESTART_REQUIRED() {
        return (int)3011L;
    }
    public static int ERROR_PRINTER_NOT_FOUND() {
        return (int)3012L;
    }
    public static int ERROR_PRINTER_DRIVER_WARNED() {
        return (int)3013L;
    }
    public static int ERROR_PRINTER_DRIVER_BLOCKED() {
        return (int)3014L;
    }
    public static int ERROR_PRINTER_DRIVER_PACKAGE_IN_USE() {
        return (int)3015L;
    }
    public static int ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND() {
        return (int)3016L;
    }
    public static int ERROR_FAIL_REBOOT_REQUIRED() {
        return (int)3017L;
    }
    public static int ERROR_FAIL_REBOOT_INITIATED() {
        return (int)3018L;
    }
    public static int ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED() {
        return (int)3019L;
    }
    public static int ERROR_PRINT_JOB_RESTART_REQUIRED() {
        return (int)3020L;
    }
    public static int ERROR_INVALID_PRINTER_DRIVER_MANIFEST() {
        return (int)3021L;
    }
    public static int ERROR_PRINTER_NOT_SHAREABLE() {
        return (int)3022L;
    }
    public static int ERROR_REQUEST_PAUSED() {
        return (int)3050L;
    }
    public static int ERROR_APPEXEC_CONDITION_NOT_SATISFIED() {
        return (int)3060L;
    }
    public static int ERROR_APPEXEC_HANDLE_INVALIDATED() {
        return (int)3061L;
    }
    public static int ERROR_APPEXEC_INVALID_HOST_GENERATION() {
        return (int)3062L;
    }
    public static int ERROR_APPEXEC_UNEXPECTED_PROCESS_REGISTRATION() {
        return (int)3063L;
    }
    public static int ERROR_APPEXEC_INVALID_HOST_STATE() {
        return (int)3064L;
    }
    public static int ERROR_APPEXEC_NO_DONOR() {
        return (int)3065L;
    }
    public static int ERROR_APPEXEC_HOST_ID_MISMATCH() {
        return (int)3066L;
    }
    public static int ERROR_APPEXEC_UNKNOWN_USER() {
        return (int)3067L;
    }
    public static int ERROR_IO_REISSUE_AS_CACHED() {
        return (int)3950L;
    }
    public static int ERROR_WINS_INTERNAL() {
        return (int)4000L;
    }
    public static int ERROR_CAN_NOT_DEL_LOCAL_WINS() {
        return (int)4001L;
    }
    public static int ERROR_STATIC_INIT() {
        return (int)4002L;
    }
    public static int ERROR_INC_BACKUP() {
        return (int)4003L;
    }
    public static int ERROR_FULL_BACKUP() {
        return (int)4004L;
    }
    public static int ERROR_REC_NON_EXISTENT() {
        return (int)4005L;
    }
    public static int ERROR_RPL_NOT_ALLOWED() {
        return (int)4006L;
    }
    public static int PEERDIST_ERROR_CONTENTINFO_VERSION_UNSUPPORTED() {
        return (int)4050L;
    }
    public static int PEERDIST_ERROR_CANNOT_PARSE_CONTENTINFO() {
        return (int)4051L;
    }
    public static int PEERDIST_ERROR_MISSING_DATA() {
        return (int)4052L;
    }
    public static int PEERDIST_ERROR_NO_MORE() {
        return (int)4053L;
    }
    public static int PEERDIST_ERROR_NOT_INITIALIZED() {
        return (int)4054L;
    }
    public static int PEERDIST_ERROR_ALREADY_INITIALIZED() {
        return (int)4055L;
    }
    public static int PEERDIST_ERROR_SHUTDOWN_IN_PROGRESS() {
        return (int)4056L;
    }
    public static int PEERDIST_ERROR_INVALIDATED() {
        return (int)4057L;
    }
    public static int PEERDIST_ERROR_ALREADY_EXISTS() {
        return (int)4058L;
    }
    public static int PEERDIST_ERROR_OPERATION_NOTFOUND() {
        return (int)4059L;
    }
    public static int PEERDIST_ERROR_ALREADY_COMPLETED() {
        return (int)4060L;
    }
    public static int PEERDIST_ERROR_OUT_OF_BOUNDS() {
        return (int)4061L;
    }
    public static int PEERDIST_ERROR_VERSION_UNSUPPORTED() {
        return (int)4062L;
    }
    public static int PEERDIST_ERROR_INVALID_CONFIGURATION() {
        return (int)4063L;
    }
    public static int PEERDIST_ERROR_NOT_LICENSED() {
        return (int)4064L;
    }
    public static int PEERDIST_ERROR_SERVICE_UNAVAILABLE() {
        return (int)4065L;
    }
    public static int PEERDIST_ERROR_TRUST_FAILURE() {
        return (int)4066L;
    }
    public static int ERROR_DHCP_ADDRESS_CONFLICT() {
        return (int)4100L;
    }
    public static int ERROR_WMI_GUID_NOT_FOUND() {
        return (int)4200L;
    }
    public static int ERROR_WMI_INSTANCE_NOT_FOUND() {
        return (int)4201L;
    }
    public static int ERROR_WMI_ITEMID_NOT_FOUND() {
        return (int)4202L;
    }
    public static int ERROR_WMI_TRY_AGAIN() {
        return (int)4203L;
    }
    public static int ERROR_WMI_DP_NOT_FOUND() {
        return (int)4204L;
    }
    public static int ERROR_WMI_UNRESOLVED_INSTANCE_REF() {
        return (int)4205L;
    }
    public static int ERROR_WMI_ALREADY_ENABLED() {
        return (int)4206L;
    }
    public static int ERROR_WMI_GUID_DISCONNECTED() {
        return (int)4207L;
    }
    public static int ERROR_WMI_SERVER_UNAVAILABLE() {
        return (int)4208L;
    }
    public static int ERROR_WMI_DP_FAILED() {
        return (int)4209L;
    }
    public static int ERROR_WMI_INVALID_MOF() {
        return (int)4210L;
    }
    public static int ERROR_WMI_INVALID_REGINFO() {
        return (int)4211L;
    }
    public static int ERROR_WMI_ALREADY_DISABLED() {
        return (int)4212L;
    }
    public static int ERROR_WMI_READ_ONLY() {
        return (int)4213L;
    }
    public static int ERROR_WMI_SET_FAILURE() {
        return (int)4214L;
    }
    public static int ERROR_NOT_APPCONTAINER() {
        return (int)4250L;
    }
    public static int ERROR_APPCONTAINER_REQUIRED() {
        return (int)4251L;
    }
    public static int ERROR_NOT_SUPPORTED_IN_APPCONTAINER() {
        return (int)4252L;
    }
    public static int ERROR_INVALID_PACKAGE_SID_LENGTH() {
        return (int)4253L;
    }
    public static int ERROR_INVALID_MEDIA() {
        return (int)4300L;
    }
    public static int ERROR_INVALID_LIBRARY() {
        return (int)4301L;
    }
    public static int ERROR_INVALID_MEDIA_POOL() {
        return (int)4302L;
    }
    public static int ERROR_DRIVE_MEDIA_MISMATCH() {
        return (int)4303L;
    }
    public static int ERROR_MEDIA_OFFLINE() {
        return (int)4304L;
    }
    public static int ERROR_LIBRARY_OFFLINE() {
        return (int)4305L;
    }
    public static int ERROR_EMPTY() {
        return (int)4306L;
    }
    public static int ERROR_NOT_EMPTY() {
        return (int)4307L;
    }
    public static int ERROR_MEDIA_UNAVAILABLE() {
        return (int)4308L;
    }
    public static int ERROR_RESOURCE_DISABLED() {
        return (int)4309L;
    }
    public static int ERROR_INVALID_CLEANER() {
        return (int)4310L;
    }
    public static int ERROR_UNABLE_TO_CLEAN() {
        return (int)4311L;
    }
    public static int ERROR_OBJECT_NOT_FOUND() {
        return (int)4312L;
    }
    public static int ERROR_DATABASE_FAILURE() {
        return (int)4313L;
    }
    public static int ERROR_DATABASE_FULL() {
        return (int)4314L;
    }
    public static int ERROR_MEDIA_INCOMPATIBLE() {
        return (int)4315L;
    }
    public static int ERROR_RESOURCE_NOT_PRESENT() {
        return (int)4316L;
    }
    public static int ERROR_INVALID_OPERATION() {
        return (int)4317L;
    }
    public static int ERROR_MEDIA_NOT_AVAILABLE() {
        return (int)4318L;
    }
    public static int ERROR_DEVICE_NOT_AVAILABLE() {
        return (int)4319L;
    }
    public static int ERROR_REQUEST_REFUSED() {
        return (int)4320L;
    }
    public static int ERROR_INVALID_DRIVE_OBJECT() {
        return (int)4321L;
    }
    public static int ERROR_LIBRARY_FULL() {
        return (int)4322L;
    }
    public static int ERROR_MEDIUM_NOT_ACCESSIBLE() {
        return (int)4323L;
    }
    public static int ERROR_UNABLE_TO_LOAD_MEDIUM() {
        return (int)4324L;
    }
    public static int ERROR_UNABLE_TO_INVENTORY_DRIVE() {
        return (int)4325L;
    }
    public static int ERROR_UNABLE_TO_INVENTORY_SLOT() {
        return (int)4326L;
    }
    public static int ERROR_UNABLE_TO_INVENTORY_TRANSPORT() {
        return (int)4327L;
    }
    public static int ERROR_TRANSPORT_FULL() {
        return (int)4328L;
    }
    public static int ERROR_CONTROLLING_IEPORT() {
        return (int)4329L;
    }
    public static int ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA() {
        return (int)4330L;
    }
    public static int ERROR_CLEANER_SLOT_SET() {
        return (int)4331L;
    }
    public static int ERROR_CLEANER_SLOT_NOT_SET() {
        return (int)4332L;
    }
    public static int ERROR_CLEANER_CARTRIDGE_SPENT() {
        return (int)4333L;
    }
    public static int ERROR_UNEXPECTED_OMID() {
        return (int)4334L;
    }
    public static int ERROR_CANT_DELETE_LAST_ITEM() {
        return (int)4335L;
    }
    public static int ERROR_MESSAGE_EXCEEDS_MAX_SIZE() {
        return (int)4336L;
    }
    public static int ERROR_VOLUME_CONTAINS_SYS_FILES() {
        return (int)4337L;
    }
    public static int ERROR_INDIGENOUS_TYPE() {
        return (int)4338L;
    }
    public static int ERROR_NO_SUPPORTING_DRIVES() {
        return (int)4339L;
    }
    public static int ERROR_CLEANER_CARTRIDGE_INSTALLED() {
        return (int)4340L;
    }
    public static int ERROR_IEPORT_FULL() {
        return (int)4341L;
    }
    public static int ERROR_FILE_OFFLINE() {
        return (int)4350L;
    }
    public static int ERROR_REMOTE_STORAGE_NOT_ACTIVE() {
        return (int)4351L;
    }
    public static int ERROR_REMOTE_STORAGE_MEDIA_ERROR() {
        return (int)4352L;
    }
    public static int ERROR_NOT_A_REPARSE_POINT() {
        return (int)4390L;
    }
    public static int ERROR_REPARSE_ATTRIBUTE_CONFLICT() {
        return (int)4391L;
    }
    public static int ERROR_INVALID_REPARSE_DATA() {
        return (int)4392L;
    }
    public static int ERROR_REPARSE_TAG_INVALID() {
        return (int)4393L;
    }
    public static int ERROR_REPARSE_TAG_MISMATCH() {
        return (int)4394L;
    }
    public static int ERROR_REPARSE_POINT_ENCOUNTERED() {
        return (int)4395L;
    }
    public static int ERROR_APP_DATA_NOT_FOUND() {
        return (int)4400L;
    }
    public static int ERROR_APP_DATA_EXPIRED() {
        return (int)4401L;
    }
    public static int ERROR_APP_DATA_CORRUPT() {
        return (int)4402L;
    }
    public static int ERROR_APP_DATA_LIMIT_EXCEEDED() {
        return (int)4403L;
    }
    public static int ERROR_APP_DATA_REBOOT_REQUIRED() {
        return (int)4404L;
    }
    public static int ERROR_SECUREBOOT_ROLLBACK_DETECTED() {
        return (int)4420L;
    }
    public static int ERROR_SECUREBOOT_POLICY_VIOLATION() {
        return (int)4421L;
    }
    public static int ERROR_SECUREBOOT_INVALID_POLICY() {
        return (int)4422L;
    }
    public static int ERROR_SECUREBOOT_POLICY_PUBLISHER_NOT_FOUND() {
        return (int)4423L;
    }
    public static int ERROR_SECUREBOOT_POLICY_NOT_SIGNED() {
        return (int)4424L;
    }
    public static int ERROR_SECUREBOOT_NOT_ENABLED() {
        return (int)4425L;
    }
    public static int ERROR_SECUREBOOT_FILE_REPLACED() {
        return (int)4426L;
    }
    public static int ERROR_SECUREBOOT_POLICY_NOT_AUTHORIZED() {
        return (int)4427L;
    }
    public static int ERROR_SECUREBOOT_POLICY_UNKNOWN() {
        return (int)4428L;
    }
    public static int ERROR_SECUREBOOT_POLICY_MISSING_ANTIROLLBACKVERSION() {
        return (int)4429L;
    }
    public static int ERROR_SECUREBOOT_PLATFORM_ID_MISMATCH() {
        return (int)4430L;
    }
    public static int ERROR_SECUREBOOT_POLICY_ROLLBACK_DETECTED() {
        return (int)4431L;
    }
    public static int ERROR_SECUREBOOT_POLICY_UPGRADE_MISMATCH() {
        return (int)4432L;
    }
    public static int ERROR_SECUREBOOT_REQUIRED_POLICY_FILE_MISSING() {
        return (int)4433L;
    }
    public static int ERROR_SECUREBOOT_NOT_BASE_POLICY() {
        return (int)4434L;
    }
    public static int ERROR_SECUREBOOT_NOT_SUPPLEMENTAL_POLICY() {
        return (int)4435L;
    }
    public static int ERROR_OFFLOAD_READ_FLT_NOT_SUPPORTED() {
        return (int)4440L;
    }
    public static int ERROR_OFFLOAD_WRITE_FLT_NOT_SUPPORTED() {
        return (int)4441L;
    }
    public static int ERROR_OFFLOAD_READ_FILE_NOT_SUPPORTED() {
        return (int)4442L;
    }
    public static int ERROR_OFFLOAD_WRITE_FILE_NOT_SUPPORTED() {
        return (int)4443L;
    }
    public static int ERROR_ALREADY_HAS_STREAM_ID() {
        return (int)4444L;
    }
    public static int ERROR_SMR_GARBAGE_COLLECTION_REQUIRED() {
        return (int)4445L;
    }
    public static int ERROR_WOF_WIM_HEADER_CORRUPT() {
        return (int)4446L;
    }
    public static int ERROR_WOF_WIM_RESOURCE_TABLE_CORRUPT() {
        return (int)4447L;
    }
    public static int ERROR_WOF_FILE_RESOURCE_TABLE_CORRUPT() {
        return (int)4448L;
    }
    public static int ERROR_VOLUME_NOT_SIS_ENABLED() {
        return (int)4500L;
    }
    public static int ERROR_SYSTEM_INTEGRITY_ROLLBACK_DETECTED() {
        return (int)4550L;
    }
    public static int ERROR_SYSTEM_INTEGRITY_POLICY_VIOLATION() {
        return (int)4551L;
    }
    public static int ERROR_SYSTEM_INTEGRITY_INVALID_POLICY() {
        return (int)4552L;
    }
    public static int ERROR_SYSTEM_INTEGRITY_POLICY_NOT_SIGNED() {
        return (int)4553L;
    }
    public static int ERROR_SYSTEM_INTEGRITY_TOO_MANY_POLICIES() {
        return (int)4554L;
    }
    public static int ERROR_SYSTEM_INTEGRITY_SUPPLEMENTAL_POLICY_NOT_AUTHORIZED() {
        return (int)4555L;
    }
    public static int ERROR_VSM_NOT_INITIALIZED() {
        return (int)4560L;
    }
    public static int ERROR_VSM_DMA_PROTECTION_NOT_IN_USE() {
        return (int)4561L;
    }
    public static int ERROR_PLATFORM_MANIFEST_NOT_AUTHORIZED() {
        return (int)4570L;
    }
    public static int ERROR_PLATFORM_MANIFEST_INVALID() {
        return (int)4571L;
    }
    public static int ERROR_PLATFORM_MANIFEST_FILE_NOT_AUTHORIZED() {
        return (int)4572L;
    }
    public static int ERROR_PLATFORM_MANIFEST_CATALOG_NOT_AUTHORIZED() {
        return (int)4573L;
    }
    public static int ERROR_PLATFORM_MANIFEST_BINARY_ID_NOT_FOUND() {
        return (int)4574L;
    }
    public static int ERROR_PLATFORM_MANIFEST_NOT_ACTIVE() {
        return (int)4575L;
    }
    public static int ERROR_PLATFORM_MANIFEST_NOT_SIGNED() {
        return (int)4576L;
    }
    public static int ERROR_DEPENDENT_RESOURCE_EXISTS() {
        return (int)5001L;
    }
    public static int ERROR_DEPENDENCY_NOT_FOUND() {
        return (int)5002L;
    }
    public static int ERROR_DEPENDENCY_ALREADY_EXISTS() {
        return (int)5003L;
    }
    public static int ERROR_RESOURCE_NOT_ONLINE() {
        return (int)5004L;
    }
    public static int ERROR_HOST_NODE_NOT_AVAILABLE() {
        return (int)5005L;
    }
    public static int ERROR_RESOURCE_NOT_AVAILABLE() {
        return (int)5006L;
    }
    public static int ERROR_RESOURCE_NOT_FOUND() {
        return (int)5007L;
    }
    public static int ERROR_SHUTDOWN_CLUSTER() {
        return (int)5008L;
    }
    public static int ERROR_CANT_EVICT_ACTIVE_NODE() {
        return (int)5009L;
    }
    public static int ERROR_OBJECT_ALREADY_EXISTS() {
        return (int)5010L;
    }
    public static int ERROR_OBJECT_IN_LIST() {
        return (int)5011L;
    }
    public static int ERROR_GROUP_NOT_AVAILABLE() {
        return (int)5012L;
    }
    public static int ERROR_GROUP_NOT_FOUND() {
        return (int)5013L;
    }
    public static int ERROR_GROUP_NOT_ONLINE() {
        return (int)5014L;
    }
    public static int ERROR_HOST_NODE_NOT_RESOURCE_OWNER() {
        return (int)5015L;
    }
    public static int ERROR_HOST_NODE_NOT_GROUP_OWNER() {
        return (int)5016L;
    }
    public static int ERROR_RESMON_CREATE_FAILED() {
        return (int)5017L;
    }
    public static int ERROR_RESMON_ONLINE_FAILED() {
        return (int)5018L;
    }
    public static int ERROR_RESOURCE_ONLINE() {
        return (int)5019L;
    }
    public static int ERROR_QUORUM_RESOURCE() {
        return (int)5020L;
    }
    public static int ERROR_NOT_QUORUM_CAPABLE() {
        return (int)5021L;
    }
    public static int ERROR_CLUSTER_SHUTTING_DOWN() {
        return (int)5022L;
    }
    public static int ERROR_INVALID_STATE() {
        return (int)5023L;
    }
    public static int ERROR_RESOURCE_PROPERTIES_STORED() {
        return (int)5024L;
    }
    public static int ERROR_NOT_QUORUM_CLASS() {
        return (int)5025L;
    }
    public static int ERROR_CORE_RESOURCE() {
        return (int)5026L;
    }
    public static int ERROR_QUORUM_RESOURCE_ONLINE_FAILED() {
        return (int)5027L;
    }
    public static int ERROR_QUORUMLOG_OPEN_FAILED() {
        return (int)5028L;
    }
    public static int ERROR_CLUSTERLOG_CORRUPT() {
        return (int)5029L;
    }
    public static int ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE() {
        return (int)5030L;
    }
    public static int ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE() {
        return (int)5031L;
    }
    public static int ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND() {
        return (int)5032L;
    }
    public static int ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE() {
        return (int)5033L;
    }
    public static int ERROR_QUORUM_OWNER_ALIVE() {
        return (int)5034L;
    }
    public static int ERROR_NETWORK_NOT_AVAILABLE() {
        return (int)5035L;
    }
    public static int ERROR_NODE_NOT_AVAILABLE() {
        return (int)5036L;
    }
    public static int ERROR_ALL_NODES_NOT_AVAILABLE() {
        return (int)5037L;
    }
    public static int ERROR_RESOURCE_FAILED() {
        return (int)5038L;
    }
    public static int ERROR_CLUSTER_INVALID_NODE() {
        return (int)5039L;
    }
    public static int ERROR_CLUSTER_NODE_EXISTS() {
        return (int)5040L;
    }
    public static int ERROR_CLUSTER_JOIN_IN_PROGRESS() {
        return (int)5041L;
    }
    public static int ERROR_CLUSTER_NODE_NOT_FOUND() {
        return (int)5042L;
    }
    public static int ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND() {
        return (int)5043L;
    }
    public static int ERROR_CLUSTER_NETWORK_EXISTS() {
        return (int)5044L;
    }
    public static int ERROR_CLUSTER_NETWORK_NOT_FOUND() {
        return (int)5045L;
    }
    public static int ERROR_CLUSTER_NETINTERFACE_EXISTS() {
        return (int)5046L;
    }
    public static int ERROR_CLUSTER_NETINTERFACE_NOT_FOUND() {
        return (int)5047L;
    }
    public static int ERROR_CLUSTER_INVALID_REQUEST() {
        return (int)5048L;
    }
    public static int ERROR_CLUSTER_INVALID_NETWORK_PROVIDER() {
        return (int)5049L;
    }
    public static int ERROR_CLUSTER_NODE_DOWN() {
        return (int)5050L;
    }
    public static int ERROR_CLUSTER_NODE_UNREACHABLE() {
        return (int)5051L;
    }
    public static int ERROR_CLUSTER_NODE_NOT_MEMBER() {
        return (int)5052L;
    }
    public static int ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS() {
        return (int)5053L;
    }
    public static int ERROR_CLUSTER_INVALID_NETWORK() {
        return (int)5054L;
    }
    public static int ERROR_CLUSTER_NODE_UP() {
        return (int)5056L;
    }
    public static int ERROR_CLUSTER_IPADDR_IN_USE() {
        return (int)5057L;
    }
    public static int ERROR_CLUSTER_NODE_NOT_PAUSED() {
        return (int)5058L;
    }
    public static int ERROR_CLUSTER_NO_SECURITY_CONTEXT() {
        return (int)5059L;
    }
    public static int ERROR_CLUSTER_NETWORK_NOT_INTERNAL() {
        return (int)5060L;
    }
    public static int ERROR_CLUSTER_NODE_ALREADY_UP() {
        return (int)5061L;
    }
    public static int ERROR_CLUSTER_NODE_ALREADY_DOWN() {
        return (int)5062L;
    }
    public static int ERROR_CLUSTER_NETWORK_ALREADY_ONLINE() {
        return (int)5063L;
    }
    public static int ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE() {
        return (int)5064L;
    }
    public static int ERROR_CLUSTER_NODE_ALREADY_MEMBER() {
        return (int)5065L;
    }
    public static int ERROR_CLUSTER_LAST_INTERNAL_NETWORK() {
        return (int)5066L;
    }
    public static int ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS() {
        return (int)5067L;
    }
    public static int ERROR_INVALID_OPERATION_ON_QUORUM() {
        return (int)5068L;
    }
    public static int ERROR_DEPENDENCY_NOT_ALLOWED() {
        return (int)5069L;
    }
    public static int ERROR_CLUSTER_NODE_PAUSED() {
        return (int)5070L;
    }
    public static int ERROR_NODE_CANT_HOST_RESOURCE() {
        return (int)5071L;
    }
    public static int ERROR_CLUSTER_NODE_NOT_READY() {
        return (int)5072L;
    }
    public static int ERROR_CLUSTER_NODE_SHUTTING_DOWN() {
        return (int)5073L;
    }
    public static int ERROR_CLUSTER_JOIN_ABORTED() {
        return (int)5074L;
    }
    public static int ERROR_CLUSTER_INCOMPATIBLE_VERSIONS() {
        return (int)5075L;
    }
    public static int ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED() {
        return (int)5076L;
    }
    public static int ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED() {
        return (int)5077L;
    }
    public static int ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND() {
        return (int)5078L;
    }
    public static int ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED() {
        return (int)5079L;
    }
    public static int ERROR_CLUSTER_RESNAME_NOT_FOUND() {
        return (int)5080L;
    }
    public static int ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED() {
        return (int)5081L;
    }
    public static int ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST() {
        return (int)5082L;
    }
    public static int ERROR_CLUSTER_DATABASE_SEQMISMATCH() {
        return (int)5083L;
    }
    public static int ERROR_RESMON_INVALID_STATE() {
        return (int)5084L;
    }
    public static int ERROR_CLUSTER_GUM_NOT_LOCKER() {
        return (int)5085L;
    }
    public static int ERROR_QUORUM_DISK_NOT_FOUND() {
        return (int)5086L;
    }
    public static int ERROR_DATABASE_BACKUP_CORRUPT() {
        return (int)5087L;
    }
    public static int ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT() {
        return (int)5088L;
    }
    public static int ERROR_RESOURCE_PROPERTY_UNCHANGEABLE() {
        return (int)5089L;
    }
    public static int ERROR_NO_ADMIN_ACCESS_POINT() {
        return (int)5090L;
    }
    public static int ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE() {
        return (int)5890L;
    }
    public static int ERROR_CLUSTER_QUORUMLOG_NOT_FOUND() {
        return (int)5891L;
    }
    public static int ERROR_CLUSTER_MEMBERSHIP_HALT() {
        return (int)5892L;
    }
    public static int ERROR_CLUSTER_INSTANCE_ID_MISMATCH() {
        return (int)5893L;
    }
    public static int ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP() {
        return (int)5894L;
    }
    public static int ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH() {
        return (int)5895L;
    }
    public static int ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP() {
        return (int)5896L;
    }
    public static int ERROR_CLUSTER_PARAMETER_MISMATCH() {
        return (int)5897L;
    }
    public static int ERROR_NODE_CANNOT_BE_CLUSTERED() {
        return (int)5898L;
    }
    public static int ERROR_CLUSTER_WRONG_OS_VERSION() {
        return (int)5899L;
    }
    public static int ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME() {
        return (int)5900L;
    }
    public static int ERROR_CLUSCFG_ALREADY_COMMITTED() {
        return (int)5901L;
    }
    public static int ERROR_CLUSCFG_ROLLBACK_FAILED() {
        return (int)5902L;
    }
    public static int ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT() {
        return (int)5903L;
    }
    public static int ERROR_CLUSTER_OLD_VERSION() {
        return (int)5904L;
    }
    public static int ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME() {
        return (int)5905L;
    }
    public static int ERROR_CLUSTER_NO_NET_ADAPTERS() {
        return (int)5906L;
    }
    public static int ERROR_CLUSTER_POISONED() {
        return (int)5907L;
    }
    public static int ERROR_CLUSTER_GROUP_MOVING() {
        return (int)5908L;
    }
    public static int ERROR_CLUSTER_RESOURCE_TYPE_BUSY() {
        return (int)5909L;
    }
    public static int ERROR_RESOURCE_CALL_TIMED_OUT() {
        return (int)5910L;
    }
    public static int ERROR_INVALID_CLUSTER_IPV6_ADDRESS() {
        return (int)5911L;
    }
    public static int ERROR_CLUSTER_INTERNAL_INVALID_FUNCTION() {
        return (int)5912L;
    }
    public static int ERROR_CLUSTER_PARAMETER_OUT_OF_BOUNDS() {
        return (int)5913L;
    }
    public static int ERROR_CLUSTER_PARTIAL_SEND() {
        return (int)5914L;
    }
    public static int ERROR_CLUSTER_REGISTRY_INVALID_FUNCTION() {
        return (int)5915L;
    }
    public static int ERROR_CLUSTER_INVALID_STRING_TERMINATION() {
        return (int)5916L;
    }
    public static int ERROR_CLUSTER_INVALID_STRING_FORMAT() {
        return (int)5917L;
    }
    public static int ERROR_CLUSTER_DATABASE_TRANSACTION_IN_PROGRESS() {
        return (int)5918L;
    }
    public static int ERROR_CLUSTER_DATABASE_TRANSACTION_NOT_IN_PROGRESS() {
        return (int)5919L;
    }
    public static int ERROR_CLUSTER_NULL_DATA() {
        return (int)5920L;
    }
    public static int ERROR_CLUSTER_PARTIAL_READ() {
        return (int)5921L;
    }
    public static int ERROR_CLUSTER_PARTIAL_WRITE() {
        return (int)5922L;
    }
    public static int ERROR_CLUSTER_CANT_DESERIALIZE_DATA() {
        return (int)5923L;
    }
    public static int ERROR_DEPENDENT_RESOURCE_PROPERTY_CONFLICT() {
        return (int)5924L;
    }
    public static int ERROR_CLUSTER_NO_QUORUM() {
        return (int)5925L;
    }
    public static int ERROR_CLUSTER_INVALID_IPV6_NETWORK() {
        return (int)5926L;
    }
    public static int ERROR_CLUSTER_INVALID_IPV6_TUNNEL_NETWORK() {
        return (int)5927L;
    }
    public static int ERROR_QUORUM_NOT_ALLOWED_IN_THIS_GROUP() {
        return (int)5928L;
    }
    public static int ERROR_DEPENDENCY_TREE_TOO_COMPLEX() {
        return (int)5929L;
    }
    public static int ERROR_EXCEPTION_IN_RESOURCE_CALL() {
        return (int)5930L;
    }
    public static int ERROR_CLUSTER_RHS_FAILED_INITIALIZATION() {
        return (int)5931L;
    }
    public static int ERROR_CLUSTER_NOT_INSTALLED() {
        return (int)5932L;
    }
    public static int ERROR_CLUSTER_RESOURCES_MUST_BE_ONLINE_ON_THE_SAME_NODE() {
        return (int)5933L;
    }
    public static int ERROR_CLUSTER_MAX_NODES_IN_CLUSTER() {
        return (int)5934L;
    }
    public static int ERROR_CLUSTER_TOO_MANY_NODES() {
        return (int)5935L;
    }
    public static int ERROR_CLUSTER_OBJECT_ALREADY_USED() {
        return (int)5936L;
    }
    public static int ERROR_NONCORE_GROUPS_FOUND() {
        return (int)5937L;
    }
    public static int ERROR_FILE_SHARE_RESOURCE_CONFLICT() {
        return (int)5938L;
    }
    public static int ERROR_CLUSTER_EVICT_INVALID_REQUEST() {
        return (int)5939L;
    }
    public static int ERROR_CLUSTER_SINGLETON_RESOURCE() {
        return (int)5940L;
    }
    public static int ERROR_CLUSTER_GROUP_SINGLETON_RESOURCE() {
        return (int)5941L;
    }
    public static int ERROR_CLUSTER_RESOURCE_PROVIDER_FAILED() {
        return (int)5942L;
    }
    public static int ERROR_CLUSTER_RESOURCE_CONFIGURATION_ERROR() {
        return (int)5943L;
    }
    public static int ERROR_CLUSTER_GROUP_BUSY() {
        return (int)5944L;
    }
    public static int ERROR_CLUSTER_NOT_SHARED_VOLUME() {
        return (int)5945L;
    }
    public static int ERROR_CLUSTER_INVALID_SECURITY_DESCRIPTOR() {
        return (int)5946L;
    }
    public static int ERROR_CLUSTER_SHARED_VOLUMES_IN_USE() {
        return (int)5947L;
    }
    public static int ERROR_CLUSTER_USE_SHARED_VOLUMES_API() {
        return (int)5948L;
    }
    public static int ERROR_CLUSTER_BACKUP_IN_PROGRESS() {
        return (int)5949L;
    }
    public static int ERROR_NON_CSV_PATH() {
        return (int)5950L;
    }
    public static int ERROR_CSV_VOLUME_NOT_LOCAL() {
        return (int)5951L;
    }
    public static int ERROR_CLUSTER_WATCHDOG_TERMINATING() {
        return (int)5952L;
    }
    public static int ERROR_CLUSTER_RESOURCE_VETOED_MOVE_INCOMPATIBLE_NODES() {
        return (int)5953L;
    }
    public static int ERROR_CLUSTER_INVALID_NODE_WEIGHT() {
        return (int)5954L;
    }
    public static int ERROR_CLUSTER_RESOURCE_VETOED_CALL() {
        return (int)5955L;
    }
    public static int ERROR_RESMON_SYSTEM_RESOURCES_LACKING() {
        return (int)5956L;
    }
    public static int ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_DESTINATION() {
        return (int)5957L;
    }
    public static int ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_SOURCE() {
        return (int)5958L;
    }
    public static int ERROR_CLUSTER_GROUP_QUEUED() {
        return (int)5959L;
    }
    public static int ERROR_CLUSTER_RESOURCE_LOCKED_STATUS() {
        return (int)5960L;
    }
    public static int ERROR_CLUSTER_SHARED_VOLUME_FAILOVER_NOT_ALLOWED() {
        return (int)5961L;
    }
    public static int ERROR_CLUSTER_NODE_DRAIN_IN_PROGRESS() {
        return (int)5962L;
    }
    public static int ERROR_CLUSTER_DISK_NOT_CONNECTED() {
        return (int)5963L;
    }
    public static int ERROR_DISK_NOT_CSV_CAPABLE() {
        return (int)5964L;
    }
    public static int ERROR_RESOURCE_NOT_IN_AVAILABLE_STORAGE() {
        return (int)5965L;
    }
    public static int ERROR_CLUSTER_SHARED_VOLUME_REDIRECTED() {
        return (int)5966L;
    }
    public static int ERROR_CLUSTER_SHARED_VOLUME_NOT_REDIRECTED() {
        return (int)5967L;
    }
    public static int ERROR_CLUSTER_CANNOT_RETURN_PROPERTIES() {
        return (int)5968L;
    }
    public static int ERROR_CLUSTER_RESOURCE_CONTAINS_UNSUPPORTED_DIFF_AREA_FOR_SHARED_VOLUMES() {
        return (int)5969L;
    }
    public static int ERROR_CLUSTER_RESOURCE_IS_IN_MAINTENANCE_MODE() {
        return (int)5970L;
    }
    public static int ERROR_CLUSTER_AFFINITY_CONFLICT() {
        return (int)5971L;
    }
    public static int ERROR_CLUSTER_RESOURCE_IS_REPLICA_VIRTUAL_MACHINE() {
        return (int)5972L;
    }
    public static int ERROR_CLUSTER_UPGRADE_INCOMPATIBLE_VERSIONS() {
        return (int)5973L;
    }
    public static int ERROR_CLUSTER_UPGRADE_FIX_QUORUM_NOT_SUPPORTED() {
        return (int)5974L;
    }
    public static int ERROR_CLUSTER_UPGRADE_RESTART_REQUIRED() {
        return (int)5975L;
    }
    public static int ERROR_CLUSTER_UPGRADE_IN_PROGRESS() {
        return (int)5976L;
    }
    public static int ERROR_CLUSTER_UPGRADE_INCOMPLETE() {
        return (int)5977L;
    }
    public static int ERROR_CLUSTER_NODE_IN_GRACE_PERIOD() {
        return (int)5978L;
    }
    public static int ERROR_CLUSTER_CSV_IO_PAUSE_TIMEOUT() {
        return (int)5979L;
    }
    public static int ERROR_NODE_NOT_ACTIVE_CLUSTER_MEMBER() {
        return (int)5980L;
    }
    public static int ERROR_CLUSTER_RESOURCE_NOT_MONITORED() {
        return (int)5981L;
    }
    public static int ERROR_CLUSTER_RESOURCE_DOES_NOT_SUPPORT_UNMONITORED() {
        return (int)5982L;
    }
    public static int ERROR_CLUSTER_RESOURCE_IS_REPLICATED() {
        return (int)5983L;
    }
    public static int ERROR_CLUSTER_NODE_ISOLATED() {
        return (int)5984L;
    }
    public static int ERROR_CLUSTER_NODE_QUARANTINED() {
        return (int)5985L;
    }
    public static int ERROR_CLUSTER_DATABASE_UPDATE_CONDITION_FAILED() {
        return (int)5986L;
    }
    public static int ERROR_CLUSTER_SPACE_DEGRADED() {
        return (int)5987L;
    }
    public static int ERROR_CLUSTER_TOKEN_DELEGATION_NOT_SUPPORTED() {
        return (int)5988L;
    }
    public static int ERROR_CLUSTER_CSV_INVALID_HANDLE() {
        return (int)5989L;
    }
    public static int ERROR_CLUSTER_CSV_SUPPORTED_ONLY_ON_COORDINATOR() {
        return (int)5990L;
    }
    public static int ERROR_GROUPSET_NOT_AVAILABLE() {
        return (int)5991L;
    }
    public static int ERROR_GROUPSET_NOT_FOUND() {
        return (int)5992L;
    }
    public static int ERROR_GROUPSET_CANT_PROVIDE() {
        return (int)5993L;
    }
    public static int ERROR_CLUSTER_FAULT_DOMAIN_PARENT_NOT_FOUND() {
        return (int)5994L;
    }
    public static int ERROR_CLUSTER_FAULT_DOMAIN_INVALID_HIERARCHY() {
        return (int)5995L;
    }
    public static int ERROR_CLUSTER_FAULT_DOMAIN_FAILED_S2D_VALIDATION() {
        return (int)5996L;
    }
    public static int ERROR_CLUSTER_FAULT_DOMAIN_S2D_CONNECTIVITY_LOSS() {
        return (int)5997L;
    }
    public static int ERROR_CLUSTER_INVALID_INFRASTRUCTURE_FILESERVER_NAME() {
        return (int)5998L;
    }
    public static int ERROR_CLUSTERSET_MANAGEMENT_CLUSTER_UNREACHABLE() {
        return (int)5999L;
    }
    public static int ERROR_ENCRYPTION_FAILED() {
        return (int)6000L;
    }
    public static int ERROR_DECRYPTION_FAILED() {
        return (int)6001L;
    }
    public static int ERROR_FILE_ENCRYPTED() {
        return (int)6002L;
    }
    public static int ERROR_NO_RECOVERY_POLICY() {
        return (int)6003L;
    }
    public static int ERROR_NO_EFS() {
        return (int)6004L;
    }
    public static int ERROR_WRONG_EFS() {
        return (int)6005L;
    }
    public static int ERROR_NO_USER_KEYS() {
        return (int)6006L;
    }
    public static int ERROR_FILE_NOT_ENCRYPTED() {
        return (int)6007L;
    }
    public static int ERROR_NOT_EXPORT_FORMAT() {
        return (int)6008L;
    }
    public static int ERROR_FILE_READ_ONLY() {
        return (int)6009L;
    }
    public static int ERROR_DIR_EFS_DISALLOWED() {
        return (int)6010L;
    }
    public static int ERROR_EFS_SERVER_NOT_TRUSTED() {
        return (int)6011L;
    }
    public static int ERROR_BAD_RECOVERY_POLICY() {
        return (int)6012L;
    }
    public static int ERROR_EFS_ALG_BLOB_TOO_BIG() {
        return (int)6013L;
    }
    public static int ERROR_VOLUME_NOT_SUPPORT_EFS() {
        return (int)6014L;
    }
    public static int ERROR_EFS_DISABLED() {
        return (int)6015L;
    }
    public static int ERROR_EFS_VERSION_NOT_SUPPORT() {
        return (int)6016L;
    }
    public static int ERROR_CS_ENCRYPTION_INVALID_SERVER_RESPONSE() {
        return (int)6017L;
    }
    public static int ERROR_CS_ENCRYPTION_UNSUPPORTED_SERVER() {
        return (int)6018L;
    }
    public static int ERROR_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE() {
        return (int)6019L;
    }
    public static int ERROR_CS_ENCRYPTION_NEW_ENCRYPTED_FILE() {
        return (int)6020L;
    }
    public static int ERROR_CS_ENCRYPTION_FILE_NOT_CSE() {
        return (int)6021L;
    }
    public static int ERROR_ENCRYPTION_POLICY_DENIES_OPERATION() {
        return (int)6022L;
    }
    public static int ERROR_WIP_ENCRYPTION_FAILED() {
        return (int)6023L;
    }
    public static int ERROR_NO_BROWSER_SERVERS_FOUND() {
        return (int)6118L;
    }
    public static int SCHED_E_SERVICE_NOT_LOCALSYSTEM() {
        return (int)6200L;
    }
    public static int ERROR_CLUSTER_OBJECT_IS_CLUSTER_SET_VM() {
        return (int)6250L;
    }
    public static int ERROR_LOG_SECTOR_INVALID() {
        return (int)6600L;
    }
    public static int ERROR_LOG_SECTOR_PARITY_INVALID() {
        return (int)6601L;
    }
    public static int ERROR_LOG_SECTOR_REMAPPED() {
        return (int)6602L;
    }
    public static int ERROR_LOG_BLOCK_INCOMPLETE() {
        return (int)6603L;
    }
    public static int ERROR_LOG_INVALID_RANGE() {
        return (int)6604L;
    }
    public static int ERROR_LOG_BLOCKS_EXHAUSTED() {
        return (int)6605L;
    }
    public static int ERROR_LOG_READ_CONTEXT_INVALID() {
        return (int)6606L;
    }
    public static int ERROR_LOG_RESTART_INVALID() {
        return (int)6607L;
    }
    public static int ERROR_LOG_BLOCK_VERSION() {
        return (int)6608L;
    }
    public static int ERROR_LOG_BLOCK_INVALID() {
        return (int)6609L;
    }
    public static int ERROR_LOG_READ_MODE_INVALID() {
        return (int)6610L;
    }
    public static int ERROR_LOG_NO_RESTART() {
        return (int)6611L;
    }
    public static int ERROR_LOG_METADATA_CORRUPT() {
        return (int)6612L;
    }
    public static int ERROR_LOG_METADATA_INVALID() {
        return (int)6613L;
    }
    public static int ERROR_LOG_METADATA_INCONSISTENT() {
        return (int)6614L;
    }
    public static int ERROR_LOG_RESERVATION_INVALID() {
        return (int)6615L;
    }
    public static int ERROR_LOG_CANT_DELETE() {
        return (int)6616L;
    }
    public static int ERROR_LOG_CONTAINER_LIMIT_EXCEEDED() {
        return (int)6617L;
    }
    public static int ERROR_LOG_START_OF_LOG() {
        return (int)6618L;
    }
    public static int ERROR_LOG_POLICY_ALREADY_INSTALLED() {
        return (int)6619L;
    }
    public static int ERROR_LOG_POLICY_NOT_INSTALLED() {
        return (int)6620L;
    }
    public static int ERROR_LOG_POLICY_INVALID() {
        return (int)6621L;
    }
    public static int ERROR_LOG_POLICY_CONFLICT() {
        return (int)6622L;
    }
    public static int ERROR_LOG_PINNED_ARCHIVE_TAIL() {
        return (int)6623L;
    }
    public static int ERROR_LOG_RECORD_NONEXISTENT() {
        return (int)6624L;
    }
    public static int ERROR_LOG_RECORDS_RESERVED_INVALID() {
        return (int)6625L;
    }
    public static int ERROR_LOG_SPACE_RESERVED_INVALID() {
        return (int)6626L;
    }
    public static int ERROR_LOG_TAIL_INVALID() {
        return (int)6627L;
    }
    public static int ERROR_LOG_FULL() {
        return (int)6628L;
    }
    public static int ERROR_COULD_NOT_RESIZE_LOG() {
        return (int)6629L;
    }
    public static int ERROR_LOG_MULTIPLEXED() {
        return (int)6630L;
    }
    public static int ERROR_LOG_DEDICATED() {
        return (int)6631L;
    }
    public static int ERROR_LOG_ARCHIVE_NOT_IN_PROGRESS() {
        return (int)6632L;
    }
    public static int ERROR_LOG_ARCHIVE_IN_PROGRESS() {
        return (int)6633L;
    }
    public static int ERROR_LOG_EPHEMERAL() {
        return (int)6634L;
    }
    public static int ERROR_LOG_NOT_ENOUGH_CONTAINERS() {
        return (int)6635L;
    }
    public static int ERROR_LOG_CLIENT_ALREADY_REGISTERED() {
        return (int)6636L;
    }
    public static int ERROR_LOG_CLIENT_NOT_REGISTERED() {
        return (int)6637L;
    }
    public static int ERROR_LOG_FULL_HANDLER_IN_PROGRESS() {
        return (int)6638L;
    }
    public static int ERROR_LOG_CONTAINER_READ_FAILED() {
        return (int)6639L;
    }
    public static int ERROR_LOG_CONTAINER_WRITE_FAILED() {
        return (int)6640L;
    }
    public static int ERROR_LOG_CONTAINER_OPEN_FAILED() {
        return (int)6641L;
    }
    public static int ERROR_LOG_CONTAINER_STATE_INVALID() {
        return (int)6642L;
    }
    public static int ERROR_LOG_STATE_INVALID() {
        return (int)6643L;
    }
    public static int ERROR_LOG_PINNED() {
        return (int)6644L;
    }
    public static int ERROR_LOG_METADATA_FLUSH_FAILED() {
        return (int)6645L;
    }
    public static int ERROR_LOG_INCONSISTENT_SECURITY() {
        return (int)6646L;
    }
    public static int ERROR_LOG_APPENDED_FLUSH_FAILED() {
        return (int)6647L;
    }
    public static int ERROR_LOG_PINNED_RESERVATION() {
        return (int)6648L;
    }
    public static int ERROR_INVALID_TRANSACTION() {
        return (int)6700L;
    }
    public static int ERROR_TRANSACTION_NOT_ACTIVE() {
        return (int)6701L;
    }
    public static int ERROR_TRANSACTION_REQUEST_NOT_VALID() {
        return (int)6702L;
    }
    public static int ERROR_TRANSACTION_NOT_REQUESTED() {
        return (int)6703L;
    }
    public static int ERROR_TRANSACTION_ALREADY_ABORTED() {
        return (int)6704L;
    }
    public static int ERROR_TRANSACTION_ALREADY_COMMITTED() {
        return (int)6705L;
    }
    public static int ERROR_TM_INITIALIZATION_FAILED() {
        return (int)6706L;
    }
    public static int ERROR_RESOURCEMANAGER_READ_ONLY() {
        return (int)6707L;
    }
    public static int ERROR_TRANSACTION_NOT_JOINED() {
        return (int)6708L;
    }
    public static int ERROR_TRANSACTION_SUPERIOR_EXISTS() {
        return (int)6709L;
    }
    public static int ERROR_CRM_PROTOCOL_ALREADY_EXISTS() {
        return (int)6710L;
    }
    public static int ERROR_TRANSACTION_PROPAGATION_FAILED() {
        return (int)6711L;
    }
    public static int ERROR_CRM_PROTOCOL_NOT_FOUND() {
        return (int)6712L;
    }
    public static int ERROR_TRANSACTION_INVALID_MARSHALL_BUFFER() {
        return (int)6713L;
    }
    public static int ERROR_CURRENT_TRANSACTION_NOT_VALID() {
        return (int)6714L;
    }
    public static int ERROR_TRANSACTION_NOT_FOUND() {
        return (int)6715L;
    }
    public static int ERROR_RESOURCEMANAGER_NOT_FOUND() {
        return (int)6716L;
    }
    public static int ERROR_ENLISTMENT_NOT_FOUND() {
        return (int)6717L;
    }
    public static int ERROR_TRANSACTIONMANAGER_NOT_FOUND() {
        return (int)6718L;
    }
    public static int ERROR_TRANSACTIONMANAGER_NOT_ONLINE() {
        return (int)6719L;
    }
    public static int ERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION() {
        return (int)6720L;
    }
    public static int ERROR_TRANSACTION_NOT_ROOT() {
        return (int)6721L;
    }
    public static int ERROR_TRANSACTION_OBJECT_EXPIRED() {
        return (int)6722L;
    }
    public static int ERROR_TRANSACTION_RESPONSE_NOT_ENLISTED() {
        return (int)6723L;
    }
    public static int ERROR_TRANSACTION_RECORD_TOO_LONG() {
        return (int)6724L;
    }
    public static int ERROR_IMPLICIT_TRANSACTION_NOT_SUPPORTED() {
        return (int)6725L;
    }
    public static int ERROR_TRANSACTION_INTEGRITY_VIOLATED() {
        return (int)6726L;
    }
    public static int ERROR_TRANSACTIONMANAGER_IDENTITY_MISMATCH() {
        return (int)6727L;
    }
    public static int ERROR_RM_CANNOT_BE_FROZEN_FOR_SNAPSHOT() {
        return (int)6728L;
    }
    public static int ERROR_TRANSACTION_MUST_WRITETHROUGH() {
        return (int)6729L;
    }
    public static int ERROR_TRANSACTION_NO_SUPERIOR() {
        return (int)6730L;
    }
    public static int ERROR_HEURISTIC_DAMAGE_POSSIBLE() {
        return (int)6731L;
    }
    public static int ERROR_TRANSACTIONAL_CONFLICT() {
        return (int)6800L;
    }
    public static int ERROR_RM_NOT_ACTIVE() {
        return (int)6801L;
    }
    public static int ERROR_RM_METADATA_CORRUPT() {
        return (int)6802L;
    }
    public static int ERROR_DIRECTORY_NOT_RM() {
        return (int)6803L;
    }
    public static int ERROR_TRANSACTIONS_UNSUPPORTED_REMOTE() {
        return (int)6805L;
    }
    public static int ERROR_LOG_RESIZE_INVALID_SIZE() {
        return (int)6806L;
    }
    public static int ERROR_OBJECT_NO_LONGER_EXISTS() {
        return (int)6807L;
    }
    public static int ERROR_STREAM_MINIVERSION_NOT_FOUND() {
        return (int)6808L;
    }
    public static int ERROR_STREAM_MINIVERSION_NOT_VALID() {
        return (int)6809L;
    }
    public static int ERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION() {
        return (int)6810L;
    }
    public static int ERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT() {
        return (int)6811L;
    }
    public static int ERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONS() {
        return (int)6812L;
    }
    public static int ERROR_REMOTE_FILE_VERSION_MISMATCH() {
        return (int)6814L;
    }
    public static int ERROR_HANDLE_NO_LONGER_VALID() {
        return (int)6815L;
    }
    public static int ERROR_NO_TXF_METADATA() {
        return (int)6816L;
    }
    public static int ERROR_LOG_CORRUPTION_DETECTED() {
        return (int)6817L;
    }
    public static int ERROR_CANT_RECOVER_WITH_HANDLE_OPEN() {
        return (int)6818L;
    }
    public static int ERROR_RM_DISCONNECTED() {
        return (int)6819L;
    }
    public static int ERROR_ENLISTMENT_NOT_SUPERIOR() {
        return (int)6820L;
    }
    public static int ERROR_RECOVERY_NOT_NEEDED() {
        return (int)6821L;
    }
    public static int ERROR_RM_ALREADY_STARTED() {
        return (int)6822L;
    }
    public static int ERROR_FILE_IDENTITY_NOT_PERSISTENT() {
        return (int)6823L;
    }
    public static int ERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCY() {
        return (int)6824L;
    }
    public static int ERROR_CANT_CROSS_RM_BOUNDARY() {
        return (int)6825L;
    }
    public static int ERROR_TXF_DIR_NOT_EMPTY() {
        return (int)6826L;
    }
    public static int ERROR_INDOUBT_TRANSACTIONS_EXIST() {
        return (int)6827L;
    }
    public static int ERROR_TM_VOLATILE() {
        return (int)6828L;
    }
    public static int ERROR_ROLLBACK_TIMER_EXPIRED() {
        return (int)6829L;
    }
    public static int ERROR_TXF_ATTRIBUTE_CORRUPT() {
        return (int)6830L;
    }
    public static int ERROR_EFS_NOT_ALLOWED_IN_TRANSACTION() {
        return (int)6831L;
    }
    public static int ERROR_TRANSACTIONAL_OPEN_NOT_ALLOWED() {
        return (int)6832L;
    }
    public static int ERROR_LOG_GROWTH_FAILED() {
        return (int)6833L;
    }
    public static int ERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE() {
        return (int)6834L;
    }
    public static int ERROR_TXF_METADATA_ALREADY_PRESENT() {
        return (int)6835L;
    }
    public static int ERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SET() {
        return (int)6836L;
    }
    public static int ERROR_TRANSACTION_REQUIRED_PROMOTION() {
        return (int)6837L;
    }
    public static int ERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTION() {
        return (int)6838L;
    }
    public static int ERROR_TRANSACTIONS_NOT_FROZEN() {
        return (int)6839L;
    }
    public static int ERROR_TRANSACTION_FREEZE_IN_PROGRESS() {
        return (int)6840L;
    }
    public static int ERROR_NOT_SNAPSHOT_VOLUME() {
        return (int)6841L;
    }
    public static int ERROR_NO_SAVEPOINT_WITH_OPEN_FILES() {
        return (int)6842L;
    }
    public static int ERROR_DATA_LOST_REPAIR() {
        return (int)6843L;
    }
    public static int ERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTION() {
        return (int)6844L;
    }
    public static int ERROR_TM_IDENTITY_MISMATCH() {
        return (int)6845L;
    }
    public static int ERROR_FLOATED_SECTION() {
        return (int)6846L;
    }
    public static int ERROR_CANNOT_ACCEPT_TRANSACTED_WORK() {
        return (int)6847L;
    }
    public static int ERROR_CANNOT_ABORT_TRANSACTIONS() {
        return (int)6848L;
    }
    public static int ERROR_BAD_CLUSTERS() {
        return (int)6849L;
    }
    public static int ERROR_COMPRESSION_NOT_ALLOWED_IN_TRANSACTION() {
        return (int)6850L;
    }
    public static int ERROR_VOLUME_DIRTY() {
        return (int)6851L;
    }
    public static int ERROR_NO_LINK_TRACKING_IN_TRANSACTION() {
        return (int)6852L;
    }
    public static int ERROR_OPERATION_NOT_SUPPORTED_IN_TRANSACTION() {
        return (int)6853L;
    }
    public static int ERROR_EXPIRED_HANDLE() {
        return (int)6854L;
    }
    public static int ERROR_TRANSACTION_NOT_ENLISTED() {
        return (int)6855L;
    }
    public static int ERROR_CTX_WINSTATION_NAME_INVALID() {
        return (int)7001L;
    }
    public static int ERROR_CTX_INVALID_PD() {
        return (int)7002L;
    }
    public static int ERROR_CTX_PD_NOT_FOUND() {
        return (int)7003L;
    }
    public static int ERROR_CTX_WD_NOT_FOUND() {
        return (int)7004L;
    }
    public static int ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY() {
        return (int)7005L;
    }
    public static int ERROR_CTX_SERVICE_NAME_COLLISION() {
        return (int)7006L;
    }
    public static int ERROR_CTX_CLOSE_PENDING() {
        return (int)7007L;
    }
    public static int ERROR_CTX_NO_OUTBUF() {
        return (int)7008L;
    }
    public static int ERROR_CTX_MODEM_INF_NOT_FOUND() {
        return (int)7009L;
    }
    public static int ERROR_CTX_INVALID_MODEMNAME() {
        return (int)7010L;
    }
    public static int ERROR_CTX_MODEM_RESPONSE_ERROR() {
        return (int)7011L;
    }
    public static int ERROR_CTX_MODEM_RESPONSE_TIMEOUT() {
        return (int)7012L;
    }
    public static int ERROR_CTX_MODEM_RESPONSE_NO_CARRIER() {
        return (int)7013L;
    }
    public static int ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE() {
        return (int)7014L;
    }
    public static int ERROR_CTX_MODEM_RESPONSE_BUSY() {
        return (int)7015L;
    }
    public static int ERROR_CTX_MODEM_RESPONSE_VOICE() {
        return (int)7016L;
    }
    public static int ERROR_CTX_TD_ERROR() {
        return (int)7017L;
    }
    public static int ERROR_CTX_WINSTATION_NOT_FOUND() {
        return (int)7022L;
    }
    public static int ERROR_CTX_WINSTATION_ALREADY_EXISTS() {
        return (int)7023L;
    }
    public static int ERROR_CTX_WINSTATION_BUSY() {
        return (int)7024L;
    }
    public static int ERROR_CTX_BAD_VIDEO_MODE() {
        return (int)7025L;
    }
    public static int ERROR_CTX_GRAPHICS_INVALID() {
        return (int)7035L;
    }
    public static int ERROR_CTX_LOGON_DISABLED() {
        return (int)7037L;
    }
    public static int ERROR_CTX_NOT_CONSOLE() {
        return (int)7038L;
    }
    public static int ERROR_CTX_CLIENT_QUERY_TIMEOUT() {
        return (int)7040L;
    }
    public static int ERROR_CTX_CONSOLE_DISCONNECT() {
        return (int)7041L;
    }
    public static int ERROR_CTX_CONSOLE_CONNECT() {
        return (int)7042L;
    }
    public static int ERROR_CTX_SHADOW_DENIED() {
        return (int)7044L;
    }
    public static int ERROR_CTX_WINSTATION_ACCESS_DENIED() {
        return (int)7045L;
    }
    public static int ERROR_CTX_INVALID_WD() {
        return (int)7049L;
    }
    public static int ERROR_CTX_SHADOW_INVALID() {
        return (int)7050L;
    }
    public static int ERROR_CTX_SHADOW_DISABLED() {
        return (int)7051L;
    }
    public static int ERROR_CTX_CLIENT_LICENSE_IN_USE() {
        return (int)7052L;
    }
    public static int ERROR_CTX_CLIENT_LICENSE_NOT_SET() {
        return (int)7053L;
    }
    public static int ERROR_CTX_LICENSE_NOT_AVAILABLE() {
        return (int)7054L;
    }
    public static int ERROR_CTX_LICENSE_CLIENT_INVALID() {
        return (int)7055L;
    }
    public static int ERROR_CTX_LICENSE_EXPIRED() {
        return (int)7056L;
    }
    public static int ERROR_CTX_SHADOW_NOT_RUNNING() {
        return (int)7057L;
    }
    public static int ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE() {
        return (int)7058L;
    }
    public static int ERROR_ACTIVATION_COUNT_EXCEEDED() {
        return (int)7059L;
    }
    public static int ERROR_CTX_WINSTATIONS_DISABLED() {
        return (int)7060L;
    }
    public static int ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED() {
        return (int)7061L;
    }
    public static int ERROR_CTX_SESSION_IN_USE() {
        return (int)7062L;
    }
    public static int ERROR_CTX_NO_FORCE_LOGOFF() {
        return (int)7063L;
    }
    public static int ERROR_CTX_ACCOUNT_RESTRICTION() {
        return (int)7064L;
    }
    public static int ERROR_RDP_PROTOCOL_ERROR() {
        return (int)7065L;
    }
    public static int ERROR_CTX_CDM_CONNECT() {
        return (int)7066L;
    }
    public static int ERROR_CTX_CDM_DISCONNECT() {
        return (int)7067L;
    }
    public static int ERROR_CTX_SECURITY_LAYER_ERROR() {
        return (int)7068L;
    }
    public static int ERROR_TS_INCOMPATIBLE_SESSIONS() {
        return (int)7069L;
    }
    public static int ERROR_TS_VIDEO_SUBSYSTEM_ERROR() {
        return (int)7070L;
    }
    public static int FRS_ERR_INVALID_API_SEQUENCE() {
        return (int)8001L;
    }
    public static int FRS_ERR_STARTING_SERVICE() {
        return (int)8002L;
    }
    public static int FRS_ERR_STOPPING_SERVICE() {
        return (int)8003L;
    }
    public static int FRS_ERR_INTERNAL_API() {
        return (int)8004L;
    }
    public static int FRS_ERR_INTERNAL() {
        return (int)8005L;
    }
    public static int FRS_ERR_SERVICE_COMM() {
        return (int)8006L;
    }
    public static int FRS_ERR_INSUFFICIENT_PRIV() {
        return (int)8007L;
    }
    public static int FRS_ERR_AUTHENTICATION() {
        return (int)8008L;
    }
    public static int FRS_ERR_PARENT_INSUFFICIENT_PRIV() {
        return (int)8009L;
    }
    public static int FRS_ERR_PARENT_AUTHENTICATION() {
        return (int)8010L;
    }
    public static int FRS_ERR_CHILD_TO_PARENT_COMM() {
        return (int)8011L;
    }
    public static int FRS_ERR_PARENT_TO_CHILD_COMM() {
        return (int)8012L;
    }
    public static int FRS_ERR_SYSVOL_POPULATE() {
        return (int)8013L;
    }
    public static int FRS_ERR_SYSVOL_POPULATE_TIMEOUT() {
        return (int)8014L;
    }
    public static int FRS_ERR_SYSVOL_IS_BUSY() {
        return (int)8015L;
    }
    public static int FRS_ERR_SYSVOL_DEMOTE() {
        return (int)8016L;
    }
    public static int FRS_ERR_INVALID_SERVICE_PARAMETER() {
        return (int)8017L;
    }
    public static int DS_S_SUCCESS() {
        return (int)0L;
    }
    public static int ERROR_DS_NOT_INSTALLED() {
        return (int)8200L;
    }
    public static int ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY() {
        return (int)8201L;
    }
    public static int ERROR_DS_NO_ATTRIBUTE_OR_VALUE() {
        return (int)8202L;
    }
    public static int ERROR_DS_INVALID_ATTRIBUTE_SYNTAX() {
        return (int)8203L;
    }
    public static int ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED() {
        return (int)8204L;
    }
    public static int ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS() {
        return (int)8205L;
    }
    public static int ERROR_DS_BUSY() {
        return (int)8206L;
    }
    public static int ERROR_DS_UNAVAILABLE() {
        return (int)8207L;
    }
    public static int ERROR_DS_NO_RIDS_ALLOCATED() {
        return (int)8208L;
    }
    public static int ERROR_DS_NO_MORE_RIDS() {
        return (int)8209L;
    }
    public static int ERROR_DS_INCORRECT_ROLE_OWNER() {
        return (int)8210L;
    }
    public static int ERROR_DS_RIDMGR_INIT_ERROR() {
        return (int)8211L;
    }
    public static int ERROR_DS_OBJ_CLASS_VIOLATION() {
        return (int)8212L;
    }
    public static int ERROR_DS_CANT_ON_NON_LEAF() {
        return (int)8213L;
    }
    public static int ERROR_DS_CANT_ON_RDN() {
        return (int)8214L;
    }
    public static int ERROR_DS_CANT_MOD_OBJ_CLASS() {
        return (int)8215L;
    }
    public static int ERROR_DS_CROSS_DOM_MOVE_ERROR() {
        return (int)8216L;
    }
    public static int ERROR_DS_GC_NOT_AVAILABLE() {
        return (int)8217L;
    }
    public static int ERROR_SHARED_POLICY() {
        return (int)8218L;
    }
    public static int ERROR_POLICY_OBJECT_NOT_FOUND() {
        return (int)8219L;
    }
    public static int ERROR_POLICY_ONLY_IN_DS() {
        return (int)8220L;
    }
    public static int ERROR_PROMOTION_ACTIVE() {
        return (int)8221L;
    }
    public static int ERROR_NO_PROMOTION_ACTIVE() {
        return (int)8222L;
    }
    public static int ERROR_DS_OPERATIONS_ERROR() {
        return (int)8224L;
    }
    public static int ERROR_DS_PROTOCOL_ERROR() {
        return (int)8225L;
    }
    public static int ERROR_DS_TIMELIMIT_EXCEEDED() {
        return (int)8226L;
    }
    public static int ERROR_DS_SIZELIMIT_EXCEEDED() {
        return (int)8227L;
    }
    public static int ERROR_DS_ADMIN_LIMIT_EXCEEDED() {
        return (int)8228L;
    }
    public static int ERROR_DS_COMPARE_FALSE() {
        return (int)8229L;
    }
    public static int ERROR_DS_COMPARE_TRUE() {
        return (int)8230L;
    }
    public static int ERROR_DS_AUTH_METHOD_NOT_SUPPORTED() {
        return (int)8231L;
    }
    public static int ERROR_DS_STRONG_AUTH_REQUIRED() {
        return (int)8232L;
    }
    public static int ERROR_DS_INAPPROPRIATE_AUTH() {
        return (int)8233L;
    }
    public static int ERROR_DS_AUTH_UNKNOWN() {
        return (int)8234L;
    }
    public static int ERROR_DS_REFERRAL() {
        return (int)8235L;
    }
    public static int ERROR_DS_UNAVAILABLE_CRIT_EXTENSION() {
        return (int)8236L;
    }
    public static int ERROR_DS_CONFIDENTIALITY_REQUIRED() {
        return (int)8237L;
    }
    public static int ERROR_DS_INAPPROPRIATE_MATCHING() {
        return (int)8238L;
    }
    public static int ERROR_DS_CONSTRAINT_VIOLATION() {
        return (int)8239L;
    }
    public static int ERROR_DS_NO_SUCH_OBJECT() {
        return (int)8240L;
    }
    public static int ERROR_DS_ALIAS_PROBLEM() {
        return (int)8241L;
    }
    public static int ERROR_DS_INVALID_DN_SYNTAX() {
        return (int)8242L;
    }
    public static int ERROR_DS_IS_LEAF() {
        return (int)8243L;
    }
    public static int ERROR_DS_ALIAS_DEREF_PROBLEM() {
        return (int)8244L;
    }
    public static int ERROR_DS_UNWILLING_TO_PERFORM() {
        return (int)8245L;
    }
    public static int ERROR_DS_LOOP_DETECT() {
        return (int)8246L;
    }
    public static int ERROR_DS_NAMING_VIOLATION() {
        return (int)8247L;
    }
    public static int ERROR_DS_OBJECT_RESULTS_TOO_LARGE() {
        return (int)8248L;
    }
    public static int ERROR_DS_AFFECTS_MULTIPLE_DSAS() {
        return (int)8249L;
    }
    public static int ERROR_DS_SERVER_DOWN() {
        return (int)8250L;
    }
    public static int ERROR_DS_LOCAL_ERROR() {
        return (int)8251L;
    }
    public static int ERROR_DS_ENCODING_ERROR() {
        return (int)8252L;
    }
    public static int ERROR_DS_DECODING_ERROR() {
        return (int)8253L;
    }
    public static int ERROR_DS_FILTER_UNKNOWN() {
        return (int)8254L;
    }
    public static int ERROR_DS_PARAM_ERROR() {
        return (int)8255L;
    }
    public static int ERROR_DS_NOT_SUPPORTED() {
        return (int)8256L;
    }
    public static int ERROR_DS_NO_RESULTS_RETURNED() {
        return (int)8257L;
    }
    public static int ERROR_DS_CONTROL_NOT_FOUND() {
        return (int)8258L;
    }
    public static int ERROR_DS_CLIENT_LOOP() {
        return (int)8259L;
    }
    public static int ERROR_DS_REFERRAL_LIMIT_EXCEEDED() {
        return (int)8260L;
    }
    public static int ERROR_DS_SORT_CONTROL_MISSING() {
        return (int)8261L;
    }
    public static int ERROR_DS_OFFSET_RANGE_ERROR() {
        return (int)8262L;
    }
    public static int ERROR_DS_RIDMGR_DISABLED() {
        return (int)8263L;
    }
    public static int ERROR_DS_ROOT_MUST_BE_NC() {
        return (int)8301L;
    }
    public static int ERROR_DS_ADD_REPLICA_INHIBITED() {
        return (int)8302L;
    }
    public static int ERROR_DS_ATT_NOT_DEF_IN_SCHEMA() {
        return (int)8303L;
    }
    public static int ERROR_DS_MAX_OBJ_SIZE_EXCEEDED() {
        return (int)8304L;
    }
    public static int ERROR_DS_OBJ_STRING_NAME_EXISTS() {
        return (int)8305L;
    }
    public static int ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA() {
        return (int)8306L;
    }
    public static int ERROR_DS_RDN_DOESNT_MATCH_SCHEMA() {
        return (int)8307L;
    }
    public static int ERROR_DS_NO_REQUESTED_ATTS_FOUND() {
        return (int)8308L;
    }
    public static int ERROR_DS_USER_BUFFER_TO_SMALL() {
        return (int)8309L;
    }
    public static int ERROR_DS_ATT_IS_NOT_ON_OBJ() {
        return (int)8310L;
    }
    public static int ERROR_DS_ILLEGAL_MOD_OPERATION() {
        return (int)8311L;
    }
    public static int ERROR_DS_OBJ_TOO_LARGE() {
        return (int)8312L;
    }
    public static int ERROR_DS_BAD_INSTANCE_TYPE() {
        return (int)8313L;
    }
    public static int ERROR_DS_MASTERDSA_REQUIRED() {
        return (int)8314L;
    }
    public static int ERROR_DS_OBJECT_CLASS_REQUIRED() {
        return (int)8315L;
    }
    public static int ERROR_DS_MISSING_REQUIRED_ATT() {
        return (int)8316L;
    }
    public static int ERROR_DS_ATT_NOT_DEF_FOR_CLASS() {
        return (int)8317L;
    }
    public static int ERROR_DS_ATT_ALREADY_EXISTS() {
        return (int)8318L;
    }
    public static int ERROR_DS_CANT_ADD_ATT_VALUES() {
        return (int)8320L;
    }
    public static int ERROR_DS_SINGLE_VALUE_CONSTRAINT() {
        return (int)8321L;
    }
    public static int ERROR_DS_RANGE_CONSTRAINT() {
        return (int)8322L;
    }
    public static int ERROR_DS_ATT_VAL_ALREADY_EXISTS() {
        return (int)8323L;
    }
    public static int ERROR_DS_CANT_REM_MISSING_ATT() {
        return (int)8324L;
    }
    public static int ERROR_DS_CANT_REM_MISSING_ATT_VAL() {
        return (int)8325L;
    }
    public static int ERROR_DS_ROOT_CANT_BE_SUBREF() {
        return (int)8326L;
    }
    public static int ERROR_DS_NO_CHAINING() {
        return (int)8327L;
    }
    public static int ERROR_DS_NO_CHAINED_EVAL() {
        return (int)8328L;
    }
    public static int ERROR_DS_NO_PARENT_OBJECT() {
        return (int)8329L;
    }
    public static int ERROR_DS_PARENT_IS_AN_ALIAS() {
        return (int)8330L;
    }
    public static int ERROR_DS_CANT_MIX_MASTER_AND_REPS() {
        return (int)8331L;
    }
    public static int ERROR_DS_CHILDREN_EXIST() {
        return (int)8332L;
    }
    public static int ERROR_DS_OBJ_NOT_FOUND() {
        return (int)8333L;
    }
    public static int ERROR_DS_ALIASED_OBJ_MISSING() {
        return (int)8334L;
    }
    public static int ERROR_DS_BAD_NAME_SYNTAX() {
        return (int)8335L;
    }
    public static int ERROR_DS_ALIAS_POINTS_TO_ALIAS() {
        return (int)8336L;
    }
    public static int ERROR_DS_CANT_DEREF_ALIAS() {
        return (int)8337L;
    }
    public static int ERROR_DS_OUT_OF_SCOPE() {
        return (int)8338L;
    }
    public static int ERROR_DS_OBJECT_BEING_REMOVED() {
        return (int)8339L;
    }
    public static int ERROR_DS_CANT_DELETE_DSA_OBJ() {
        return (int)8340L;
    }
    public static int ERROR_DS_GENERIC_ERROR() {
        return (int)8341L;
    }
    public static int ERROR_DS_DSA_MUST_BE_INT_MASTER() {
        return (int)8342L;
    }
    public static int ERROR_DS_CLASS_NOT_DSA() {
        return (int)8343L;
    }
    public static int ERROR_DS_INSUFF_ACCESS_RIGHTS() {
        return (int)8344L;
    }
    public static int ERROR_DS_ILLEGAL_SUPERIOR() {
        return (int)8345L;
    }
    public static int ERROR_DS_ATTRIBUTE_OWNED_BY_SAM() {
        return (int)8346L;
    }
}



// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$23 {

    static final  GroupLayout GUID_ALLOW_DISPLAY_REQUIRED$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_ALLOW_DISPLAY_REQUIRED$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_ALLOW_DISPLAY_REQUIRED", constants$23.GUID_ALLOW_DISPLAY_REQUIRED$LAYOUT);
    static final  GroupLayout GUID_VIDEO_CONSOLE_LOCK_TIMEOUT$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_VIDEO_CONSOLE_LOCK_TIMEOUT$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_VIDEO_CONSOLE_LOCK_TIMEOUT", constants$23.GUID_VIDEO_CONSOLE_LOCK_TIMEOUT$LAYOUT);
    static final  GroupLayout GUID_ADVANCED_COLOR_QUALITY_BIAS$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_ADVANCED_COLOR_QUALITY_BIAS$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_ADVANCED_COLOR_QUALITY_BIAS", constants$23.GUID_ADVANCED_COLOR_QUALITY_BIAS$LAYOUT);
    static final  GroupLayout GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP", constants$23.GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP$LAYOUT);
    static final  GroupLayout GUID_NON_ADAPTIVE_INPUT_TIMEOUT$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_NON_ADAPTIVE_INPUT_TIMEOUT$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_NON_ADAPTIVE_INPUT_TIMEOUT", constants$23.GUID_NON_ADAPTIVE_INPUT_TIMEOUT$LAYOUT);
    static final  GroupLayout GUID_ADAPTIVE_INPUT_CONTROLLER_STATE$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_ADAPTIVE_INPUT_CONTROLLER_STATE$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_ADAPTIVE_INPUT_CONTROLLER_STATE", constants$23.GUID_ADAPTIVE_INPUT_CONTROLLER_STATE$LAYOUT);
}



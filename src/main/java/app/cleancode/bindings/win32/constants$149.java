// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$149 {

    static final FunctionDescriptor FreeLibraryAndExitThread$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle FreeLibraryAndExitThread$MH = RuntimeHelper.downcallHandle(
        "FreeLibraryAndExitThread",
        constants$149.FreeLibraryAndExitThread$FUNC
    );
    static final FunctionDescriptor FreeResource$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle FreeResource$MH = RuntimeHelper.downcallHandle(
        "FreeResource",
        constants$149.FreeResource$FUNC
    );
    static final FunctionDescriptor GetModuleFileNameA$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle GetModuleFileNameA$MH = RuntimeHelper.downcallHandle(
        "GetModuleFileNameA",
        constants$149.GetModuleFileNameA$FUNC
    );
    static final FunctionDescriptor GetModuleFileNameW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle GetModuleFileNameW$MH = RuntimeHelper.downcallHandle(
        "GetModuleFileNameW",
        constants$149.GetModuleFileNameW$FUNC
    );
    static final FunctionDescriptor GetModuleHandleA$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetModuleHandleA$MH = RuntimeHelper.downcallHandle(
        "GetModuleHandleA",
        constants$149.GetModuleHandleA$FUNC
    );
    static final FunctionDescriptor GetModuleHandleW$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetModuleHandleW$MH = RuntimeHelper.downcallHandle(
        "GetModuleHandleW",
        constants$149.GetModuleHandleW$FUNC
    );
}



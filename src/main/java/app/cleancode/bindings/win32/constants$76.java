// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$76 {

    static final FunctionDescriptor GlobalMemoryStatus$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GlobalMemoryStatus$MH = RuntimeHelper.downcallHandle(
        "GlobalMemoryStatus",
        constants$76.GlobalMemoryStatus$FUNC
    );
    static final FunctionDescriptor LocalAlloc$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle LocalAlloc$MH = RuntimeHelper.downcallHandle(
        "LocalAlloc",
        constants$76.LocalAlloc$FUNC
    );
    static final FunctionDescriptor LocalReAlloc$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle LocalReAlloc$MH = RuntimeHelper.downcallHandle(
        "LocalReAlloc",
        constants$76.LocalReAlloc$FUNC
    );
    static final FunctionDescriptor LocalLock$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LocalLock$MH = RuntimeHelper.downcallHandle(
        "LocalLock",
        constants$76.LocalLock$FUNC
    );
    static final FunctionDescriptor LocalHandle$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LocalHandle$MH = RuntimeHelper.downcallHandle(
        "LocalHandle",
        constants$76.LocalHandle$FUNC
    );
    static final FunctionDescriptor LocalUnlock$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LocalUnlock$MH = RuntimeHelper.downcallHandle(
        "LocalUnlock",
        constants$76.LocalUnlock$FUNC
    );
}



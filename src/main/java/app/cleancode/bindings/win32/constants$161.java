// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$161 {

    static final FunctionDescriptor DestroyPrivateObjectSecurity$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle DestroyPrivateObjectSecurity$MH = RuntimeHelper.downcallHandle(
        "DestroyPrivateObjectSecurity",
        constants$161.DestroyPrivateObjectSecurity$FUNC
    );
    static final FunctionDescriptor DuplicateToken$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle DuplicateToken$MH = RuntimeHelper.downcallHandle(
        "DuplicateToken",
        constants$161.DuplicateToken$FUNC
    );
    static final FunctionDescriptor DuplicateTokenEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle DuplicateTokenEx$MH = RuntimeHelper.downcallHandle(
        "DuplicateTokenEx",
        constants$161.DuplicateTokenEx$FUNC
    );
    static final FunctionDescriptor EqualPrefixSid$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle EqualPrefixSid$MH = RuntimeHelper.downcallHandle(
        "EqualPrefixSid",
        constants$161.EqualPrefixSid$FUNC
    );
    static final FunctionDescriptor EqualSid$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle EqualSid$MH = RuntimeHelper.downcallHandle(
        "EqualSid",
        constants$161.EqualSid$FUNC
    );
    static final FunctionDescriptor FindFirstFreeAce$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle FindFirstFreeAce$MH = RuntimeHelper.downcallHandle(
        "FindFirstFreeAce",
        constants$161.FindFirstFreeAce$FUNC
    );
}



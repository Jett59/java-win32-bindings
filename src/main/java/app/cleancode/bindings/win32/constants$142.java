// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$142 {

    static final FunctionDescriptor SetThreadpoolCallbackRunsLong$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SetThreadpoolCallbackRunsLong$MH = RuntimeHelper.downcallHandle(
        "SetThreadpoolCallbackRunsLong",
        constants$142.SetThreadpoolCallbackRunsLong$FUNC
    );
    static final FunctionDescriptor SetThreadpoolCallbackLibrary$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SetThreadpoolCallbackLibrary$MH = RuntimeHelper.downcallHandle(
        "SetThreadpoolCallbackLibrary",
        constants$142.SetThreadpoolCallbackLibrary$FUNC
    );
    static final FunctionDescriptor SetThreadpoolCallbackPriority$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle SetThreadpoolCallbackPriority$MH = RuntimeHelper.downcallHandle(
        "SetThreadpoolCallbackPriority",
        constants$142.SetThreadpoolCallbackPriority$FUNC
    );
    static final FunctionDescriptor DestroyThreadpoolEnvironment$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle DestroyThreadpoolEnvironment$MH = RuntimeHelper.downcallHandle(
        "DestroyThreadpoolEnvironment",
        constants$142.DestroyThreadpoolEnvironment$FUNC
    );
    static final FunctionDescriptor SetThreadpoolCallbackPersistent$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SetThreadpoolCallbackPersistent$MH = RuntimeHelper.downcallHandle(
        "SetThreadpoolCallbackPersistent",
        constants$142.SetThreadpoolCallbackPersistent$FUNC
    );
    static final FunctionDescriptor CreatePrivateNamespaceA$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CreatePrivateNamespaceA$MH = RuntimeHelper.downcallHandle(
        "CreatePrivateNamespaceA",
        constants$142.CreatePrivateNamespaceA$FUNC
    );
}



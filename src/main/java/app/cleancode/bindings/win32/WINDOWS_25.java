// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class WINDOWS_25 extends WINDOWS_24 {

    public static int MF_RIGHTJUSTIFY() {
        return (int)16384L;
    }
    public static int MF_MOUSESELECT() {
        return (int)32768L;
    }
    public static int MF_END() {
        return (int)128L;
    }
    public static int MFT_STRING() {
        return (int)0L;
    }
    public static int MFT_BITMAP() {
        return (int)4L;
    }
    public static int MFT_MENUBARBREAK() {
        return (int)32L;
    }
    public static int MFT_MENUBREAK() {
        return (int)64L;
    }
    public static int MFT_OWNERDRAW() {
        return (int)256L;
    }
    public static int MFT_RADIOCHECK() {
        return (int)512L;
    }
    public static int MFT_SEPARATOR() {
        return (int)2048L;
    }
    public static int MFT_RIGHTORDER() {
        return (int)8192L;
    }
    public static int MFT_RIGHTJUSTIFY() {
        return (int)16384L;
    }
    public static int MFS_GRAYED() {
        return (int)3L;
    }
    public static int MFS_DISABLED() {
        return (int)3L;
    }
    public static int MFS_CHECKED() {
        return (int)8L;
    }
    public static int MFS_HILITE() {
        return (int)128L;
    }
    public static int MFS_ENABLED() {
        return (int)0L;
    }
    public static int MFS_UNCHECKED() {
        return (int)0L;
    }
    public static int MFS_UNHILITE() {
        return (int)0L;
    }
    public static int MFS_DEFAULT() {
        return (int)4096L;
    }
    public static int SC_ICON() {
        return (int)61472L;
    }
    public static int SC_ZOOM() {
        return (int)61488L;
    }
    public static MemoryAddress IDC_ARROW() {
        return constants$568.IDC_ARROW$ADDR;
    }
    public static MemoryAddress IDC_IBEAM() {
        return constants$568.IDC_IBEAM$ADDR;
    }
    public static MemoryAddress IDC_WAIT() {
        return constants$568.IDC_WAIT$ADDR;
    }
    public static MemoryAddress IDC_CROSS() {
        return constants$568.IDC_CROSS$ADDR;
    }
    public static MemoryAddress IDC_UPARROW() {
        return constants$568.IDC_UPARROW$ADDR;
    }
    public static MemoryAddress IDC_SIZE() {
        return constants$569.IDC_SIZE$ADDR;
    }
    public static MemoryAddress IDC_ICON() {
        return constants$569.IDC_ICON$ADDR;
    }
    public static MemoryAddress IDC_SIZENWSE() {
        return constants$569.IDC_SIZENWSE$ADDR;
    }
    public static MemoryAddress IDC_SIZENESW() {
        return constants$569.IDC_SIZENESW$ADDR;
    }
    public static MemoryAddress IDC_SIZEWE() {
        return constants$569.IDC_SIZEWE$ADDR;
    }
    public static MemoryAddress IDC_SIZENS() {
        return constants$569.IDC_SIZENS$ADDR;
    }
    public static MemoryAddress IDC_SIZEALL() {
        return constants$570.IDC_SIZEALL$ADDR;
    }
    public static MemoryAddress IDC_NO() {
        return constants$570.IDC_NO$ADDR;
    }
    public static MemoryAddress IDC_HAND() {
        return constants$570.IDC_HAND$ADDR;
    }
    public static MemoryAddress IDC_APPSTARTING() {
        return constants$570.IDC_APPSTARTING$ADDR;
    }
    public static MemoryAddress IDC_HELP() {
        return constants$570.IDC_HELP$ADDR;
    }
    public static MemoryAddress IDC_PIN() {
        return constants$570.IDC_PIN$ADDR;
    }
    public static MemoryAddress IDC_PERSON() {
        return constants$571.IDC_PERSON$ADDR;
    }
    public static MemoryAddress IDI_APPLICATION() {
        return constants$571.IDI_APPLICATION$ADDR;
    }
    public static MemoryAddress IDI_HAND() {
        return constants$571.IDI_HAND$ADDR;
    }
    public static MemoryAddress IDI_QUESTION() {
        return constants$571.IDI_QUESTION$ADDR;
    }
    public static MemoryAddress IDI_EXCLAMATION() {
        return constants$571.IDI_EXCLAMATION$ADDR;
    }
    public static MemoryAddress IDI_ASTERISK() {
        return constants$571.IDI_ASTERISK$ADDR;
    }
    public static MemoryAddress IDI_WINLOGO() {
        return constants$572.IDI_WINLOGO$ADDR;
    }
    public static MemoryAddress IDI_SHIELD() {
        return constants$572.IDI_SHIELD$ADDR;
    }
    public static MemoryAddress IDI_WARNING() {
        return constants$572.IDI_WARNING$ADDR;
    }
    public static MemoryAddress IDI_ERROR() {
        return constants$572.IDI_ERROR$ADDR;
    }
    public static MemoryAddress IDI_INFORMATION() {
        return constants$572.IDI_INFORMATION$ADDR;
    }
    public static int ES_LEFT() {
        return (int)0L;
    }
    public static int ES_CENTER() {
        return (int)1L;
    }
    public static int ES_RIGHT() {
        return (int)2L;
    }
    public static int ES_MULTILINE() {
        return (int)4L;
    }
    public static int ES_UPPERCASE() {
        return (int)8L;
    }
    public static int ES_LOWERCASE() {
        return (int)16L;
    }
    public static int ES_PASSWORD() {
        return (int)32L;
    }
    public static int ES_AUTOVSCROLL() {
        return (int)64L;
    }
    public static int ES_AUTOHSCROLL() {
        return (int)128L;
    }
    public static int ES_NOHIDESEL() {
        return (int)256L;
    }
    public static int ES_OEMCONVERT() {
        return (int)1024L;
    }
    public static int ES_READONLY() {
        return (int)2048L;
    }
    public static int ES_WANTRETURN() {
        return (int)4096L;
    }
    public static int ES_NUMBER() {
        return (int)8192L;
    }
    public static int EM_SETLIMITTEXT() {
        return (int)197L;
    }
    public static int BS_PUSHBUTTON() {
        return (int)0L;
    }
    public static int BS_DEFPUSHBUTTON() {
        return (int)1L;
    }
    public static int BS_CHECKBOX() {
        return (int)2L;
    }
    public static int BS_AUTOCHECKBOX() {
        return (int)3L;
    }
    public static int BS_RADIOBUTTON() {
        return (int)4L;
    }
    public static int BS_3STATE() {
        return (int)5L;
    }
    public static int BS_AUTO3STATE() {
        return (int)6L;
    }
    public static int BS_GROUPBOX() {
        return (int)7L;
    }
    public static int BS_USERBUTTON() {
        return (int)8L;
    }
    public static int BS_AUTORADIOBUTTON() {
        return (int)9L;
    }
    public static int BS_PUSHBOX() {
        return (int)10L;
    }
    public static int BS_OWNERDRAW() {
        return (int)11L;
    }
    public static int BS_TYPEMASK() {
        return (int)15L;
    }
    public static int BS_LEFTTEXT() {
        return (int)32L;
    }
    public static int BS_TEXT() {
        return (int)0L;
    }
    public static int BS_ICON() {
        return (int)64L;
    }
    public static int BS_BITMAP() {
        return (int)128L;
    }
    public static int BS_LEFT() {
        return (int)256L;
    }
    public static int BS_RIGHT() {
        return (int)512L;
    }
    public static int BS_CENTER() {
        return (int)768L;
    }
    public static int BS_TOP() {
        return (int)1024L;
    }
    public static int BS_BOTTOM() {
        return (int)2048L;
    }
    public static int BS_VCENTER() {
        return (int)3072L;
    }
    public static int BS_PUSHLIKE() {
        return (int)4096L;
    }
    public static int BS_MULTILINE() {
        return (int)8192L;
    }
    public static int BS_NOTIFY() {
        return (int)16384L;
    }
    public static int BS_FLAT() {
        return (int)32768L;
    }
    public static int BS_RIGHTBUTTON() {
        return (int)32L;
    }
    public static int BN_PUSHED() {
        return (int)2L;
    }
    public static int BN_UNPUSHED() {
        return (int)3L;
    }
    public static int BN_DBLCLK() {
        return (int)5L;
    }
    public static int SS_LEFT() {
        return (int)0L;
    }
    public static int SS_CENTER() {
        return (int)1L;
    }
    public static int SS_RIGHT() {
        return (int)2L;
    }
    public static int SS_ICON() {
        return (int)3L;
    }
    public static int SS_BLACKRECT() {
        return (int)4L;
    }
    public static int SS_GRAYRECT() {
        return (int)5L;
    }
    public static int SS_WHITERECT() {
        return (int)6L;
    }
    public static int SS_BLACKFRAME() {
        return (int)7L;
    }
    public static int SS_GRAYFRAME() {
        return (int)8L;
    }
    public static int SS_WHITEFRAME() {
        return (int)9L;
    }
    public static int SS_USERITEM() {
        return (int)10L;
    }
    public static int SS_SIMPLE() {
        return (int)11L;
    }
    public static int SS_LEFTNOWORDWRAP() {
        return (int)12L;
    }
    public static int SS_OWNERDRAW() {
        return (int)13L;
    }
    public static int SS_BITMAP() {
        return (int)14L;
    }
    public static int SS_ENHMETAFILE() {
        return (int)15L;
    }
    public static int SS_ETCHEDHORZ() {
        return (int)16L;
    }
    public static int SS_ETCHEDVERT() {
        return (int)17L;
    }
    public static int SS_ETCHEDFRAME() {
        return (int)18L;
    }
    public static int SS_TYPEMASK() {
        return (int)31L;
    }
    public static int SS_REALSIZECONTROL() {
        return (int)64L;
    }
    public static int SS_NOPREFIX() {
        return (int)128L;
    }
    public static int SS_NOTIFY() {
        return (int)256L;
    }
    public static int SS_CENTERIMAGE() {
        return (int)512L;
    }
    public static int SS_RIGHTJUST() {
        return (int)1024L;
    }
    public static int SS_REALSIZEIMAGE() {
        return (int)2048L;
    }
    public static int SS_SUNKEN() {
        return (int)4096L;
    }
    public static int SS_EDITCONTROL() {
        return (int)8192L;
    }
    public static int SS_ENDELLIPSIS() {
        return (int)16384L;
    }
    public static int SS_PATHELLIPSIS() {
        return (int)32768L;
    }
    public static int SS_WORDELLIPSIS() {
        return (int)49152L;
    }
    public static int SS_ELLIPSISMASK() {
        return (int)49152L;
    }
    public static MemoryAddress WC_DIALOG() {
        return constants$572.WC_DIALOG$ADDR;
    }
    public static long DWLP_DLGPROC() {
        return 8L;
    }
    public static long DWLP_USER() {
        return 16L;
    }
    public static int DS_ABSALIGN() {
        return (int)1L;
    }
    public static int DS_SYSMODAL() {
        return (int)2L;
    }
    public static int DS_LOCALEDIT() {
        return (int)32L;
    }
    public static int DS_SETFONT() {
        return (int)64L;
    }
    public static int DS_MODALFRAME() {
        return (int)128L;
    }
    public static int DS_NOIDLEMSG() {
        return (int)256L;
    }
    public static int DS_SETFOREGROUND() {
        return (int)512L;
    }
    public static int DS_3DLOOK() {
        return (int)4L;
    }
    public static int DS_FIXEDSYS() {
        return (int)8L;
    }
    public static int DS_NOFAILCREATE() {
        return (int)16L;
    }
    public static int DS_CONTROL() {
        return (int)1024L;
    }
    public static int DS_CENTER() {
        return (int)2048L;
    }
    public static int DS_CENTERMOUSE() {
        return (int)4096L;
    }
    public static int DS_CONTEXTHELP() {
        return (int)8192L;
    }
    public static int DS_SHELLFONT() {
        return (int)72L;
    }
    public static int DM_GETDEFID() {
        return (int)1024L;
    }
    public static int DM_SETDEFID() {
        return (int)1025L;
    }
    public static int DM_REPOSITION() {
        return (int)1026L;
    }
    public static int LB_CTLCODE() {
        return (int)0L;
    }
    public static int LB_ERR() {
        return (int)-1L;
    }
    public static int LB_ERRSPACE() {
        return (int)-2L;
    }
    public static int LBN_ERRSPACE() {
        return (int)-2L;
    }
    public static int LBS_NOTIFY() {
        return (int)1L;
    }
    public static int LBS_SORT() {
        return (int)2L;
    }
    public static int LBS_NOREDRAW() {
        return (int)4L;
    }
    public static int LBS_MULTIPLESEL() {
        return (int)8L;
    }
    public static int LBS_OWNERDRAWFIXED() {
        return (int)16L;
    }
    public static int LBS_OWNERDRAWVARIABLE() {
        return (int)32L;
    }
    public static int LBS_HASSTRINGS() {
        return (int)64L;
    }
    public static int LBS_USETABSTOPS() {
        return (int)128L;
    }
    public static int LBS_NOINTEGRALHEIGHT() {
        return (int)256L;
    }
    public static int LBS_MULTICOLUMN() {
        return (int)512L;
    }
    public static int LBS_WANTKEYBOARDINPUT() {
        return (int)1024L;
    }
    public static int LBS_EXTENDEDSEL() {
        return (int)2048L;
    }
    public static int LBS_DISABLENOSCROLL() {
        return (int)4096L;
    }
    public static int LBS_NODATA() {
        return (int)8192L;
    }
    public static int LBS_NOSEL() {
        return (int)16384L;
    }
    public static int LBS_COMBOBOX() {
        return (int)32768L;
    }
    public static int LBS_STANDARD() {
        return (int)10485763L;
    }
    public static int CB_ERR() {
        return (int)-1L;
    }
    public static int CB_ERRSPACE() {
        return (int)-2L;
    }
    public static int CBN_ERRSPACE() {
        return (int)-1L;
    }
    public static int CBS_SIMPLE() {
        return (int)1L;
    }
    public static int CBS_DROPDOWN() {
        return (int)2L;
    }
    public static int CBS_DROPDOWNLIST() {
        return (int)3L;
    }
    public static int CBS_OWNERDRAWFIXED() {
        return (int)16L;
    }
    public static int CBS_OWNERDRAWVARIABLE() {
        return (int)32L;
    }
    public static int CBS_AUTOHSCROLL() {
        return (int)64L;
    }
    public static int CBS_OEMCONVERT() {
        return (int)128L;
    }
    public static int CBS_SORT() {
        return (int)256L;
    }
    public static int CBS_HASSTRINGS() {
        return (int)512L;
    }
    public static int CBS_NOINTEGRALHEIGHT() {
        return (int)1024L;
    }
    public static int CBS_DISABLENOSCROLL() {
        return (int)2048L;
    }
    public static int CBS_UPPERCASE() {
        return (int)8192L;
    }
    public static int CBS_LOWERCASE() {
        return (int)16384L;
    }
    public static int SBS_HORZ() {
        return (int)0L;
    }
    public static int SBS_VERT() {
        return (int)1L;
    }
    public static int SBS_TOPALIGN() {
        return (int)2L;
    }
    public static int SBS_LEFTALIGN() {
        return (int)2L;
    }
    public static int SBS_BOTTOMALIGN() {
        return (int)4L;
    }
    public static int SBS_RIGHTALIGN() {
        return (int)4L;
    }
    public static int SBS_SIZEBOXTOPLEFTALIGN() {
        return (int)2L;
    }
    public static int SBS_SIZEBOXBOTTOMRIGHTALIGN() {
        return (int)4L;
    }
    public static int SBS_SIZEBOX() {
        return (int)8L;
    }
    public static int SBS_SIZEGRIP() {
        return (int)16L;
    }
    public static int SIF_ALL() {
        return (int)23L;
    }
    public static int HELP_CONTEXT() {
        return (int)1L;
    }
    public static int HELP_QUIT() {
        return (int)2L;
    }
    public static int HELP_INDEX() {
        return (int)3L;
    }
    public static int HELP_CONTENTS() {
        return (int)3L;
    }
    public static int HELP_HELPONHELP() {
        return (int)4L;
    }
    public static int HELP_SETINDEX() {
        return (int)5L;
    }
    public static int HELP_SETCONTENTS() {
        return (int)5L;
    }
    public static int HELP_CONTEXTPOPUP() {
        return (int)8L;
    }
    public static int HELP_FORCEFILE() {
        return (int)9L;
    }
    public static int HELP_KEY() {
        return (int)257L;
    }
    public static int HELP_COMMAND() {
        return (int)258L;
    }
    public static int HELP_PARTIALKEY() {
        return (int)261L;
    }
    public static int HELP_MULTIKEY() {
        return (int)513L;
    }
    public static int HELP_SETWINPOS() {
        return (int)515L;
    }
    public static MemoryAddress GR_GLOBAL() {
        return constants$573.GR_GLOBAL$ADDR;
    }
    public static int SPI_SCREENSAVERRUNNING() {
        return (int)97L;
    }
    public static float TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_DELTA() {
        return 0.0010000000474974513f;
    }
    public static float TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_LAMBDA_MIN() {
        return 0.8999999761581421f;
    }
    public static float TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_LAMBDA_MAX() {
        return 0.9990000128746033f;
    }
    public static float TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_LAMBDA_LEARNING_RATE() {
        return 0.0010000000474974513f;
    }
    public static float TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_EXPO_SMOOTH_ALPHA() {
        return 0.9900000095367432f;
    }
    public static int MIN_LOGICALDPIOVERRIDE() {
        return (int)-2L;
    }
    public static int SPI_GETMENUUNDERLINES() {
        return (int)4106L;
    }
    public static int SPI_SETMENUUNDERLINES() {
        return (int)4107L;
    }
    public static int SPIF_SENDCHANGE() {
        return (int)2L;
    }
    public static int METRICS_USEDEFAULT() {
        return (int)-1L;
    }
    public static int ARW_BOTTOMLEFT() {
        return (int)0L;
    }
    public static int ARW_BOTTOMRIGHT() {
        return (int)1L;
    }
    public static int ARW_TOPLEFT() {
        return (int)2L;
    }
    public static int ARW_TOPRIGHT() {
        return (int)3L;
    }
    public static int ARW_STARTMASK() {
        return (int)3L;
    }
    public static int ARW_STARTRIGHT() {
        return (int)1L;
    }
    public static int ARW_STARTTOP() {
        return (int)2L;
    }
    public static int ARW_LEFT() {
        return (int)0L;
    }
    public static int ARW_RIGHT() {
        return (int)0L;
    }
    public static int ARW_UP() {
        return (int)4L;
    }
    public static int ARW_DOWN() {
        return (int)4L;
    }
    public static int ARW_HIDE() {
        return (int)8L;
    }
    public static int DISP_CHANGE_FAILED() {
        return (int)-1L;
    }
    public static int DISP_CHANGE_BADMODE() {
        return (int)-2L;
    }
    public static int DISP_CHANGE_NOTUPDATED() {
        return (int)-3L;
    }
    public static int DISP_CHANGE_BADFLAGS() {
        return (int)-4L;
    }
    public static int DISP_CHANGE_BADPARAM() {
        return (int)-5L;
    }
    public static int DISP_CHANGE_BADDUALVIEW() {
        return (int)-6L;
    }
    public static int ENUM_CURRENT_SETTINGS() {
        return (int)4294967295L;
    }
    public static int ENUM_REGISTRY_SETTINGS() {
        return (int)4294967294L;
    }
    public static int SKF_RWINLATCHED() {
        return (int)2147483648L;
    }
    public static int MKF_MOUSEMODE() {
        return (int)2147483648L;
    }
    public static int OBJID_WINDOW() {
        return (int)0L;
    }
    public static int OBJID_SYSMENU() {
        return (int)-1L;
    }
    public static int OBJID_TITLEBAR() {
        return (int)-2L;
    }
    public static int OBJID_MENU() {
        return (int)-3L;
    }
    public static int OBJID_CLIENT() {
        return (int)-4L;
    }
    public static int OBJID_VSCROLL() {
        return (int)-5L;
    }
    public static int OBJID_HSCROLL() {
        return (int)-6L;
    }
    public static int OBJID_SIZEGRIP() {
        return (int)-7L;
    }
    public static int OBJID_CARET() {
        return (int)-8L;
    }
    public static int OBJID_CURSOR() {
        return (int)-9L;
    }
    public static int OBJID_ALERT() {
        return (int)-10L;
    }
    public static int OBJID_SOUND() {
        return (int)-11L;
    }
    public static int OBJID_QUERYCLASSNAMEIDX() {
        return (int)-12L;
    }
    public static int OBJID_NATIVEOM() {
        return (int)-16L;
    }
    public static int STATE_SYSTEM_INDETERMINATE() {
        return (int)32L;
    }
    public static int RI_MOUSE_BUTTON_1_DOWN() {
        return (int)1L;
    }
    public static int RI_MOUSE_BUTTON_1_UP() {
        return (int)2L;
    }
    public static int RI_MOUSE_BUTTON_2_DOWN() {
        return (int)4L;
    }
    public static int RI_MOUSE_BUTTON_2_UP() {
        return (int)8L;
    }
    public static int RI_MOUSE_BUTTON_3_DOWN() {
        return (int)16L;
    }
    public static int RI_MOUSE_BUTTON_3_UP() {
        return (int)32L;
    }
    public static int MSGFLTINFO_NONE() {
        return (int)0L;
    }
    public static int MSGFLTINFO_ALREADYALLOWED_FORWND() {
        return (int)1L;
    }
    public static int MSGFLTINFO_ALREADYDISALLOWED_FORWND() {
        return (int)2L;
    }
    public static int MSGFLTINFO_ALLOWED_HIGHER() {
        return (int)3L;
    }
    public static int MSGFLT_RESET() {
        return (int)0L;
    }
    public static int MSGFLT_ALLOW() {
        return (int)1L;
    }
    public static int MSGFLT_DISALLOW() {
        return (int)2L;
    }
    public static int GID_ROLLOVER() {
        return (int)7L;
    }
    public static int GC_ROLLOVER() {
        return (int)1L;
    }
    public static int LOCALE_NOUSEROVERRIDE() {
        return (int)2147483648L;
    }
    public static int LOCALE_SLANGUAGE() {
        return (int)2L;
    }
    public static int LOCALE_SLANGDISPLAYNAME() {
        return (int)111L;
    }
    public static int LOCALE_SENGLANGUAGE() {
        return (int)4097L;
    }
    public static int LOCALE_SNATIVELANGNAME() {
        return (int)4L;
    }
    public static int LOCALE_SCOUNTRY() {
        return (int)6L;
    }
    public static int LOCALE_SENGCOUNTRY() {
        return (int)4098L;
    }
    public static int LOCALE_SNATIVECTRYNAME() {
        return (int)8L;
    }
    public static int LOCALE_ICOUNTRY() {
        return (int)5L;
    }
    public static int LOCALE_S1159() {
        return (int)40L;
    }
    public static int LOCALE_S2359() {
        return (int)41L;
    }
    public static int CAL_NOUSEROVERRIDE() {
        return (int)2147483648L;
    }
    public static int CAL_USE_CP_ACP() {
        return (int)1073741824L;
    }
    public static int CAL_RETURN_NUMBER() {
        return (int)536870912L;
    }
    public static int CAL_RETURN_GENITIVE_NAMES() {
        return (int)268435456L;
    }
    public static int ENUM_ALL_CALENDARS() {
        return (int)4294967295L;
    }
    public static int MUI_UI_FALLBACK() {
        return (int)48L;
    }
    public static int GEOID_NOT_AVAILABLE() {
        return (int)-1L;
    }
    public static MemoryAddress GEO_NAME_USER_DEFAULT() {
        return constants$573.GEO_NAME_USER_DEFAULT$ADDR;
    }
    public static MemoryAddress LOCALE_NAME_USER_DEFAULT() {
        return constants$573.LOCALE_NAME_USER_DEFAULT$ADDR;
    }
    public static MemorySegment LOCALE_NAME_INVARIANT() {
        return constants$573.LOCALE_NAME_INVARIANT$SEGMENT;
    }
    public static MemorySegment LOCALE_NAME_SYSTEM_DEFAULT() {
        return constants$573.LOCALE_NAME_SYSTEM_DEFAULT$SEGMENT;
    }
    public static int RRF_RT_DWORD() {
        return (int)24L;
    }
    public static int RRF_RT_QWORD() {
        return (int)72L;
    }
    public static MemoryAddress HKEY_CLASSES_ROOT() {
        return constants$573.HKEY_CLASSES_ROOT$ADDR;
    }
    public static MemoryAddress HKEY_CURRENT_USER() {
        return constants$574.HKEY_CURRENT_USER$ADDR;
    }
    public static MemoryAddress HKEY_LOCAL_MACHINE() {
        return constants$574.HKEY_LOCAL_MACHINE$ADDR;
    }
    public static MemoryAddress HKEY_USERS() {
        return constants$574.HKEY_USERS$ADDR;
    }
    public static MemoryAddress HKEY_PERFORMANCE_DATA() {
        return constants$574.HKEY_PERFORMANCE_DATA$ADDR;
    }
    public static MemoryAddress HKEY_PERFORMANCE_TEXT() {
        return constants$574.HKEY_PERFORMANCE_TEXT$ADDR;
    }
    public static MemoryAddress HKEY_PERFORMANCE_NLSTEXT() {
        return constants$574.HKEY_PERFORMANCE_NLSTEXT$ADDR;
    }
    public static MemoryAddress HKEY_CURRENT_CONFIG() {
        return constants$575.HKEY_CURRENT_CONFIG$ADDR;
    }
    public static MemoryAddress HKEY_DYN_DATA() {
        return constants$575.HKEY_DYN_DATA$ADDR;
    }
    public static MemoryAddress HKEY_CURRENT_USER_LOCAL_SETTINGS() {
        return constants$575.HKEY_CURRENT_USER_LOCAL_SETTINGS$ADDR;
    }
    public static MemoryAddress WIN31_CLASS() {
        return constants$575.WIN31_CLASS$ADDR;
    }
    public static int REASON_SWINSTALL() {
        return (int)196610L;
    }
    public static int REASON_HWINSTALL() {
        return (int)65538L;
    }
    public static int REASON_SERVICEHANG() {
        return (int)196613L;
    }
    public static int REASON_UNSTABLE() {
        return (int)327686L;
    }
    public static int REASON_SWHWRECONF() {
        return (int)196612L;
    }
    public static int REASON_OTHER() {
        return (int)0L;
    }
    public static int REASON_UNKNOWN() {
        return (int)255L;
    }
    public static int REASON_LEGACY_API() {
        return (int)2147942400L;
    }
    public static int REASON_PLANNED_FLAG() {
        return (int)2147483648L;
    }
    public static int MAX_SHUTDOWN_TIMEOUT() {
        return (int)315360000L;
    }
    public static int RESOURCETYPE_UNKNOWN() {
        return (int)4294967295L;
    }
    public static int RESOURCEUSAGE_ALL() {
        return (int)19L;
    }
    public static int RESOURCEUSAGE_RESERVED() {
        return (int)2147483648L;
    }
    public static int CONNECT_RESERVED() {
        return (int)4278190080L;
    }
    public static int WN_SUCCESS() {
        return (int)0L;
    }
    public static int WN_NO_ERROR() {
        return (int)0L;
    }
    public static int WN_NOT_SUPPORTED() {
        return (int)50L;
    }
    public static int WN_CANCEL() {
        return (int)1223L;
    }
    public static int WN_RETRY() {
        return (int)1237L;
    }
    public static int WN_NET_ERROR() {
        return (int)59L;
    }
    public static int WN_MORE_DATA() {
        return (int)234L;
    }
    public static int WN_BAD_POINTER() {
        return (int)487L;
    }
    public static int WN_BAD_VALUE() {
        return (int)87L;
    }
    public static int WN_BAD_USER() {
        return (int)2202L;
    }
    public static int WN_BAD_PASSWORD() {
        return (int)86L;
    }
    public static int WN_ACCESS_DENIED() {
        return (int)5L;
    }
    public static int WN_FUNCTION_BUSY() {
        return (int)170L;
    }
    public static int WN_WINDOWS_ERROR() {
        return (int)59L;
    }
    public static int WN_OUT_OF_MEMORY() {
        return (int)8L;
    }
    public static int WN_NO_NETWORK() {
        return (int)1222L;
    }
    public static int WN_EXTENDED_ERROR() {
        return (int)1208L;
    }
    public static int WN_BAD_LEVEL() {
        return (int)124L;
    }
    public static int WN_BAD_HANDLE() {
        return (int)6L;
    }
    public static int WN_NOT_INITIALIZING() {
        return (int)1247L;
    }
    public static int WN_NO_MORE_DEVICES() {
        return (int)1248L;
    }
    public static int WN_NOT_CONNECTED() {
        return (int)2250L;
    }
    public static int WN_OPEN_FILES() {
        return (int)2401L;
    }
    public static int WN_DEVICE_IN_USE() {
        return (int)2404L;
    }
    public static int WN_BAD_NETNAME() {
        return (int)67L;
    }
    public static int WN_BAD_LOCALNAME() {
        return (int)1200L;
    }
    public static int WN_ALREADY_CONNECTED() {
        return (int)85L;
    }
    public static int WN_DEVICE_ERROR() {
        return (int)31L;
    }
    public static int WN_CONNECTION_CLOSED() {
        return (int)1201L;
    }
    public static int WN_NO_NET_OR_BAD_PATH() {
        return (int)1203L;
    }
    public static int WN_BAD_PROVIDER() {
        return (int)1204L;
    }
    public static int WN_CANNOT_OPEN_PROFILE() {
        return (int)1205L;
    }
    public static int WN_BAD_PROFILE() {
        return (int)1206L;
    }
    public static int WN_BAD_DEV_TYPE() {
        return (int)66L;
    }
    public static int WN_DEVICE_ALREADY_REMEMBERED() {
        return (int)1202L;
    }
    public static int WN_CONNECTED_OTHER_PASSWORD() {
        return (int)2108L;
    }
    public static int WN_CONNECTED_OTHER_PASSWORD_DEFAULT() {
        return (int)2109L;
    }
    public static int WN_NO_MORE_ENTRIES() {
        return (int)259L;
    }
    public static int WN_NOT_CONTAINER() {
        return (int)1207L;
    }
    public static int WN_NOT_AUTHENTICATED() {
        return (int)1244L;
    }
    public static int WN_NOT_LOGGED_ON() {
        return (int)1245L;
    }
    public static int WN_NOT_VALIDATED() {
        return (int)1311L;
    }
    public static int PERF_NO_INSTANCES() {
        return (int)-1L;
    }
    public static int PERF_COUNTER_COUNTER() {
        return (int)272696320L;
    }
    public static int PERF_COUNTER_TIMER() {
        return (int)541132032L;
    }
    public static int PERF_COUNTER_QUEUELEN_TYPE() {
        return (int)4523008L;
    }
    public static int PERF_COUNTER_LARGE_QUEUELEN_TYPE() {
        return (int)4523264L;
    }
    public static int PERF_COUNTER_100NS_QUEUELEN_TYPE() {
        return (int)5571840L;
    }
    public static int PERF_COUNTER_OBJ_TIME_QUEUELEN_TYPE() {
        return (int)6620416L;
    }
    public static int PERF_COUNTER_BULK_COUNT() {
        return (int)272696576L;
    }
    public static int PERF_COUNTER_TEXT() {
        return (int)2816L;
    }
    public static int PERF_COUNTER_RAWCOUNT() {
        return (int)65536L;
    }
    public static int PERF_COUNTER_LARGE_RAWCOUNT() {
        return (int)65792L;
    }
    public static int PERF_COUNTER_RAWCOUNT_HEX() {
        return (int)0L;
    }
    public static int PERF_COUNTER_LARGE_RAWCOUNT_HEX() {
        return (int)256L;
    }
    public static int PERF_SAMPLE_FRACTION() {
        return (int)549585920L;
    }
    public static int PERF_SAMPLE_COUNTER() {
        return (int)4260864L;
    }
    public static int PERF_COUNTER_NODATA() {
        return (int)1073742336L;
    }
    public static int PERF_COUNTER_TIMER_INV() {
        return (int)557909248L;
    }
    public static int PERF_SAMPLE_BASE() {
        return (int)1073939457L;
    }
    public static int PERF_AVERAGE_TIMER() {
        return (int)805438464L;
    }
    public static int PERF_AVERAGE_BASE() {
        return (int)1073939458L;
    }
    public static int PERF_AVERAGE_BULK() {
        return (int)1073874176L;
    }
    public static int PERF_OBJ_TIME_TIMER() {
        return (int)543229184L;
    }
    public static int PERF_100NSEC_TIMER() {
        return (int)542180608L;
    }
    public static int PERF_100NSEC_TIMER_INV() {
        return (int)558957824L;
    }
    public static int PERF_COUNTER_MULTI_TIMER() {
        return (int)574686464L;
    }
    public static int PERF_COUNTER_MULTI_TIMER_INV() {
        return (int)591463680L;
    }
    public static int PERF_COUNTER_MULTI_BASE() {
        return (int)1107494144L;
    }
    public static int PERF_100NSEC_MULTI_TIMER() {
        return (int)575735040L;
    }
    public static int PERF_100NSEC_MULTI_TIMER_INV() {
        return (int)592512256L;
    }
    public static int PERF_RAW_FRACTION() {
        return (int)537003008L;
    }
    public static int PERF_LARGE_RAW_FRACTION() {
        return (int)537003264L;
    }
    public static int PERF_RAW_BASE() {
        return (int)1073939459L;
    }
    public static int PERF_LARGE_RAW_BASE() {
        return (int)1073939712L;
    }
    public static int PERF_ELAPSED_TIME() {
        return (int)807666944L;
    }
    public static int PERF_COUNTER_HISTOGRAM_TYPE() {
        return (int)2147483648L;
    }
    public static int PERF_COUNTER_DELTA() {
        return (int)4195328L;
    }
    public static int PERF_COUNTER_LARGE_DELTA() {
        return (int)4195584L;
    }
    public static int PERF_PRECISION_SYSTEM_TIMER() {
        return (int)541525248L;
    }
    public static int PERF_PRECISION_100NS_TIMER() {
        return (int)542573824L;
    }
    public static int PERF_PRECISION_OBJECT_TIMER() {
        return (int)543622400L;
    }
    public static int PERF_PRECISION_TIMESTAMP() {
        return (int)1073939712L;
    }
    public static int PERF_NO_UNIQUE_ID() {
        return (int)-1L;
    }
    public static int PERF_QUERY_OBJECTS() {
        return (int)-2147483648L;
    }
    public static int PERF_QUERY_GLOBAL() {
        return (int)-2147483647L;
    }
    public static int PERF_QUERY_COSTLY() {
        return (int)-2147483646L;
    }
    public static int MAX_PERF_OBJECTS_IN_QUERY_FUNCTION() {
        return (int)64L;
    }
    public static int IOC_IN() {
        return (int)2147483648L;
    }
    public static int IOC_INOUT() {
        return (int)3221225472L;
    }
    public static int FIONREAD() {
        return (int)1074030207L;
    }
    public static int FIONBIO() {
        return (int)2147772030L;
    }
    public static int FIOASYNC() {
        return (int)2147772029L;
    }
    public static int SIOCSHIWAT() {
        return (int)2147775232L;
    }
    public static int SIOCGHIWAT() {
        return (int)1074033409L;
    }
    public static int SIOCSLOWAT() {
        return (int)2147775234L;
    }
    public static int SIOCGLOWAT() {
        return (int)1074033411L;
    }
    public static int SIOCATMARK() {
        return (int)1074033415L;
    }
    public static int IN_CLASSA_NET() {
        return (int)4278190080L;
    }
    public static int IN_CLASSB_NET() {
        return (int)4294901760L;
    }
    public static int IN_CLASSC_NET() {
        return (int)4294967040L;
    }
    public static int INADDR_ANY() {
        return (int)0L;
    }
    public static int INADDR_BROADCAST() {
        return (int)4294967295L;
    }
    public static int INADDR_NONE() {
        return (int)4294967295L;
    }
    public static long INVALID_SOCKET() {
        return -1L;
    }
    public static int SOCKET_ERROR() {
        return (int)-1L;
    }
    public static int SO_DONTLINGER() {
        return (int)4294967167L;
    }
    public static int AF_OSI() {
        return (int)7L;
    }
    public static int PF_UNSPEC() {
        return (int)0L;
    }
    public static int PF_UNIX() {
        return (int)1L;
    }
    public static int PF_INET() {
        return (int)2L;
    }
    public static int PF_IMPLINK() {
        return (int)3L;
    }
    public static int PF_PUP() {
        return (int)4L;
    }
    public static int PF_CHAOS() {
        return (int)5L;
    }
    public static int PF_NS() {
        return (int)6L;
    }
    public static int PF_IPX() {
        return (int)6L;
    }
    public static int PF_ISO() {
        return (int)7L;
    }
    public static int PF_OSI() {
        return (int)7L;
    }
    public static int PF_ECMA() {
        return (int)8L;
    }
    public static int PF_DATAKIT() {
        return (int)9L;
    }
    public static int PF_CCITT() {
        return (int)10L;
    }
    public static int PF_SNA() {
        return (int)11L;
    }
    public static int PF_DECnet() {
        return (int)12L;
    }
    public static int PF_DLI() {
        return (int)13L;
    }
    public static int PF_LAT() {
        return (int)14L;
    }
    public static int PF_HYLINK() {
        return (int)15L;
    }
    public static int PF_APPLETALK() {
        return (int)16L;
    }
    public static int PF_VOICEVIEW() {
        return (int)18L;
    }
    public static int PF_FIREFOX() {
        return (int)19L;
    }
    public static int PF_UNKNOWN1() {
        return (int)20L;
    }
    public static int PF_BAN() {
        return (int)21L;
    }
    public static int PF_MAX() {
        return (int)22L;
    }
    public static int HOST_NOT_FOUND() {
        return (int)11001L;
    }
    public static int TRY_AGAIN() {
        return (int)11002L;
    }
    public static int NO_RECOVERY() {
        return (int)11003L;
    }
    public static int NO_DATA() {
        return (int)11004L;
    }
    public static int WSANO_ADDRESS() {
        return (int)11004L;
    }
    public static int NO_ADDRESS() {
        return (int)11004L;
    }
    public static int ALG_CLASS_ANY() {
        return (int)0L;
    }
    public static int ALG_CLASS_SIGNATURE() {
        return (int)8192L;
    }
    public static int ALG_CLASS_MSG_ENCRYPT() {
        return (int)16384L;
    }
    public static int ALG_CLASS_DATA_ENCRYPT() {
        return (int)24576L;
    }
    public static int ALG_CLASS_HASH() {
        return (int)32768L;
    }
    public static int ALG_CLASS_KEY_EXCHANGE() {
        return (int)40960L;
    }
    public static int ALG_CLASS_ALL() {
        return (int)57344L;
    }
    public static int ALG_TYPE_ANY() {
        return (int)0L;
    }
    public static int ALG_TYPE_DSS() {
        return (int)512L;
    }
    public static int ALG_TYPE_RSA() {
        return (int)1024L;
    }
    public static int ALG_TYPE_BLOCK() {
        return (int)1536L;
    }
    public static int ALG_TYPE_STREAM() {
        return (int)2048L;
    }
    public static int ALG_TYPE_DH() {
        return (int)2560L;
    }
    public static int ALG_TYPE_SECURECHANNEL() {
        return (int)3072L;
    }
    public static int ALG_TYPE_ECDH() {
        return (int)3584L;
    }
    public static int ALG_TYPE_THIRDPARTY() {
        return (int)4096L;
    }
    public static int ALG_SID_ANY() {
        return (int)0L;
    }
    public static int ALG_SID_THIRDPARTY_ANY() {
        return (int)0L;
    }
    public static int CALG_MD2() {
        return (int)32769L;
    }
    public static int CALG_MD4() {
        return (int)32770L;
    }
    public static int CALG_MD5() {
        return (int)32771L;
    }
    public static int CALG_SHA() {
        return (int)32772L;
    }
    public static int CALG_SHA1() {
        return (int)32772L;
    }
    public static int CALG_MAC() {
        return (int)32773L;
    }
    public static int CALG_RSA_SIGN() {
        return (int)9216L;
    }
    public static int CALG_DSS_SIGN() {
        return (int)8704L;
    }
    public static int CALG_NO_SIGN() {
        return (int)8192L;
    }
    public static int CALG_RSA_KEYX() {
        return (int)41984L;
    }
    public static int CALG_DES() {
        return (int)26113L;
    }
    public static int CALG_3DES_112() {
        return (int)26121L;
    }
    public static int CALG_3DES() {
        return (int)26115L;
    }
    public static int CALG_DESX() {
        return (int)26116L;
    }
    public static int CALG_RC2() {
        return (int)26114L;
    }
    public static int CALG_RC4() {
        return (int)26625L;
    }
    public static int CALG_SEAL() {
        return (int)26626L;
    }
    public static int CALG_DH_SF() {
        return (int)43521L;
    }
    public static int CALG_DH_EPHEM() {
        return (int)43522L;
    }
    public static int CALG_AGREEDKEY_ANY() {
        return (int)43523L;
    }
    public static int CALG_KEA_KEYX() {
        return (int)43524L;
    }
    public static int CALG_HUGHES_MD5() {
        return (int)40963L;
    }
    public static int CALG_SKIPJACK() {
        return (int)26122L;
    }
    public static int CALG_TEK() {
        return (int)26123L;
    }
    public static int CALG_CYLINK_MEK() {
        return (int)26124L;
    }
    public static int CALG_SSL3_SHAMD5() {
        return (int)32776L;
    }
    public static int CALG_SSL3_MASTER() {
        return (int)19457L;
    }
    public static int CALG_SCHANNEL_MASTER_HASH() {
        return (int)19458L;
    }
    public static int CALG_SCHANNEL_MAC_KEY() {
        return (int)19459L;
    }
    public static int CALG_SCHANNEL_ENC_KEY() {
        return (int)19463L;
    }
    public static int CALG_PCT1_MASTER() {
        return (int)19460L;
    }
    public static int CALG_SSL2_MASTER() {
        return (int)19461L;
    }
    public static int CALG_TLS1_MASTER() {
        return (int)19462L;
    }
    public static int CALG_RC5() {
        return (int)26125L;
    }
    public static int CALG_HMAC() {
        return (int)32777L;
    }
    public static int CALG_TLS1PRF() {
        return (int)32778L;
    }
    public static int CALG_HASH_REPLACE_OWF() {
        return (int)32779L;
    }
    public static int CALG_AES_128() {
        return (int)26126L;
    }
    public static int CALG_AES_192() {
        return (int)26127L;
    }
    public static int CALG_AES_256() {
        return (int)26128L;
    }
    public static int CALG_AES() {
        return (int)26129L;
    }
    public static int CALG_SHA_256() {
        return (int)32780L;
    }
    public static int CALG_SHA_384() {
        return (int)32781L;
    }
    public static int CALG_SHA_512() {
        return (int)32782L;
    }
    public static int CALG_ECDH() {
        return (int)43525L;
    }
    public static int CALG_ECDH_EPHEM() {
        return (int)44550L;
    }
    public static int CALG_ECMQV() {
        return (int)40961L;
    }
    public static int CALG_ECDSA() {
        return (int)8707L;
    }
    public static int CALG_NULLCIPHER() {
        return (int)24576L;
    }
    public static int CALG_THIRDPARTY_KEY_EXCHANGE() {
        return (int)45056L;
    }
    public static int CALG_THIRDPARTY_SIGNATURE() {
        return (int)12288L;
    }
    public static int CALG_THIRDPARTY_CIPHER() {
        return (int)28672L;
    }
    public static int CALG_THIRDPARTY_HASH() {
        return (int)36864L;
    }
    public static int CRYPT_VERIFYCONTEXT() {
        return (int)4026531840L;
    }
    public static int KEY_LENGTH_MASK() {
        return (int)4294901760L;
    }
    public static int CRYPT_FAILED() {
        return (int)0L;
    }
    public static int CRYPT_SUCCEED() {
        return (int)1L;
    }
    public static MemorySegment MS_DEF_PROV_A() {
        return constants$575.MS_DEF_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_DEF_PROV_W() {
        return constants$575.MS_DEF_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_DEF_PROV() {
        return constants$576.MS_DEF_PROV$SEGMENT;
    }
    public static MemorySegment MS_ENHANCED_PROV_A() {
        return constants$576.MS_ENHANCED_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_ENHANCED_PROV_W() {
        return constants$576.MS_ENHANCED_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_ENHANCED_PROV() {
        return constants$576.MS_ENHANCED_PROV$SEGMENT;
    }
    public static MemorySegment MS_STRONG_PROV_A() {
        return constants$576.MS_STRONG_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_STRONG_PROV_W() {
        return constants$576.MS_STRONG_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_STRONG_PROV() {
        return constants$577.MS_STRONG_PROV$SEGMENT;
    }
    public static MemorySegment MS_DEF_RSA_SIG_PROV_A() {
        return constants$577.MS_DEF_RSA_SIG_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_DEF_RSA_SIG_PROV_W() {
        return constants$577.MS_DEF_RSA_SIG_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_DEF_RSA_SIG_PROV() {
        return constants$577.MS_DEF_RSA_SIG_PROV$SEGMENT;
    }
    public static MemorySegment MS_DEF_RSA_SCHANNEL_PROV_A() {
        return constants$577.MS_DEF_RSA_SCHANNEL_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_DEF_RSA_SCHANNEL_PROV_W() {
        return constants$577.MS_DEF_RSA_SCHANNEL_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_DEF_RSA_SCHANNEL_PROV() {
        return constants$578.MS_DEF_RSA_SCHANNEL_PROV$SEGMENT;
    }
    public static MemorySegment MS_DEF_DSS_PROV_A() {
        return constants$578.MS_DEF_DSS_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_DEF_DSS_PROV_W() {
        return constants$578.MS_DEF_DSS_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_DEF_DSS_PROV() {
        return constants$578.MS_DEF_DSS_PROV$SEGMENT;
    }
    public static MemorySegment MS_DEF_DSS_DH_PROV_A() {
        return constants$578.MS_DEF_DSS_DH_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_DEF_DSS_DH_PROV_W() {
        return constants$578.MS_DEF_DSS_DH_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_DEF_DSS_DH_PROV() {
        return constants$579.MS_DEF_DSS_DH_PROV$SEGMENT;
    }
    public static MemorySegment MS_ENH_DSS_DH_PROV_A() {
        return constants$579.MS_ENH_DSS_DH_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_ENH_DSS_DH_PROV_W() {
        return constants$579.MS_ENH_DSS_DH_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_ENH_DSS_DH_PROV() {
        return constants$579.MS_ENH_DSS_DH_PROV$SEGMENT;
    }
    public static MemorySegment MS_DEF_DH_SCHANNEL_PROV_A() {
        return constants$579.MS_DEF_DH_SCHANNEL_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_DEF_DH_SCHANNEL_PROV_W() {
        return constants$579.MS_DEF_DH_SCHANNEL_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_DEF_DH_SCHANNEL_PROV() {
        return constants$580.MS_DEF_DH_SCHANNEL_PROV$SEGMENT;
    }
    public static MemorySegment MS_SCARD_PROV_A() {
        return constants$580.MS_SCARD_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_SCARD_PROV_W() {
        return constants$580.MS_SCARD_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_SCARD_PROV() {
        return constants$580.MS_SCARD_PROV$SEGMENT;
    }
    public static MemorySegment MS_ENH_RSA_AES_PROV_A() {
        return constants$580.MS_ENH_RSA_AES_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_ENH_RSA_AES_PROV_W() {
        return constants$580.MS_ENH_RSA_AES_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_ENH_RSA_AES_PROV_XP_A() {
        return constants$581.MS_ENH_RSA_AES_PROV_XP_A$SEGMENT;
    }
    public static MemorySegment MS_ENH_RSA_AES_PROV_XP_W() {
        return constants$581.MS_ENH_RSA_AES_PROV_XP_W$SEGMENT;
    }
    public static MemorySegment MS_ENH_RSA_AES_PROV_XP() {
        return constants$581.MS_ENH_RSA_AES_PROV_XP$SEGMENT;
    }
    public static MemorySegment MS_ENH_RSA_AES_PROV() {
        return constants$581.MS_ENH_RSA_AES_PROV$SEGMENT;
    }
    public static MemorySegment EXPO_OFFLOAD_REG_VALUE() {
        return constants$581.EXPO_OFFLOAD_REG_VALUE$SEGMENT;
    }
    public static MemorySegment EXPO_OFFLOAD_FUNC_NAME() {
        return constants$581.EXPO_OFFLOAD_FUNC_NAME$SEGMENT;
    }
    public static MemorySegment szKEY_CRYPTOAPI_PRIVATE_KEY_OPTIONS() {
        return constants$582.szKEY_CRYPTOAPI_PRIVATE_KEY_OPTIONS$SEGMENT;
    }
    public static MemorySegment szKEY_CACHE_ENABLED() {
        return constants$582.szKEY_CACHE_ENABLED$SEGMENT;
    }
    public static MemorySegment szKEY_CACHE_SECONDS() {
        return constants$582.szKEY_CACHE_SECONDS$SEGMENT;
    }
    public static MemorySegment szPRIV_KEY_CACHE_MAX_ITEMS() {
        return constants$582.szPRIV_KEY_CACHE_MAX_ITEMS$SEGMENT;
    }
    public static MemorySegment szPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS() {
        return constants$582.szPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS$SEGMENT;
    }
    public static MemorySegment szOID_RSA() {
        return constants$582.szOID_RSA$SEGMENT;
    }
    public static MemorySegment szOID_PKCS() {
        return constants$583.szOID_PKCS$SEGMENT;
    }
    public static MemorySegment szOID_RSA_HASH() {
        return constants$583.szOID_RSA_HASH$SEGMENT;
    }
    public static MemorySegment szOID_RSA_ENCRYPT() {
        return constants$583.szOID_RSA_ENCRYPT$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_1() {
        return constants$583.szOID_PKCS_1$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_2() {
        return constants$583.szOID_PKCS_2$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_3() {
        return constants$583.szOID_PKCS_3$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_4() {
        return constants$584.szOID_PKCS_4$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_5() {
        return constants$584.szOID_PKCS_5$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_6() {
        return constants$584.szOID_PKCS_6$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_7() {
        return constants$584.szOID_PKCS_7$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_8() {
        return constants$584.szOID_PKCS_8$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_9() {
        return constants$584.szOID_PKCS_9$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_10() {
        return constants$585.szOID_PKCS_10$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12() {
        return constants$585.szOID_PKCS_12$SEGMENT;
    }
    public static MemorySegment szOID_RSA_RSA() {
        return constants$585.szOID_RSA_RSA$SEGMENT;
    }
    public static MemorySegment szOID_RSA_MD2RSA() {
        return constants$585.szOID_RSA_MD2RSA$SEGMENT;
    }
    public static MemorySegment szOID_RSA_MD4RSA() {
        return constants$585.szOID_RSA_MD4RSA$SEGMENT;
    }
    public static MemorySegment szOID_RSA_MD5RSA() {
        return constants$585.szOID_RSA_MD5RSA$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SHA1RSA() {
        return constants$586.szOID_RSA_SHA1RSA$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SETOAEP_RSA() {
        return constants$586.szOID_RSA_SETOAEP_RSA$SEGMENT;
    }
    public static MemorySegment szOID_RSAES_OAEP() {
        return constants$586.szOID_RSAES_OAEP$SEGMENT;
    }
    public static MemorySegment szOID_RSA_MGF1() {
        return constants$586.szOID_RSA_MGF1$SEGMENT;
    }
    public static MemorySegment szOID_RSA_PSPECIFIED() {
        return constants$586.szOID_RSA_PSPECIFIED$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SSA_PSS() {
        return constants$586.szOID_RSA_SSA_PSS$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SHA256RSA() {
        return constants$587.szOID_RSA_SHA256RSA$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SHA384RSA() {
        return constants$587.szOID_RSA_SHA384RSA$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SHA512RSA() {
        return constants$587.szOID_RSA_SHA512RSA$SEGMENT;
    }
    public static MemorySegment szOID_RSA_DH() {
        return constants$587.szOID_RSA_DH$SEGMENT;
    }
    public static MemorySegment szOID_RSA_data() {
        return constants$587.szOID_RSA_data$SEGMENT;
    }
    public static MemorySegment szOID_RSA_signedData() {
        return constants$587.szOID_RSA_signedData$SEGMENT;
    }
    public static MemorySegment szOID_RSA_envelopedData() {
        return constants$588.szOID_RSA_envelopedData$SEGMENT;
    }
    public static MemorySegment szOID_RSA_signEnvData() {
        return constants$588.szOID_RSA_signEnvData$SEGMENT;
    }
    public static MemorySegment szOID_RSA_digestedData() {
        return constants$588.szOID_RSA_digestedData$SEGMENT;
    }
    public static MemorySegment szOID_RSA_hashedData() {
        return constants$588.szOID_RSA_hashedData$SEGMENT;
    }
    public static MemorySegment szOID_RSA_encryptedData() {
        return constants$588.szOID_RSA_encryptedData$SEGMENT;
    }
    public static MemorySegment szOID_RSA_emailAddr() {
        return constants$588.szOID_RSA_emailAddr$SEGMENT;
    }
    public static MemorySegment szOID_RSA_unstructName() {
        return constants$589.szOID_RSA_unstructName$SEGMENT;
    }
    public static MemorySegment szOID_RSA_contentType() {
        return constants$589.szOID_RSA_contentType$SEGMENT;
    }
    public static MemorySegment szOID_RSA_messageDigest() {
        return constants$589.szOID_RSA_messageDigest$SEGMENT;
    }
    public static MemorySegment szOID_RSA_signingTime() {
        return constants$589.szOID_RSA_signingTime$SEGMENT;
    }
    public static MemorySegment szOID_RSA_counterSign() {
        return constants$589.szOID_RSA_counterSign$SEGMENT;
    }
    public static MemorySegment szOID_RSA_challengePwd() {
        return constants$589.szOID_RSA_challengePwd$SEGMENT;
    }
    public static MemorySegment szOID_RSA_unstructAddr() {
        return constants$590.szOID_RSA_unstructAddr$SEGMENT;
    }
    public static MemorySegment szOID_RSA_extCertAttrs() {
        return constants$590.szOID_RSA_extCertAttrs$SEGMENT;
    }
    public static MemorySegment szOID_RSA_certExtensions() {
        return constants$590.szOID_RSA_certExtensions$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SMIMECapabilities() {
        return constants$590.szOID_RSA_SMIMECapabilities$SEGMENT;
    }
    public static MemorySegment szOID_RSA_preferSignedData() {
        return constants$590.szOID_RSA_preferSignedData$SEGMENT;
    }
    public static MemorySegment szOID_TIMESTAMP_TOKEN() {
        return constants$590.szOID_TIMESTAMP_TOKEN$SEGMENT;
    }
    public static MemorySegment szOID_RFC3161_counterSign() {
        return constants$591.szOID_RFC3161_counterSign$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SMIMEalg() {
        return constants$591.szOID_RSA_SMIMEalg$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SMIMEalgESDH() {
        return constants$591.szOID_RSA_SMIMEalgESDH$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SMIMEalgCMS3DESwrap() {
        return constants$591.szOID_RSA_SMIMEalgCMS3DESwrap$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SMIMEalgCMSRC2wrap() {
        return constants$591.szOID_RSA_SMIMEalgCMSRC2wrap$SEGMENT;
    }
    public static MemorySegment szOID_RSA_MD2() {
        return constants$591.szOID_RSA_MD2$SEGMENT;
    }
    public static MemorySegment szOID_RSA_MD4() {
        return constants$592.szOID_RSA_MD4$SEGMENT;
    }
    public static MemorySegment szOID_RSA_MD5() {
        return constants$592.szOID_RSA_MD5$SEGMENT;
    }
    public static MemorySegment szOID_RSA_RC2CBC() {
        return constants$592.szOID_RSA_RC2CBC$SEGMENT;
    }
    public static MemorySegment szOID_RSA_RC4() {
        return constants$592.szOID_RSA_RC4$SEGMENT;
    }
    public static MemorySegment szOID_RSA_DES_EDE3_CBC() {
        return constants$592.szOID_RSA_DES_EDE3_CBC$SEGMENT;
    }
    public static MemorySegment szOID_RSA_RC5_CBCPad() {
        return constants$592.szOID_RSA_RC5_CBCPad$SEGMENT;
    }
    public static MemorySegment szOID_ANSI_X942() {
        return constants$593.szOID_ANSI_X942$SEGMENT;
    }
    public static MemorySegment szOID_ANSI_X942_DH() {
        return constants$593.szOID_ANSI_X942_DH$SEGMENT;
    }
    public static MemorySegment szOID_X957() {
        return constants$593.szOID_X957$SEGMENT;
    }
    public static MemorySegment szOID_X957_DSA() {
        return constants$593.szOID_X957_DSA$SEGMENT;
    }
    public static MemorySegment szOID_X957_SHA1DSA() {
        return constants$593.szOID_X957_SHA1DSA$SEGMENT;
    }
    public static MemorySegment szOID_ECC_PUBLIC_KEY() {
        return constants$593.szOID_ECC_PUBLIC_KEY$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_P256() {
        return constants$594.szOID_ECC_CURVE_P256$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_P384() {
        return constants$594.szOID_ECC_CURVE_P384$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_P521() {
        return constants$594.szOID_ECC_CURVE_P521$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP160R1() {
        return constants$594.szOID_ECC_CURVE_BRAINPOOLP160R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP160T1() {
        return constants$594.szOID_ECC_CURVE_BRAINPOOLP160T1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP192R1() {
        return constants$594.szOID_ECC_CURVE_BRAINPOOLP192R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP192T1() {
        return constants$595.szOID_ECC_CURVE_BRAINPOOLP192T1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP224R1() {
        return constants$595.szOID_ECC_CURVE_BRAINPOOLP224R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP224T1() {
        return constants$595.szOID_ECC_CURVE_BRAINPOOLP224T1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP256R1() {
        return constants$595.szOID_ECC_CURVE_BRAINPOOLP256R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP256T1() {
        return constants$595.szOID_ECC_CURVE_BRAINPOOLP256T1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP320R1() {
        return constants$595.szOID_ECC_CURVE_BRAINPOOLP320R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP320T1() {
        return constants$596.szOID_ECC_CURVE_BRAINPOOLP320T1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP384R1() {
        return constants$596.szOID_ECC_CURVE_BRAINPOOLP384R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP384T1() {
        return constants$596.szOID_ECC_CURVE_BRAINPOOLP384T1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP512R1() {
        return constants$596.szOID_ECC_CURVE_BRAINPOOLP512R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP512T1() {
        return constants$596.szOID_ECC_CURVE_BRAINPOOLP512T1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_EC192WAPI() {
        return constants$596.szOID_ECC_CURVE_EC192WAPI$SEGMENT;
    }
    public static MemorySegment szOID_CN_ECDSA_SHA256() {
        return constants$597.szOID_CN_ECDSA_SHA256$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_NISTP192() {
        return constants$597.szOID_ECC_CURVE_NISTP192$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_NISTP224() {
        return constants$597.szOID_ECC_CURVE_NISTP224$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_NISTP256() {
        return constants$597.szOID_ECC_CURVE_NISTP256$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_NISTP384() {
        return constants$597.szOID_ECC_CURVE_NISTP384$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_NISTP521() {
        return constants$597.szOID_ECC_CURVE_NISTP521$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP160K1() {
        return constants$598.szOID_ECC_CURVE_SECP160K1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP160R1() {
        return constants$598.szOID_ECC_CURVE_SECP160R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP160R2() {
        return constants$598.szOID_ECC_CURVE_SECP160R2$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP192K1() {
        return constants$598.szOID_ECC_CURVE_SECP192K1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP192R1() {
        return constants$598.szOID_ECC_CURVE_SECP192R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP224K1() {
        return constants$598.szOID_ECC_CURVE_SECP224K1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP224R1() {
        return constants$599.szOID_ECC_CURVE_SECP224R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP256K1() {
        return constants$599.szOID_ECC_CURVE_SECP256K1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP256R1() {
        return constants$599.szOID_ECC_CURVE_SECP256R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP384R1() {
        return constants$599.szOID_ECC_CURVE_SECP384R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP521R1() {
        return constants$599.szOID_ECC_CURVE_SECP521R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_WTLS7() {
        return constants$599.szOID_ECC_CURVE_WTLS7$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_WTLS9() {
        return constants$600.szOID_ECC_CURVE_WTLS9$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_WTLS12() {
        return constants$600.szOID_ECC_CURVE_WTLS12$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P192V1() {
        return constants$600.szOID_ECC_CURVE_X962P192V1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P192V2() {
        return constants$600.szOID_ECC_CURVE_X962P192V2$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P192V3() {
        return constants$600.szOID_ECC_CURVE_X962P192V3$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P239V1() {
        return constants$600.szOID_ECC_CURVE_X962P239V1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P239V2() {
        return constants$601.szOID_ECC_CURVE_X962P239V2$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P239V3() {
        return constants$601.szOID_ECC_CURVE_X962P239V3$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P256V1() {
        return constants$601.szOID_ECC_CURVE_X962P256V1$SEGMENT;
    }
    public static MemorySegment szOID_ECDSA_SHA1() {
        return constants$601.szOID_ECDSA_SHA1$SEGMENT;
    }
    public static MemorySegment szOID_ECDSA_SPECIFIED() {
        return constants$601.szOID_ECDSA_SPECIFIED$SEGMENT;
    }
    public static MemorySegment szOID_ECDSA_SHA256() {
        return constants$601.szOID_ECDSA_SHA256$SEGMENT;
    }
    public static MemorySegment szOID_ECDSA_SHA384() {
        return constants$602.szOID_ECDSA_SHA384$SEGMENT;
    }
    public static MemorySegment szOID_ECDSA_SHA512() {
        return constants$602.szOID_ECDSA_SHA512$SEGMENT;
    }
    public static MemorySegment szOID_NIST_AES128_CBC() {
        return constants$602.szOID_NIST_AES128_CBC$SEGMENT;
    }
    public static MemorySegment szOID_NIST_AES192_CBC() {
        return constants$602.szOID_NIST_AES192_CBC$SEGMENT;
    }
    public static MemorySegment szOID_NIST_AES256_CBC() {
        return constants$602.szOID_NIST_AES256_CBC$SEGMENT;
    }
    public static MemorySegment szOID_NIST_AES128_WRAP() {
        return constants$602.szOID_NIST_AES128_WRAP$SEGMENT;
    }
    public static MemorySegment szOID_NIST_AES192_WRAP() {
        return constants$603.szOID_NIST_AES192_WRAP$SEGMENT;
    }
    public static MemorySegment szOID_NIST_AES256_WRAP() {
        return constants$603.szOID_NIST_AES256_WRAP$SEGMENT;
    }
    public static MemorySegment szOID_DH_SINGLE_PASS_STDDH_SHA1_KDF() {
        return constants$603.szOID_DH_SINGLE_PASS_STDDH_SHA1_KDF$SEGMENT;
    }
    public static MemorySegment szOID_DH_SINGLE_PASS_STDDH_SHA256_KDF() {
        return constants$603.szOID_DH_SINGLE_PASS_STDDH_SHA256_KDF$SEGMENT;
    }
    public static MemorySegment szOID_DH_SINGLE_PASS_STDDH_SHA384_KDF() {
        return constants$603.szOID_DH_SINGLE_PASS_STDDH_SHA384_KDF$SEGMENT;
    }
    public static MemorySegment szOID_DS() {
        return constants$603.szOID_DS$SEGMENT;
    }
    public static MemorySegment szOID_DSALG() {
        return constants$604.szOID_DSALG$SEGMENT;
    }
    public static MemorySegment szOID_DSALG_CRPT() {
        return constants$604.szOID_DSALG_CRPT$SEGMENT;
    }
    public static MemorySegment szOID_DSALG_HASH() {
        return constants$604.szOID_DSALG_HASH$SEGMENT;
    }
    public static MemorySegment szOID_DSALG_SIGN() {
        return constants$604.szOID_DSALG_SIGN$SEGMENT;
    }
    public static MemorySegment szOID_DSALG_RSA() {
        return constants$604.szOID_DSALG_RSA$SEGMENT;
    }
    public static MemorySegment szOID_OIW() {
        return constants$604.szOID_OIW$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC() {
        return constants$605.szOID_OIWSEC$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_md4RSA() {
        return constants$605.szOID_OIWSEC_md4RSA$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_md5RSA() {
        return constants$605.szOID_OIWSEC_md5RSA$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_md4RSA2() {
        return constants$605.szOID_OIWSEC_md4RSA2$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_desECB() {
        return constants$605.szOID_OIWSEC_desECB$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_desCBC() {
        return constants$605.szOID_OIWSEC_desCBC$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_desOFB() {
        return constants$606.szOID_OIWSEC_desOFB$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_desCFB() {
        return constants$606.szOID_OIWSEC_desCFB$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_desMAC() {
        return constants$606.szOID_OIWSEC_desMAC$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_rsaSign() {
        return constants$606.szOID_OIWSEC_rsaSign$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_dsa() {
        return constants$606.szOID_OIWSEC_dsa$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_shaDSA() {
        return constants$606.szOID_OIWSEC_shaDSA$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_mdc2RSA() {
        return constants$607.szOID_OIWSEC_mdc2RSA$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_shaRSA() {
        return constants$607.szOID_OIWSEC_shaRSA$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_dhCommMod() {
        return constants$607.szOID_OIWSEC_dhCommMod$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_desEDE() {
        return constants$607.szOID_OIWSEC_desEDE$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_sha() {
        return constants$607.szOID_OIWSEC_sha$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_mdc2() {
        return constants$607.szOID_OIWSEC_mdc2$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_dsaComm() {
        return constants$608.szOID_OIWSEC_dsaComm$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_dsaCommSHA() {
        return constants$608.szOID_OIWSEC_dsaCommSHA$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_rsaXchg() {
        return constants$608.szOID_OIWSEC_rsaXchg$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_keyHashSeal() {
        return constants$608.szOID_OIWSEC_keyHashSeal$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_md2RSASign() {
        return constants$608.szOID_OIWSEC_md2RSASign$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_md5RSASign() {
        return constants$608.szOID_OIWSEC_md5RSASign$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_sha1() {
        return constants$609.szOID_OIWSEC_sha1$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_dsaSHA1() {
        return constants$609.szOID_OIWSEC_dsaSHA1$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_dsaCommSHA1() {
        return constants$609.szOID_OIWSEC_dsaCommSHA1$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_sha1RSASign() {
        return constants$609.szOID_OIWSEC_sha1RSASign$SEGMENT;
    }
    public static MemorySegment szOID_OIWDIR() {
        return constants$609.szOID_OIWDIR$SEGMENT;
    }
    public static MemorySegment szOID_OIWDIR_CRPT() {
        return constants$609.szOID_OIWDIR_CRPT$SEGMENT;
    }
    public static MemorySegment szOID_OIWDIR_HASH() {
        return constants$610.szOID_OIWDIR_HASH$SEGMENT;
    }
    public static MemorySegment szOID_OIWDIR_SIGN() {
        return constants$610.szOID_OIWDIR_SIGN$SEGMENT;
    }
    public static MemorySegment szOID_OIWDIR_md2() {
        return constants$610.szOID_OIWDIR_md2$SEGMENT;
    }
    public static MemorySegment szOID_OIWDIR_md2RSA() {
        return constants$610.szOID_OIWDIR_md2RSA$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC() {
        return constants$610.szOID_INFOSEC$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_sdnsSignature() {
        return constants$610.szOID_INFOSEC_sdnsSignature$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicSignature() {
        return constants$611.szOID_INFOSEC_mosaicSignature$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_sdnsConfidentiality() {
        return constants$611.szOID_INFOSEC_sdnsConfidentiality$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicConfidentiality() {
        return constants$611.szOID_INFOSEC_mosaicConfidentiality$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_sdnsIntegrity() {
        return constants$611.szOID_INFOSEC_sdnsIntegrity$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicIntegrity() {
        return constants$611.szOID_INFOSEC_mosaicIntegrity$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_sdnsTokenProtection() {
        return constants$611.szOID_INFOSEC_sdnsTokenProtection$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicTokenProtection() {
        return constants$612.szOID_INFOSEC_mosaicTokenProtection$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_sdnsKeyManagement() {
        return constants$612.szOID_INFOSEC_sdnsKeyManagement$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicKeyManagement() {
        return constants$612.szOID_INFOSEC_mosaicKeyManagement$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_sdnsKMandSig() {
        return constants$612.szOID_INFOSEC_sdnsKMandSig$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicKMandSig() {
        return constants$612.szOID_INFOSEC_mosaicKMandSig$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_SuiteASignature() {
        return constants$612.szOID_INFOSEC_SuiteASignature$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_SuiteAConfidentiality() {
        return constants$613.szOID_INFOSEC_SuiteAConfidentiality$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_SuiteAIntegrity() {
        return constants$613.szOID_INFOSEC_SuiteAIntegrity$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_SuiteATokenProtection() {
        return constants$613.szOID_INFOSEC_SuiteATokenProtection$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_SuiteAKeyManagement() {
        return constants$613.szOID_INFOSEC_SuiteAKeyManagement$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_SuiteAKMandSig() {
        return constants$613.szOID_INFOSEC_SuiteAKMandSig$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicUpdatedSig() {
        return constants$613.szOID_INFOSEC_mosaicUpdatedSig$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicKMandUpdSig() {
        return constants$614.szOID_INFOSEC_mosaicKMandUpdSig$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicUpdatedInteg() {
        return constants$614.szOID_INFOSEC_mosaicUpdatedInteg$SEGMENT;
    }
    public static MemorySegment szOID_NIST_sha256() {
        return constants$614.szOID_NIST_sha256$SEGMENT;
    }
    public static MemorySegment szOID_NIST_sha384() {
        return constants$614.szOID_NIST_sha384$SEGMENT;
    }
    public static MemorySegment szOID_NIST_sha512() {
        return constants$614.szOID_NIST_sha512$SEGMENT;
    }
    public static MemorySegment szOID_COMMON_NAME() {
        return constants$614.szOID_COMMON_NAME$SEGMENT;
    }
    public static MemorySegment szOID_SUR_NAME() {
        return constants$615.szOID_SUR_NAME$SEGMENT;
    }
    public static MemorySegment szOID_DEVICE_SERIAL_NUMBER() {
        return constants$615.szOID_DEVICE_SERIAL_NUMBER$SEGMENT;
    }
    public static MemorySegment szOID_COUNTRY_NAME() {
        return constants$615.szOID_COUNTRY_NAME$SEGMENT;
    }
    public static MemorySegment szOID_LOCALITY_NAME() {
        return constants$615.szOID_LOCALITY_NAME$SEGMENT;
    }
    public static MemorySegment szOID_STATE_OR_PROVINCE_NAME() {
        return constants$615.szOID_STATE_OR_PROVINCE_NAME$SEGMENT;
    }
    public static MemorySegment szOID_STREET_ADDRESS() {
        return constants$615.szOID_STREET_ADDRESS$SEGMENT;
    }
    public static MemorySegment szOID_ORGANIZATION_NAME() {
        return constants$616.szOID_ORGANIZATION_NAME$SEGMENT;
    }
    public static MemorySegment szOID_ORGANIZATIONAL_UNIT_NAME() {
        return constants$616.szOID_ORGANIZATIONAL_UNIT_NAME$SEGMENT;
    }
    public static MemorySegment szOID_TITLE() {
        return constants$616.szOID_TITLE$SEGMENT;
    }
    public static MemorySegment szOID_DESCRIPTION() {
        return constants$616.szOID_DESCRIPTION$SEGMENT;
    }
    public static MemorySegment szOID_SEARCH_GUIDE() {
        return constants$616.szOID_SEARCH_GUIDE$SEGMENT;
    }
    public static MemorySegment szOID_BUSINESS_CATEGORY() {
        return constants$616.szOID_BUSINESS_CATEGORY$SEGMENT;
    }
    public static MemorySegment szOID_POSTAL_ADDRESS() {
        return constants$617.szOID_POSTAL_ADDRESS$SEGMENT;
    }
    public static MemorySegment szOID_POSTAL_CODE() {
        return constants$617.szOID_POSTAL_CODE$SEGMENT;
    }
    public static MemorySegment szOID_POST_OFFICE_BOX() {
        return constants$617.szOID_POST_OFFICE_BOX$SEGMENT;
    }
    public static MemorySegment szOID_PHYSICAL_DELIVERY_OFFICE_NAME() {
        return constants$617.szOID_PHYSICAL_DELIVERY_OFFICE_NAME$SEGMENT;
    }
    public static MemorySegment szOID_TELEPHONE_NUMBER() {
        return constants$617.szOID_TELEPHONE_NUMBER$SEGMENT;
    }
    public static MemorySegment szOID_TELEX_NUMBER() {
        return constants$617.szOID_TELEX_NUMBER$SEGMENT;
    }
    public static MemorySegment szOID_TELETEXT_TERMINAL_IDENTIFIER() {
        return constants$618.szOID_TELETEXT_TERMINAL_IDENTIFIER$SEGMENT;
    }
    public static MemorySegment szOID_FACSIMILE_TELEPHONE_NUMBER() {
        return constants$618.szOID_FACSIMILE_TELEPHONE_NUMBER$SEGMENT;
    }
    public static MemorySegment szOID_X21_ADDRESS() {
        return constants$618.szOID_X21_ADDRESS$SEGMENT;
    }
    public static MemorySegment szOID_INTERNATIONAL_ISDN_NUMBER() {
        return constants$618.szOID_INTERNATIONAL_ISDN_NUMBER$SEGMENT;
    }
    public static MemorySegment szOID_REGISTERED_ADDRESS() {
        return constants$618.szOID_REGISTERED_ADDRESS$SEGMENT;
    }
    public static MemorySegment szOID_DESTINATION_INDICATOR() {
        return constants$618.szOID_DESTINATION_INDICATOR$SEGMENT;
    }
    public static MemorySegment szOID_PREFERRED_DELIVERY_METHOD() {
        return constants$619.szOID_PREFERRED_DELIVERY_METHOD$SEGMENT;
    }
    public static MemorySegment szOID_PRESENTATION_ADDRESS() {
        return constants$619.szOID_PRESENTATION_ADDRESS$SEGMENT;
    }
    public static MemorySegment szOID_SUPPORTED_APPLICATION_CONTEXT() {
        return constants$619.szOID_SUPPORTED_APPLICATION_CONTEXT$SEGMENT;
    }
    public static MemorySegment szOID_MEMBER() {
        return constants$619.szOID_MEMBER$SEGMENT;
    }
    public static MemorySegment szOID_OWNER() {
        return constants$619.szOID_OWNER$SEGMENT;
    }
    public static MemorySegment szOID_ROLE_OCCUPANT() {
        return constants$619.szOID_ROLE_OCCUPANT$SEGMENT;
    }
    public static MemorySegment szOID_SEE_ALSO() {
        return constants$620.szOID_SEE_ALSO$SEGMENT;
    }
    public static MemorySegment szOID_USER_PASSWORD() {
        return constants$620.szOID_USER_PASSWORD$SEGMENT;
    }
    public static MemorySegment szOID_USER_CERTIFICATE() {
        return constants$620.szOID_USER_CERTIFICATE$SEGMENT;
    }
    public static MemorySegment szOID_CA_CERTIFICATE() {
        return constants$620.szOID_CA_CERTIFICATE$SEGMENT;
    }
    public static MemorySegment szOID_AUTHORITY_REVOCATION_LIST() {
        return constants$620.szOID_AUTHORITY_REVOCATION_LIST$SEGMENT;
    }
    public static MemorySegment szOID_CERTIFICATE_REVOCATION_LIST() {
        return constants$620.szOID_CERTIFICATE_REVOCATION_LIST$SEGMENT;
    }
    public static MemorySegment szOID_CROSS_CERTIFICATE_PAIR() {
        return constants$621.szOID_CROSS_CERTIFICATE_PAIR$SEGMENT;
    }
    public static MemorySegment szOID_GIVEN_NAME() {
        return constants$621.szOID_GIVEN_NAME$SEGMENT;
    }
    public static MemorySegment szOID_INITIALS() {
        return constants$621.szOID_INITIALS$SEGMENT;
    }
    public static MemorySegment szOID_DN_QUALIFIER() {
        return constants$621.szOID_DN_QUALIFIER$SEGMENT;
    }
    public static MemorySegment szOID_DOMAIN_COMPONENT() {
        return constants$621.szOID_DOMAIN_COMPONENT$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_FRIENDLY_NAME_ATTR() {
        return constants$621.szOID_PKCS_12_FRIENDLY_NAME_ATTR$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_LOCAL_KEY_ID() {
        return constants$622.szOID_PKCS_12_LOCAL_KEY_ID$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_KEY_PROVIDER_NAME_ATTR() {
        return constants$622.szOID_PKCS_12_KEY_PROVIDER_NAME_ATTR$SEGMENT;
    }
    public static MemorySegment szOID_LOCAL_MACHINE_KEYSET() {
        return constants$622.szOID_LOCAL_MACHINE_KEYSET$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_EXTENDED_ATTRIBUTES() {
        return constants$622.szOID_PKCS_12_EXTENDED_ATTRIBUTES$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_PROTECTED_PASSWORD_SECRET_BAG_TYPE_ID() {
        return constants$622.szOID_PKCS_12_PROTECTED_PASSWORD_SECRET_BAG_TYPE_ID$SEGMENT;
    }
    public static MemorySegment szOID_KEYID_RDN() {
        return constants$622.szOID_KEYID_RDN$SEGMENT;
    }
    public static MemorySegment szOID_EV_RDN_LOCALE() {
        return constants$623.szOID_EV_RDN_LOCALE$SEGMENT;
    }
    public static MemorySegment szOID_EV_RDN_STATE_OR_PROVINCE() {
        return constants$623.szOID_EV_RDN_STATE_OR_PROVINCE$SEGMENT;
    }
    public static MemorySegment szOID_EV_RDN_COUNTRY() {
        return constants$623.szOID_EV_RDN_COUNTRY$SEGMENT;
    }
    public static int CERT_RDN_FLAGS_MASK() {
        return (int)4278190080L;
    }
    public static int CERT_RDN_ENABLE_T61_UNICODE_FLAG() {
        return (int)2147483648L;
    }
    public static MemorySegment CERT_RSA_PUBLIC_KEY_OBJID() {
        return constants$623.CERT_RSA_PUBLIC_KEY_OBJID$SEGMENT;
    }
    public static MemorySegment CERT_DEFAULT_OID_PUBLIC_KEY_SIGN() {
        return constants$623.CERT_DEFAULT_OID_PUBLIC_KEY_SIGN$SEGMENT;
    }
    public static MemorySegment CERT_DEFAULT_OID_PUBLIC_KEY_XCHG() {
        return constants$623.CERT_DEFAULT_OID_PUBLIC_KEY_XCHG$SEGMENT;
    }
    public static int CMSG_ENCODING_TYPE_MASK() {
        return (int)4294901760L;
    }
    public static int CRYPT_FORMAT_SEMICOLON() {
        return (int)256L;
    }
    public static int CRYPT_FORMAT_CRLF() {
        return (int)512L;
    }
    public static int CRYPT_UNICODE_NAME_ENCODE_ENABLE_T61_UNICODE_FLAG() {
        return (int)2147483648L;
    }
    public static int CRYPT_UNICODE_NAME_ENCODE_ENABLE_UTF8_UNICODE_FLAG() {
        return (int)536870912L;
    }
    public static int CRYPT_UNICODE_NAME_ENCODE_FORCE_UTF8_UNICODE_FLAG() {
        return (int)268435456L;
    }
    public static int CRYPT_UNICODE_NAME_ENCODE_DISABLE_CHECK_TYPE_FLAG() {
        return (int)1073741824L;
    }
    public static int CRYPT_ENCODE_ENABLE_IA5CONVERSION_FLAG() {
        return (int)393216L;
    }
    public static int CRYPT_UNICODE_NAME_DECODE_DISABLE_IE4_UTF8_FLAG() {
        return (int)16777216L;
    }
    public static int CRYPT_DECODE_ENABLE_IA5CONVERSION_FLAG() {
        return (int)100663296L;
    }
    public static MemoryAddress X509_CERT() {
        return constants$624.X509_CERT$ADDR;
    }
    public static MemoryAddress X509_CERT_TO_BE_SIGNED() {
        return constants$624.X509_CERT_TO_BE_SIGNED$ADDR;
    }
    public static MemoryAddress X509_CERT_CRL_TO_BE_SIGNED() {
        return constants$624.X509_CERT_CRL_TO_BE_SIGNED$ADDR;
    }
    public static MemoryAddress X509_CERT_REQUEST_TO_BE_SIGNED() {
        return constants$624.X509_CERT_REQUEST_TO_BE_SIGNED$ADDR;
    }
    public static MemoryAddress X509_EXTENSIONS() {
        return constants$624.X509_EXTENSIONS$ADDR;
    }
    public static MemoryAddress X509_NAME_VALUE() {
        return constants$624.X509_NAME_VALUE$ADDR;
    }
    public static MemoryAddress X509_NAME() {
        return constants$625.X509_NAME$ADDR;
    }
    public static MemoryAddress X509_PUBLIC_KEY_INFO() {
        return constants$625.X509_PUBLIC_KEY_INFO$ADDR;
    }
    public static MemoryAddress X509_AUTHORITY_KEY_ID() {
        return constants$625.X509_AUTHORITY_KEY_ID$ADDR;
    }
    public static MemoryAddress X509_KEY_ATTRIBUTES() {
        return constants$625.X509_KEY_ATTRIBUTES$ADDR;
    }
    public static MemoryAddress X509_KEY_USAGE_RESTRICTION() {
        return constants$625.X509_KEY_USAGE_RESTRICTION$ADDR;
    }
    public static MemoryAddress X509_ALTERNATE_NAME() {
        return constants$625.X509_ALTERNATE_NAME$ADDR;
    }
    public static MemoryAddress X509_BASIC_CONSTRAINTS() {
        return constants$626.X509_BASIC_CONSTRAINTS$ADDR;
    }
    public static MemoryAddress X509_KEY_USAGE() {
        return constants$626.X509_KEY_USAGE$ADDR;
    }
    public static MemoryAddress X509_BASIC_CONSTRAINTS2() {
        return constants$626.X509_BASIC_CONSTRAINTS2$ADDR;
    }
    public static MemoryAddress X509_CERT_POLICIES() {
        return constants$626.X509_CERT_POLICIES$ADDR;
    }
    public static MemoryAddress PKCS_UTC_TIME() {
        return constants$626.PKCS_UTC_TIME$ADDR;
    }
    public static MemoryAddress PKCS_TIME_REQUEST() {
        return constants$626.PKCS_TIME_REQUEST$ADDR;
    }
    public static MemoryAddress RSA_CSP_PUBLICKEYBLOB() {
        return constants$627.RSA_CSP_PUBLICKEYBLOB$ADDR;
    }
    public static MemoryAddress X509_UNICODE_NAME() {
        return constants$627.X509_UNICODE_NAME$ADDR;
    }
    public static MemoryAddress X509_KEYGEN_REQUEST_TO_BE_SIGNED() {
        return constants$627.X509_KEYGEN_REQUEST_TO_BE_SIGNED$ADDR;
    }
    public static MemoryAddress PKCS_ATTRIBUTE() {
        return constants$627.PKCS_ATTRIBUTE$ADDR;
    }
    public static MemoryAddress PKCS_CONTENT_INFO_SEQUENCE_OF_ANY() {
        return constants$627.PKCS_CONTENT_INFO_SEQUENCE_OF_ANY$ADDR;
    }
    public static MemoryAddress X509_UNICODE_NAME_VALUE() {
        return constants$627.X509_UNICODE_NAME_VALUE$ADDR;
    }
    public static MemoryAddress X509_ANY_STRING() {
        return constants$628.X509_ANY_STRING$ADDR;
    }
    public static MemoryAddress X509_UNICODE_ANY_STRING() {
        return constants$628.X509_UNICODE_ANY_STRING$ADDR;
    }
    public static MemoryAddress X509_OCTET_STRING() {
        return constants$628.X509_OCTET_STRING$ADDR;
    }
    public static MemoryAddress X509_BITS() {
        return constants$628.X509_BITS$ADDR;
    }
    public static MemoryAddress X509_INTEGER() {
        return constants$628.X509_INTEGER$ADDR;
    }
    public static MemoryAddress X509_MULTI_BYTE_INTEGER() {
        return constants$628.X509_MULTI_BYTE_INTEGER$ADDR;
    }
    public static MemoryAddress X509_ENUMERATED() {
        return constants$629.X509_ENUMERATED$ADDR;
    }
    public static MemoryAddress X509_CHOICE_OF_TIME() {
        return constants$629.X509_CHOICE_OF_TIME$ADDR;
    }
    public static MemoryAddress X509_AUTHORITY_KEY_ID2() {
        return constants$629.X509_AUTHORITY_KEY_ID2$ADDR;
    }
    public static MemoryAddress X509_AUTHORITY_INFO_ACCESS() {
        return constants$629.X509_AUTHORITY_INFO_ACCESS$ADDR;
    }
    public static MemoryAddress X509_SUBJECT_INFO_ACCESS() {
        return constants$629.X509_SUBJECT_INFO_ACCESS$ADDR;
    }
    public static MemoryAddress X509_CRL_REASON_CODE() {
        return constants$629.X509_CRL_REASON_CODE$ADDR;
    }
    public static MemoryAddress PKCS_CONTENT_INFO() {
        return constants$630.PKCS_CONTENT_INFO$ADDR;
    }
    public static MemoryAddress X509_SEQUENCE_OF_ANY() {
        return constants$630.X509_SEQUENCE_OF_ANY$ADDR;
    }
    public static MemoryAddress X509_CRL_DIST_POINTS() {
        return constants$630.X509_CRL_DIST_POINTS$ADDR;
    }
    public static MemoryAddress X509_ENHANCED_KEY_USAGE() {
        return constants$630.X509_ENHANCED_KEY_USAGE$ADDR;
    }
    public static MemoryAddress PKCS_CTL() {
        return constants$630.PKCS_CTL$ADDR;
    }
    public static MemoryAddress X509_MULTI_BYTE_UINT() {
        return constants$630.X509_MULTI_BYTE_UINT$ADDR;
    }
    public static MemoryAddress X509_DSS_PUBLICKEY() {
        return constants$631.X509_DSS_PUBLICKEY$ADDR;
    }
    public static MemoryAddress X509_DSS_PARAMETERS() {
        return constants$631.X509_DSS_PARAMETERS$ADDR;
    }
    public static MemoryAddress X509_DSS_SIGNATURE() {
        return constants$631.X509_DSS_SIGNATURE$ADDR;
    }
    public static MemoryAddress PKCS_RC2_CBC_PARAMETERS() {
        return constants$631.PKCS_RC2_CBC_PARAMETERS$ADDR;
    }
    public static MemoryAddress PKCS_SMIME_CAPABILITIES() {
        return constants$631.PKCS_SMIME_CAPABILITIES$ADDR;
    }
    public static MemoryAddress X509_QC_STATEMENTS_EXT() {
        return constants$631.X509_QC_STATEMENTS_EXT$ADDR;
    }
    public static MemoryAddress PKCS_RSA_PRIVATE_KEY() {
        return constants$632.PKCS_RSA_PRIVATE_KEY$ADDR;
    }
    public static MemoryAddress PKCS_PRIVATE_KEY_INFO() {
        return constants$632.PKCS_PRIVATE_KEY_INFO$ADDR;
    }
    public static MemoryAddress PKCS_ENCRYPTED_PRIVATE_KEY_INFO() {
        return constants$632.PKCS_ENCRYPTED_PRIVATE_KEY_INFO$ADDR;
    }
    public static MemoryAddress X509_PKIX_POLICY_QUALIFIER_USERNOTICE() {
        return constants$632.X509_PKIX_POLICY_QUALIFIER_USERNOTICE$ADDR;
    }
    public static MemoryAddress X509_DH_PUBLICKEY() {
        return constants$632.X509_DH_PUBLICKEY$ADDR;
    }
    public static MemoryAddress X509_DH_PARAMETERS() {
        return constants$632.X509_DH_PARAMETERS$ADDR;
    }
    public static MemoryAddress PKCS_ATTRIBUTES() {
        return constants$633.PKCS_ATTRIBUTES$ADDR;
    }
    public static MemoryAddress PKCS_SORTED_CTL() {
        return constants$633.PKCS_SORTED_CTL$ADDR;
    }
    public static MemoryAddress X509_ECC_SIGNATURE() {
        return constants$633.X509_ECC_SIGNATURE$ADDR;
    }
    public static MemoryAddress X942_DH_PARAMETERS() {
        return constants$633.X942_DH_PARAMETERS$ADDR;
    }
    public static MemoryAddress X509_BITS_WITHOUT_TRAILING_ZEROES() {
        return constants$633.X509_BITS_WITHOUT_TRAILING_ZEROES$ADDR;
    }
    public static MemoryAddress X942_OTHER_INFO() {
        return constants$633.X942_OTHER_INFO$ADDR;
    }
    public static MemoryAddress X509_CERT_PAIR() {
        return constants$634.X509_CERT_PAIR$ADDR;
    }
    public static MemoryAddress X509_ISSUING_DIST_POINT() {
        return constants$634.X509_ISSUING_DIST_POINT$ADDR;
    }
    public static MemoryAddress X509_NAME_CONSTRAINTS() {
        return constants$634.X509_NAME_CONSTRAINTS$ADDR;
    }
    public static MemoryAddress X509_POLICY_MAPPINGS() {
        return constants$634.X509_POLICY_MAPPINGS$ADDR;
    }
    public static MemoryAddress X509_POLICY_CONSTRAINTS() {
        return constants$634.X509_POLICY_CONSTRAINTS$ADDR;
    }
    public static MemoryAddress X509_CROSS_CERT_DIST_POINTS() {
        return constants$634.X509_CROSS_CERT_DIST_POINTS$ADDR;
    }
    public static MemoryAddress CMC_DATA() {
        return constants$635.CMC_DATA$ADDR;
    }
    public static MemoryAddress CMC_RESPONSE() {
        return constants$635.CMC_RESPONSE$ADDR;
    }
    public static MemoryAddress CMC_STATUS() {
        return constants$635.CMC_STATUS$ADDR;
    }
    public static MemoryAddress CMC_ADD_EXTENSIONS() {
        return constants$635.CMC_ADD_EXTENSIONS$ADDR;
    }
    public static MemoryAddress CMC_ADD_ATTRIBUTES() {
        return constants$635.CMC_ADD_ATTRIBUTES$ADDR;
    }
    public static MemoryAddress X509_CERTIFICATE_TEMPLATE() {
        return constants$635.X509_CERTIFICATE_TEMPLATE$ADDR;
    }
    public static MemoryAddress OCSP_SIGNED_REQUEST() {
        return constants$636.OCSP_SIGNED_REQUEST$ADDR;
    }
    public static MemoryAddress OCSP_REQUEST() {
        return constants$636.OCSP_REQUEST$ADDR;
    }
    public static MemoryAddress OCSP_RESPONSE() {
        return constants$636.OCSP_RESPONSE$ADDR;
    }
    public static MemoryAddress OCSP_BASIC_SIGNED_RESPONSE() {
        return constants$636.OCSP_BASIC_SIGNED_RESPONSE$ADDR;
    }
    public static MemoryAddress OCSP_BASIC_RESPONSE() {
        return constants$636.OCSP_BASIC_RESPONSE$ADDR;
    }
    public static MemoryAddress X509_LOGOTYPE_EXT() {
        return constants$636.X509_LOGOTYPE_EXT$ADDR;
    }
    public static MemoryAddress X509_BIOMETRIC_EXT() {
        return constants$637.X509_BIOMETRIC_EXT$ADDR;
    }
    public static MemoryAddress CNG_RSA_PUBLIC_KEY_BLOB() {
        return constants$637.CNG_RSA_PUBLIC_KEY_BLOB$ADDR;
    }
    public static MemoryAddress X509_OBJECT_IDENTIFIER() {
        return constants$637.X509_OBJECT_IDENTIFIER$ADDR;
    }
    public static MemoryAddress X509_ALGORITHM_IDENTIFIER() {
        return constants$637.X509_ALGORITHM_IDENTIFIER$ADDR;
    }
    public static MemoryAddress PKCS_RSA_SSA_PSS_PARAMETERS() {
        return constants$637.PKCS_RSA_SSA_PSS_PARAMETERS$ADDR;
    }
    public static MemoryAddress PKCS_RSAES_OAEP_PARAMETERS() {
        return constants$637.PKCS_RSAES_OAEP_PARAMETERS$ADDR;
    }
    public static MemoryAddress ECC_CMS_SHARED_INFO() {
        return constants$638.ECC_CMS_SHARED_INFO$ADDR;
    }
    public static MemoryAddress TIMESTAMP_REQUEST() {
        return constants$638.TIMESTAMP_REQUEST$ADDR;
    }
    public static MemoryAddress TIMESTAMP_RESPONSE() {
        return constants$638.TIMESTAMP_RESPONSE$ADDR;
    }
    public static MemoryAddress TIMESTAMP_INFO() {
        return constants$638.TIMESTAMP_INFO$ADDR;
    }
    public static MemoryAddress X509_CERT_BUNDLE() {
        return constants$638.X509_CERT_BUNDLE$ADDR;
    }
    public static MemoryAddress X509_ECC_PRIVATE_KEY() {
        return constants$638.X509_ECC_PRIVATE_KEY$ADDR;
    }
    public static MemoryAddress CNG_RSA_PRIVATE_KEY_BLOB() {
        return constants$639.CNG_RSA_PRIVATE_KEY_BLOB$ADDR;
    }
    public static MemoryAddress X509_SUBJECT_DIR_ATTRS() {
        return constants$639.X509_SUBJECT_DIR_ATTRS$ADDR;
    }
    public static MemoryAddress X509_ECC_PARAMETERS() {
        return constants$639.X509_ECC_PARAMETERS$ADDR;
    }
    public static MemoryAddress PKCS7_SIGNER_INFO() {
        return constants$639.PKCS7_SIGNER_INFO$ADDR;
    }
    public static MemoryAddress CMS_SIGNER_INFO() {
        return constants$639.CMS_SIGNER_INFO$ADDR;
    }
    public static MemorySegment szOID_AUTHORITY_KEY_IDENTIFIER() {
        return constants$639.szOID_AUTHORITY_KEY_IDENTIFIER$SEGMENT;
    }
    public static MemorySegment szOID_KEY_ATTRIBUTES() {
        return constants$640.szOID_KEY_ATTRIBUTES$SEGMENT;
    }
    public static MemorySegment szOID_CERT_POLICIES_95() {
        return constants$640.szOID_CERT_POLICIES_95$SEGMENT;
    }
    public static MemorySegment szOID_KEY_USAGE_RESTRICTION() {
        return constants$640.szOID_KEY_USAGE_RESTRICTION$SEGMENT;
    }
    public static MemorySegment szOID_SUBJECT_ALT_NAME() {
        return constants$640.szOID_SUBJECT_ALT_NAME$SEGMENT;
    }
    public static MemorySegment szOID_ISSUER_ALT_NAME() {
        return constants$640.szOID_ISSUER_ALT_NAME$SEGMENT;
    }
    public static MemorySegment szOID_BASIC_CONSTRAINTS() {
        return constants$640.szOID_BASIC_CONSTRAINTS$SEGMENT;
    }
    public static MemorySegment szOID_KEY_USAGE() {
        return constants$641.szOID_KEY_USAGE$SEGMENT;
    }
    public static MemorySegment szOID_PRIVATEKEY_USAGE_PERIOD() {
        return constants$641.szOID_PRIVATEKEY_USAGE_PERIOD$SEGMENT;
    }
    public static MemorySegment szOID_BASIC_CONSTRAINTS2() {
        return constants$641.szOID_BASIC_CONSTRAINTS2$SEGMENT;
    }
    public static MemorySegment szOID_CERT_POLICIES() {
        return constants$641.szOID_CERT_POLICIES$SEGMENT;
    }
    public static MemorySegment szOID_ANY_CERT_POLICY() {
        return constants$641.szOID_ANY_CERT_POLICY$SEGMENT;
    }
    public static MemorySegment szOID_INHIBIT_ANY_POLICY() {
        return constants$641.szOID_INHIBIT_ANY_POLICY$SEGMENT;
    }
    public static MemorySegment szOID_AUTHORITY_KEY_IDENTIFIER2() {
        return constants$642.szOID_AUTHORITY_KEY_IDENTIFIER2$SEGMENT;
    }
    public static MemorySegment szOID_SUBJECT_KEY_IDENTIFIER() {
        return constants$642.szOID_SUBJECT_KEY_IDENTIFIER$SEGMENT;
    }
    public static MemorySegment szOID_SUBJECT_ALT_NAME2() {
        return constants$642.szOID_SUBJECT_ALT_NAME2$SEGMENT;
    }
    public static MemorySegment szOID_ISSUER_ALT_NAME2() {
        return constants$642.szOID_ISSUER_ALT_NAME2$SEGMENT;
    }
    public static MemorySegment szOID_CRL_REASON_CODE() {
        return constants$642.szOID_CRL_REASON_CODE$SEGMENT;
    }
    public static MemorySegment szOID_REASON_CODE_HOLD() {
        return constants$642.szOID_REASON_CODE_HOLD$SEGMENT;
    }
    public static MemorySegment szOID_CRL_DIST_POINTS() {
        return constants$643.szOID_CRL_DIST_POINTS$SEGMENT;
    }
    public static MemorySegment szOID_ENHANCED_KEY_USAGE() {
        return constants$643.szOID_ENHANCED_KEY_USAGE$SEGMENT;
    }
    public static MemorySegment szOID_ANY_ENHANCED_KEY_USAGE() {
        return constants$643.szOID_ANY_ENHANCED_KEY_USAGE$SEGMENT;
    }
    public static MemorySegment szOID_CRL_NUMBER() {
        return constants$643.szOID_CRL_NUMBER$SEGMENT;
    }
    public static MemorySegment szOID_DELTA_CRL_INDICATOR() {
        return constants$643.szOID_DELTA_CRL_INDICATOR$SEGMENT;
    }
    public static MemorySegment szOID_ISSUING_DIST_POINT() {
        return constants$643.szOID_ISSUING_DIST_POINT$SEGMENT;
    }
    public static MemorySegment szOID_FRESHEST_CRL() {
        return constants$644.szOID_FRESHEST_CRL$SEGMENT;
    }
    public static MemorySegment szOID_NAME_CONSTRAINTS() {
        return constants$644.szOID_NAME_CONSTRAINTS$SEGMENT;
    }
    public static MemorySegment szOID_POLICY_MAPPINGS() {
        return constants$644.szOID_POLICY_MAPPINGS$SEGMENT;
    }
    public static MemorySegment szOID_LEGACY_POLICY_MAPPINGS() {
        return constants$644.szOID_LEGACY_POLICY_MAPPINGS$SEGMENT;
    }
    public static MemorySegment szOID_POLICY_CONSTRAINTS() {
        return constants$644.szOID_POLICY_CONSTRAINTS$SEGMENT;
    }
    public static MemorySegment szOID_RENEWAL_CERTIFICATE() {
        return constants$644.szOID_RENEWAL_CERTIFICATE$SEGMENT;
    }
    public static MemorySegment szOID_ENROLLMENT_NAME_VALUE_PAIR() {
        return constants$645.szOID_ENROLLMENT_NAME_VALUE_PAIR$SEGMENT;
    }
    public static MemorySegment szOID_ENROLLMENT_CSP_PROVIDER() {
        return constants$645.szOID_ENROLLMENT_CSP_PROVIDER$SEGMENT;
    }
    public static MemorySegment szOID_OS_VERSION() {
        return constants$645.szOID_OS_VERSION$SEGMENT;
    }
    public static MemorySegment szOID_ENROLLMENT_AGENT() {
        return constants$645.szOID_ENROLLMENT_AGENT$SEGMENT;
    }
    public static MemorySegment szOID_PKIX() {
        return constants$645.szOID_PKIX$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_PE() {
        return constants$645.szOID_PKIX_PE$SEGMENT;
    }
    public static MemorySegment szOID_AUTHORITY_INFO_ACCESS() {
        return constants$646.szOID_AUTHORITY_INFO_ACCESS$SEGMENT;
    }
    public static MemorySegment szOID_SUBJECT_INFO_ACCESS() {
        return constants$646.szOID_SUBJECT_INFO_ACCESS$SEGMENT;
    }
    public static MemorySegment szOID_BIOMETRIC_EXT() {
        return constants$646.szOID_BIOMETRIC_EXT$SEGMENT;
    }
    public static MemorySegment szOID_QC_STATEMENTS_EXT() {
        return constants$646.szOID_QC_STATEMENTS_EXT$SEGMENT;
    }
    public static MemorySegment szOID_LOGOTYPE_EXT() {
        return constants$646.szOID_LOGOTYPE_EXT$SEGMENT;
    }
    public static MemorySegment szOID_TLS_FEATURES_EXT() {
        return constants$646.szOID_TLS_FEATURES_EXT$SEGMENT;
    }
    public static MemorySegment szOID_CERT_EXTENSIONS() {
        return constants$647.szOID_CERT_EXTENSIONS$SEGMENT;
    }
    public static MemorySegment szOID_NEXT_UPDATE_LOCATION() {
        return constants$647.szOID_NEXT_UPDATE_LOCATION$SEGMENT;
    }
    public static MemorySegment szOID_REMOVE_CERTIFICATE() {
        return constants$647.szOID_REMOVE_CERTIFICATE$SEGMENT;
    }
    public static MemorySegment szOID_CROSS_CERT_DIST_POINTS() {
        return constants$647.szOID_CROSS_CERT_DIST_POINTS$SEGMENT;
    }
    public static MemorySegment szOID_CTL() {
        return constants$647.szOID_CTL$SEGMENT;
    }
    public static MemorySegment szOID_SORTED_CTL() {
        return constants$647.szOID_SORTED_CTL$SEGMENT;
    }
    public static MemorySegment szOID_SERIALIZED() {
        return constants$648.szOID_SERIALIZED$SEGMENT;
    }
    public static MemorySegment szOID_NT_PRINCIPAL_NAME() {
        return constants$648.szOID_NT_PRINCIPAL_NAME$SEGMENT;
    }
    public static MemorySegment szOID_INTERNATIONALIZED_EMAIL_ADDRESS() {
        return constants$648.szOID_INTERNATIONALIZED_EMAIL_ADDRESS$SEGMENT;
    }
    public static MemorySegment szOID_PRODUCT_UPDATE() {
        return constants$648.szOID_PRODUCT_UPDATE$SEGMENT;
    }
    public static MemorySegment szOID_ANY_APPLICATION_POLICY() {
        return constants$648.szOID_ANY_APPLICATION_POLICY$SEGMENT;
    }
    public static MemorySegment szOID_AUTO_ENROLL_CTL_USAGE() {
        return constants$648.szOID_AUTO_ENROLL_CTL_USAGE$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_CERTTYPE_EXTENSION() {
        return constants$649.szOID_ENROLL_CERTTYPE_EXTENSION$SEGMENT;
    }
    public static MemorySegment szOID_CERT_MANIFOLD() {
        return constants$649.szOID_CERT_MANIFOLD$SEGMENT;
    }
    public static MemorySegment szOID_CERTSRV_CA_VERSION() {
        return constants$649.szOID_CERTSRV_CA_VERSION$SEGMENT;
    }
    public static MemorySegment szOID_CERTSRV_PREVIOUS_CERT_HASH() {
        return constants$649.szOID_CERTSRV_PREVIOUS_CERT_HASH$SEGMENT;
    }
    public static MemorySegment szOID_CRL_VIRTUAL_BASE() {
        return constants$649.szOID_CRL_VIRTUAL_BASE$SEGMENT;
    }
    public static MemorySegment szOID_CRL_NEXT_PUBLISH() {
        return constants$649.szOID_CRL_NEXT_PUBLISH$SEGMENT;
    }
    public static MemorySegment szOID_KP_CA_EXCHANGE() {
        return constants$650.szOID_KP_CA_EXCHANGE$SEGMENT;
    }
    public static MemorySegment szOID_KP_PRIVACY_CA() {
        return constants$650.szOID_KP_PRIVACY_CA$SEGMENT;
    }
    public static MemorySegment szOID_KP_KEY_RECOVERY_AGENT() {
        return constants$650.szOID_KP_KEY_RECOVERY_AGENT$SEGMENT;
    }
    public static MemorySegment szOID_CERTIFICATE_TEMPLATE() {
        return constants$650.szOID_CERTIFICATE_TEMPLATE$SEGMENT;
    }
    public static MemorySegment szOID_ENTERPRISE_OID_ROOT() {
        return constants$650.szOID_ENTERPRISE_OID_ROOT$SEGMENT;
    }
}



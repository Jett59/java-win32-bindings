// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$166 {

    static final FunctionDescriptor InitializeSecurityDescriptor$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle InitializeSecurityDescriptor$MH = RuntimeHelper.downcallHandle(
        "InitializeSecurityDescriptor",
        constants$166.InitializeSecurityDescriptor$FUNC
    );
    static final FunctionDescriptor InitializeSid$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_CHAR$LAYOUT
    );
    static final MethodHandle InitializeSid$MH = RuntimeHelper.downcallHandle(
        "InitializeSid",
        constants$166.InitializeSid$FUNC
    );
    static final FunctionDescriptor IsTokenRestricted$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle IsTokenRestricted$MH = RuntimeHelper.downcallHandle(
        "IsTokenRestricted",
        constants$166.IsTokenRestricted$FUNC
    );
    static final FunctionDescriptor IsValidAcl$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle IsValidAcl$MH = RuntimeHelper.downcallHandle(
        "IsValidAcl",
        constants$166.IsValidAcl$FUNC
    );
    static final FunctionDescriptor IsValidSecurityDescriptor$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle IsValidSecurityDescriptor$MH = RuntimeHelper.downcallHandle(
        "IsValidSecurityDescriptor",
        constants$166.IsValidSecurityDescriptor$FUNC
    );
    static final FunctionDescriptor IsValidSid$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle IsValidSid$MH = RuntimeHelper.downcallHandle(
        "IsValidSid",
        constants$166.IsValidSid$FUNC
    );
}



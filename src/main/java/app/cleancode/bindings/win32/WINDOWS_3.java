// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class WINDOWS_3 extends WINDOWS_2 {

    public static int OBJ_ENHMETADC() {
        return (int)12L;
    }
    public static int OBJ_ENHMETAFILE() {
        return (int)13L;
    }
    public static int OBJ_COLORSPACE() {
        return (int)14L;
    }
    public static int MWT_IDENTITY() {
        return (int)1L;
    }
    public static int MWT_LEFTMULTIPLY() {
        return (int)2L;
    }
    public static int MWT_RIGHTMULTIPLY() {
        return (int)3L;
    }
    public static int CM_OUT_OF_GAMUT() {
        return (int)255L;
    }
    public static int CM_IN_GAMUT() {
        return (int)0L;
    }
    public static int ICM_ADDPROFILE() {
        return (int)1L;
    }
    public static int ICM_DELETEPROFILE() {
        return (int)2L;
    }
    public static int ICM_QUERYPROFILE() {
        return (int)3L;
    }
    public static int ICM_SETDEFAULTPROFILE() {
        return (int)4L;
    }
    public static int ICM_REGISTERICMATCHER() {
        return (int)5L;
    }
    public static int ICM_UNREGISTERICMATCHER() {
        return (int)6L;
    }
    public static int ICM_QUERYMATCH() {
        return (int)7L;
    }
    public static int TCI_SRCCHARSET() {
        return (int)1L;
    }
    public static int TCI_SRCCODEPAGE() {
        return (int)2L;
    }
    public static int TCI_SRCFONTSIG() {
        return (int)3L;
    }
    public static int TCI_SRCLOCALE() {
        return (int)4096L;
    }
    public static int TMPF_FIXED_PITCH() {
        return (int)1L;
    }
    public static int TMPF_VECTOR() {
        return (int)2L;
    }
    public static int TMPF_DEVICE() {
        return (int)8L;
    }
    public static int TMPF_TRUETYPE() {
        return (int)4L;
    }
    public static int NTM_NONNEGATIVE_AC() {
        return (int)65536L;
    }
    public static int NTM_PS_OPENTYPE() {
        return (int)131072L;
    }
    public static int NTM_TT_OPENTYPE() {
        return (int)262144L;
    }
    public static int NTM_MULTIPLEMASTER() {
        return (int)524288L;
    }
    public static int NTM_TYPE1() {
        return (int)1048576L;
    }
    public static int NTM_DSIG() {
        return (int)2097152L;
    }
    public static int LF_FACESIZE() {
        return (int)32L;
    }
    public static int LF_FULLFACESIZE() {
        return (int)64L;
    }
    public static int OUT_DEFAULT_PRECIS() {
        return (int)0L;
    }
    public static int OUT_STRING_PRECIS() {
        return (int)1L;
    }
    public static int OUT_CHARACTER_PRECIS() {
        return (int)2L;
    }
    public static int OUT_STROKE_PRECIS() {
        return (int)3L;
    }
    public static int OUT_TT_PRECIS() {
        return (int)4L;
    }
    public static int OUT_DEVICE_PRECIS() {
        return (int)5L;
    }
    public static int OUT_RASTER_PRECIS() {
        return (int)6L;
    }
    public static int OUT_TT_ONLY_PRECIS() {
        return (int)7L;
    }
    public static int OUT_OUTLINE_PRECIS() {
        return (int)8L;
    }
    public static int OUT_SCREEN_OUTLINE_PRECIS() {
        return (int)9L;
    }
    public static int OUT_PS_ONLY_PRECIS() {
        return (int)10L;
    }
    public static int CLIP_DEFAULT_PRECIS() {
        return (int)0L;
    }
    public static int CLIP_CHARACTER_PRECIS() {
        return (int)1L;
    }
    public static int CLIP_STROKE_PRECIS() {
        return (int)2L;
    }
    public static int CLIP_MASK() {
        return (int)15L;
    }
    public static int DEFAULT_QUALITY() {
        return (int)0L;
    }
    public static int DRAFT_QUALITY() {
        return (int)1L;
    }
    public static int PROOF_QUALITY() {
        return (int)2L;
    }
    public static int NONANTIALIASED_QUALITY() {
        return (int)3L;
    }
    public static int ANTIALIASED_QUALITY() {
        return (int)4L;
    }
    public static int CLEARTYPE_QUALITY() {
        return (int)5L;
    }
    public static int CLEARTYPE_NATURAL_QUALITY() {
        return (int)6L;
    }
    public static int DEFAULT_PITCH() {
        return (int)0L;
    }
    public static int FIXED_PITCH() {
        return (int)1L;
    }
    public static int VARIABLE_PITCH() {
        return (int)2L;
    }
    public static int MONO_FONT() {
        return (int)8L;
    }
    public static int ANSI_CHARSET() {
        return (int)0L;
    }
    public static int DEFAULT_CHARSET() {
        return (int)1L;
    }
    public static int SYMBOL_CHARSET() {
        return (int)2L;
    }
    public static int SHIFTJIS_CHARSET() {
        return (int)128L;
    }
    public static int HANGEUL_CHARSET() {
        return (int)129L;
    }
    public static int HANGUL_CHARSET() {
        return (int)129L;
    }
    public static int GB2312_CHARSET() {
        return (int)134L;
    }
    public static int CHINESEBIG5_CHARSET() {
        return (int)136L;
    }
    public static int OEM_CHARSET() {
        return (int)255L;
    }
    public static int JOHAB_CHARSET() {
        return (int)130L;
    }
    public static int HEBREW_CHARSET() {
        return (int)177L;
    }
    public static int ARABIC_CHARSET() {
        return (int)178L;
    }
    public static int GREEK_CHARSET() {
        return (int)161L;
    }
    public static int TURKISH_CHARSET() {
        return (int)162L;
    }
    public static int VIETNAMESE_CHARSET() {
        return (int)163L;
    }
    public static int THAI_CHARSET() {
        return (int)222L;
    }
    public static int EASTEUROPE_CHARSET() {
        return (int)238L;
    }
    public static int RUSSIAN_CHARSET() {
        return (int)204L;
    }
    public static int MAC_CHARSET() {
        return (int)77L;
    }
    public static int BALTIC_CHARSET() {
        return (int)186L;
    }
    public static int FW_DONTCARE() {
        return (int)0L;
    }
    public static int FW_THIN() {
        return (int)100L;
    }
    public static int FW_EXTRALIGHT() {
        return (int)200L;
    }
    public static int FW_LIGHT() {
        return (int)300L;
    }
    public static int FW_NORMAL() {
        return (int)400L;
    }
    public static int FW_MEDIUM() {
        return (int)500L;
    }
    public static int FW_SEMIBOLD() {
        return (int)600L;
    }
    public static int FW_BOLD() {
        return (int)700L;
    }
    public static int FW_EXTRABOLD() {
        return (int)800L;
    }
    public static int FW_HEAVY() {
        return (int)900L;
    }
    public static int PANOSE_COUNT() {
        return (int)10L;
    }
    public static int PAN_FAMILYTYPE_INDEX() {
        return (int)0L;
    }
    public static int PAN_SERIFSTYLE_INDEX() {
        return (int)1L;
    }
    public static int PAN_WEIGHT_INDEX() {
        return (int)2L;
    }
    public static int PAN_PROPORTION_INDEX() {
        return (int)3L;
    }
    public static int PAN_CONTRAST_INDEX() {
        return (int)4L;
    }
    public static int PAN_STROKEVARIATION_INDEX() {
        return (int)5L;
    }
    public static int PAN_ARMSTYLE_INDEX() {
        return (int)6L;
    }
    public static int PAN_LETTERFORM_INDEX() {
        return (int)7L;
    }
    public static int PAN_MIDLINE_INDEX() {
        return (int)8L;
    }
    public static int PAN_XHEIGHT_INDEX() {
        return (int)9L;
    }
    public static int PAN_CULTURE_LATIN() {
        return (int)0L;
    }
    public static int PAN_ANY() {
        return (int)0L;
    }
    public static int PAN_NO_FIT() {
        return (int)1L;
    }
    public static int PAN_FAMILY_TEXT_DISPLAY() {
        return (int)2L;
    }
    public static int PAN_FAMILY_SCRIPT() {
        return (int)3L;
    }
    public static int PAN_FAMILY_DECORATIVE() {
        return (int)4L;
    }
    public static int PAN_FAMILY_PICTORIAL() {
        return (int)5L;
    }
    public static int PAN_SERIF_COVE() {
        return (int)2L;
    }
    public static int PAN_SERIF_OBTUSE_COVE() {
        return (int)3L;
    }
    public static int PAN_SERIF_SQUARE_COVE() {
        return (int)4L;
    }
    public static int PAN_SERIF_OBTUSE_SQUARE_COVE() {
        return (int)5L;
    }
    public static int PAN_SERIF_SQUARE() {
        return (int)6L;
    }
    public static int PAN_SERIF_THIN() {
        return (int)7L;
    }
    public static int PAN_SERIF_BONE() {
        return (int)8L;
    }
    public static int PAN_SERIF_EXAGGERATED() {
        return (int)9L;
    }
    public static int PAN_SERIF_TRIANGLE() {
        return (int)10L;
    }
    public static int PAN_SERIF_NORMAL_SANS() {
        return (int)11L;
    }
    public static int PAN_SERIF_OBTUSE_SANS() {
        return (int)12L;
    }
    public static int PAN_SERIF_PERP_SANS() {
        return (int)13L;
    }
    public static int PAN_SERIF_FLARED() {
        return (int)14L;
    }
    public static int PAN_SERIF_ROUNDED() {
        return (int)15L;
    }
    public static int PAN_WEIGHT_VERY_LIGHT() {
        return (int)2L;
    }
    public static int PAN_WEIGHT_LIGHT() {
        return (int)3L;
    }
    public static int PAN_WEIGHT_THIN() {
        return (int)4L;
    }
    public static int PAN_WEIGHT_BOOK() {
        return (int)5L;
    }
    public static int PAN_WEIGHT_MEDIUM() {
        return (int)6L;
    }
    public static int PAN_WEIGHT_DEMI() {
        return (int)7L;
    }
    public static int PAN_WEIGHT_BOLD() {
        return (int)8L;
    }
    public static int PAN_WEIGHT_HEAVY() {
        return (int)9L;
    }
    public static int PAN_WEIGHT_BLACK() {
        return (int)10L;
    }
    public static int PAN_WEIGHT_NORD() {
        return (int)11L;
    }
    public static int PAN_PROP_OLD_STYLE() {
        return (int)2L;
    }
    public static int PAN_PROP_MODERN() {
        return (int)3L;
    }
    public static int PAN_PROP_EVEN_WIDTH() {
        return (int)4L;
    }
    public static int PAN_PROP_EXPANDED() {
        return (int)5L;
    }
    public static int PAN_PROP_CONDENSED() {
        return (int)6L;
    }
    public static int PAN_PROP_VERY_EXPANDED() {
        return (int)7L;
    }
    public static int PAN_PROP_VERY_CONDENSED() {
        return (int)8L;
    }
    public static int PAN_PROP_MONOSPACED() {
        return (int)9L;
    }
    public static int PAN_CONTRAST_NONE() {
        return (int)2L;
    }
    public static int PAN_CONTRAST_VERY_LOW() {
        return (int)3L;
    }
    public static int PAN_CONTRAST_LOW() {
        return (int)4L;
    }
    public static int PAN_CONTRAST_MEDIUM_LOW() {
        return (int)5L;
    }
    public static int PAN_CONTRAST_MEDIUM() {
        return (int)6L;
    }
    public static int PAN_CONTRAST_MEDIUM_HIGH() {
        return (int)7L;
    }
    public static int PAN_CONTRAST_HIGH() {
        return (int)8L;
    }
    public static int PAN_CONTRAST_VERY_HIGH() {
        return (int)9L;
    }
    public static int PAN_STROKE_GRADUAL_DIAG() {
        return (int)2L;
    }
    public static int PAN_STROKE_GRADUAL_TRAN() {
        return (int)3L;
    }
    public static int PAN_STROKE_GRADUAL_VERT() {
        return (int)4L;
    }
    public static int PAN_STROKE_GRADUAL_HORZ() {
        return (int)5L;
    }
    public static int PAN_STROKE_RAPID_VERT() {
        return (int)6L;
    }
    public static int PAN_STROKE_RAPID_HORZ() {
        return (int)7L;
    }
    public static int PAN_STROKE_INSTANT_VERT() {
        return (int)8L;
    }
    public static int PAN_STRAIGHT_ARMS_HORZ() {
        return (int)2L;
    }
    public static int PAN_STRAIGHT_ARMS_WEDGE() {
        return (int)3L;
    }
    public static int PAN_STRAIGHT_ARMS_VERT() {
        return (int)4L;
    }
    public static int PAN_STRAIGHT_ARMS_SINGLE_SERIF() {
        return (int)5L;
    }
    public static int PAN_STRAIGHT_ARMS_DOUBLE_SERIF() {
        return (int)6L;
    }
    public static int PAN_BENT_ARMS_HORZ() {
        return (int)7L;
    }
    public static int PAN_BENT_ARMS_WEDGE() {
        return (int)8L;
    }
    public static int PAN_BENT_ARMS_VERT() {
        return (int)9L;
    }
    public static int PAN_BENT_ARMS_SINGLE_SERIF() {
        return (int)10L;
    }
    public static int PAN_BENT_ARMS_DOUBLE_SERIF() {
        return (int)11L;
    }
    public static int PAN_LETT_NORMAL_CONTACT() {
        return (int)2L;
    }
    public static int PAN_LETT_NORMAL_WEIGHTED() {
        return (int)3L;
    }
    public static int PAN_LETT_NORMAL_BOXED() {
        return (int)4L;
    }
    public static int PAN_LETT_NORMAL_FLATTENED() {
        return (int)5L;
    }
    public static int PAN_LETT_NORMAL_ROUNDED() {
        return (int)6L;
    }
    public static int PAN_LETT_NORMAL_OFF_CENTER() {
        return (int)7L;
    }
    public static int PAN_LETT_NORMAL_SQUARE() {
        return (int)8L;
    }
    public static int PAN_LETT_OBLIQUE_CONTACT() {
        return (int)9L;
    }
    public static int PAN_LETT_OBLIQUE_WEIGHTED() {
        return (int)10L;
    }
    public static int PAN_LETT_OBLIQUE_BOXED() {
        return (int)11L;
    }
    public static int PAN_LETT_OBLIQUE_FLATTENED() {
        return (int)12L;
    }
    public static int PAN_LETT_OBLIQUE_ROUNDED() {
        return (int)13L;
    }
    public static int PAN_LETT_OBLIQUE_OFF_CENTER() {
        return (int)14L;
    }
    public static int PAN_LETT_OBLIQUE_SQUARE() {
        return (int)15L;
    }
    public static int PAN_MIDLINE_STANDARD_TRIMMED() {
        return (int)2L;
    }
    public static int PAN_MIDLINE_STANDARD_POINTED() {
        return (int)3L;
    }
    public static int PAN_MIDLINE_STANDARD_SERIFED() {
        return (int)4L;
    }
    public static int PAN_MIDLINE_HIGH_TRIMMED() {
        return (int)5L;
    }
    public static int PAN_MIDLINE_HIGH_POINTED() {
        return (int)6L;
    }
    public static int PAN_MIDLINE_HIGH_SERIFED() {
        return (int)7L;
    }
    public static int PAN_MIDLINE_CONSTANT_TRIMMED() {
        return (int)8L;
    }
    public static int PAN_MIDLINE_CONSTANT_POINTED() {
        return (int)9L;
    }
    public static int PAN_MIDLINE_CONSTANT_SERIFED() {
        return (int)10L;
    }
    public static int PAN_MIDLINE_LOW_TRIMMED() {
        return (int)11L;
    }
    public static int PAN_MIDLINE_LOW_POINTED() {
        return (int)12L;
    }
    public static int PAN_MIDLINE_LOW_SERIFED() {
        return (int)13L;
    }
    public static int PAN_XHEIGHT_CONSTANT_SMALL() {
        return (int)2L;
    }
    public static int PAN_XHEIGHT_CONSTANT_STD() {
        return (int)3L;
    }
    public static int PAN_XHEIGHT_CONSTANT_LARGE() {
        return (int)4L;
    }
    public static int PAN_XHEIGHT_DUCKING_SMALL() {
        return (int)5L;
    }
    public static int PAN_XHEIGHT_DUCKING_STD() {
        return (int)6L;
    }
    public static int PAN_XHEIGHT_DUCKING_LARGE() {
        return (int)7L;
    }
    public static int ELF_VENDOR_SIZE() {
        return (int)4L;
    }
    public static int ELF_VERSION() {
        return (int)0L;
    }
    public static int ELF_CULTURE_LATIN() {
        return (int)0L;
    }
    public static int RASTER_FONTTYPE() {
        return (int)1L;
    }
    public static int DEVICE_FONTTYPE() {
        return (int)2L;
    }
    public static int TRUETYPE_FONTTYPE() {
        return (int)4L;
    }
    public static int PC_RESERVED() {
        return (int)1L;
    }
    public static int PC_EXPLICIT() {
        return (int)2L;
    }
    public static int PC_NOCOLLAPSE() {
        return (int)4L;
    }
    public static int TRANSPARENT() {
        return (int)1L;
    }
    public static int OPAQUE() {
        return (int)2L;
    }
    public static int BKMODE_LAST() {
        return (int)2L;
    }
    public static int GM_COMPATIBLE() {
        return (int)1L;
    }
    public static int GM_ADVANCED() {
        return (int)2L;
    }
    public static int GM_LAST() {
        return (int)2L;
    }
    public static int PT_CLOSEFIGURE() {
        return (int)1L;
    }
    public static int PT_LINETO() {
        return (int)2L;
    }
    public static int PT_BEZIERTO() {
        return (int)4L;
    }
    public static int PT_MOVETO() {
        return (int)6L;
    }
    public static int MM_TEXT() {
        return (int)1L;
    }
    public static int MM_LOMETRIC() {
        return (int)2L;
    }
    public static int MM_HIMETRIC() {
        return (int)3L;
    }
    public static int MM_LOENGLISH() {
        return (int)4L;
    }
    public static int MM_HIENGLISH() {
        return (int)5L;
    }
    public static int MM_TWIPS() {
        return (int)6L;
    }
    public static int MM_ISOTROPIC() {
        return (int)7L;
    }
    public static int MM_ANISOTROPIC() {
        return (int)8L;
    }
    public static int ABSOLUTE() {
        return (int)1L;
    }
    public static int RELATIVE() {
        return (int)2L;
    }
    public static int WHITE_BRUSH() {
        return (int)0L;
    }
    public static int LTGRAY_BRUSH() {
        return (int)1L;
    }
    public static int GRAY_BRUSH() {
        return (int)2L;
    }
    public static int DKGRAY_BRUSH() {
        return (int)3L;
    }
    public static int BLACK_BRUSH() {
        return (int)4L;
    }
    public static int NULL_BRUSH() {
        return (int)5L;
    }
    public static int WHITE_PEN() {
        return (int)6L;
    }
    public static int BLACK_PEN() {
        return (int)7L;
    }
    public static int NULL_PEN() {
        return (int)8L;
    }
    public static int OEM_FIXED_FONT() {
        return (int)10L;
    }
    public static int ANSI_FIXED_FONT() {
        return (int)11L;
    }
    public static int ANSI_VAR_FONT() {
        return (int)12L;
    }
    public static int SYSTEM_FONT() {
        return (int)13L;
    }
    public static int DEVICE_DEFAULT_FONT() {
        return (int)14L;
    }
    public static int DEFAULT_PALETTE() {
        return (int)15L;
    }
    public static int SYSTEM_FIXED_FONT() {
        return (int)16L;
    }
    public static int DEFAULT_GUI_FONT() {
        return (int)17L;
    }
    public static int DC_BRUSH() {
        return (int)18L;
    }
    public static int DC_PEN() {
        return (int)19L;
    }
    public static int STOCK_LAST() {
        return (int)19L;
    }
    public static int BS_SOLID() {
        return (int)0L;
    }
    public static int BS_NULL() {
        return (int)1L;
    }
    public static int BS_HATCHED() {
        return (int)2L;
    }
    public static int BS_PATTERN() {
        return (int)3L;
    }
    public static int BS_INDEXED() {
        return (int)4L;
    }
    public static int BS_DIBPATTERN() {
        return (int)5L;
    }
    public static int BS_DIBPATTERNPT() {
        return (int)6L;
    }
    public static int BS_PATTERN8X8() {
        return (int)7L;
    }
    public static int BS_DIBPATTERN8X8() {
        return (int)8L;
    }
    public static int BS_MONOPATTERN() {
        return (int)9L;
    }
    public static int HS_HORIZONTAL() {
        return (int)0L;
    }
    public static int HS_VERTICAL() {
        return (int)1L;
    }
    public static int HS_FDIAGONAL() {
        return (int)2L;
    }
    public static int HS_BDIAGONAL() {
        return (int)3L;
    }
    public static int HS_CROSS() {
        return (int)4L;
    }
    public static int HS_DIAGCROSS() {
        return (int)5L;
    }
    public static int HS_API_MAX() {
        return (int)12L;
    }
    public static int PS_SOLID() {
        return (int)0L;
    }
    public static int PS_DASH() {
        return (int)1L;
    }
    public static int PS_DOT() {
        return (int)2L;
    }
    public static int PS_DASHDOT() {
        return (int)3L;
    }
    public static int PS_DASHDOTDOT() {
        return (int)4L;
    }
    public static int PS_NULL() {
        return (int)5L;
    }
    public static int PS_INSIDEFRAME() {
        return (int)6L;
    }
    public static int PS_USERSTYLE() {
        return (int)7L;
    }
    public static int PS_ALTERNATE() {
        return (int)8L;
    }
    public static int PS_STYLE_MASK() {
        return (int)15L;
    }
    public static int PS_ENDCAP_ROUND() {
        return (int)0L;
    }
    public static int PS_ENDCAP_SQUARE() {
        return (int)256L;
    }
    public static int PS_ENDCAP_FLAT() {
        return (int)512L;
    }
    public static int PS_ENDCAP_MASK() {
        return (int)3840L;
    }
    public static int PS_JOIN_ROUND() {
        return (int)0L;
    }
    public static int PS_JOIN_BEVEL() {
        return (int)4096L;
    }
    public static int PS_JOIN_MITER() {
        return (int)8192L;
    }
    public static int PS_JOIN_MASK() {
        return (int)61440L;
    }
    public static int PS_COSMETIC() {
        return (int)0L;
    }
    public static int PS_GEOMETRIC() {
        return (int)65536L;
    }
    public static int PS_TYPE_MASK() {
        return (int)983040L;
    }
    public static int AD_COUNTERCLOCKWISE() {
        return (int)1L;
    }
    public static int AD_CLOCKWISE() {
        return (int)2L;
    }
    public static int DRIVERVERSION() {
        return (int)0L;
    }
    public static int TECHNOLOGY() {
        return (int)2L;
    }
    public static int HORZSIZE() {
        return (int)4L;
    }
    public static int VERTSIZE() {
        return (int)6L;
    }
    public static int HORZRES() {
        return (int)8L;
    }
    public static int VERTRES() {
        return (int)10L;
    }
    public static int BITSPIXEL() {
        return (int)12L;
    }
    public static int PLANES() {
        return (int)14L;
    }
    public static int NUMBRUSHES() {
        return (int)16L;
    }
    public static int NUMPENS() {
        return (int)18L;
    }
    public static int NUMMARKERS() {
        return (int)20L;
    }
    public static int NUMFONTS() {
        return (int)22L;
    }
    public static int NUMCOLORS() {
        return (int)24L;
    }
    public static int PDEVICESIZE() {
        return (int)26L;
    }
    public static int CURVECAPS() {
        return (int)28L;
    }
    public static int LINECAPS() {
        return (int)30L;
    }
    public static int POLYGONALCAPS() {
        return (int)32L;
    }
    public static int TEXTCAPS() {
        return (int)34L;
    }
    public static int CLIPCAPS() {
        return (int)36L;
    }
    public static int RASTERCAPS() {
        return (int)38L;
    }
    public static int ASPECTX() {
        return (int)40L;
    }
    public static int ASPECTY() {
        return (int)42L;
    }
    public static int ASPECTXY() {
        return (int)44L;
    }
    public static int LOGPIXELSX() {
        return (int)88L;
    }
    public static int LOGPIXELSY() {
        return (int)90L;
    }
    public static int SIZEPALETTE() {
        return (int)104L;
    }
    public static int NUMRESERVED() {
        return (int)106L;
    }
    public static int COLORRES() {
        return (int)108L;
    }
    public static int PHYSICALWIDTH() {
        return (int)110L;
    }
    public static int PHYSICALHEIGHT() {
        return (int)111L;
    }
    public static int PHYSICALOFFSETX() {
        return (int)112L;
    }
    public static int PHYSICALOFFSETY() {
        return (int)113L;
    }
    public static int SCALINGFACTORX() {
        return (int)114L;
    }
    public static int SCALINGFACTORY() {
        return (int)115L;
    }
    public static int VREFRESH() {
        return (int)116L;
    }
    public static int DESKTOPVERTRES() {
        return (int)117L;
    }
    public static int DESKTOPHORZRES() {
        return (int)118L;
    }
    public static int BLTALIGNMENT() {
        return (int)119L;
    }
    public static int SHADEBLENDCAPS() {
        return (int)120L;
    }
    public static int COLORMGMTCAPS() {
        return (int)121L;
    }
    public static int DT_PLOTTER() {
        return (int)0L;
    }
    public static int DT_RASDISPLAY() {
        return (int)1L;
    }
    public static int DT_RASPRINTER() {
        return (int)2L;
    }
    public static int DT_RASCAMERA() {
        return (int)3L;
    }
    public static int DT_CHARSTREAM() {
        return (int)4L;
    }
    public static int DT_METAFILE() {
        return (int)5L;
    }
    public static int DT_DISPFILE() {
        return (int)6L;
    }
    public static int CC_NONE() {
        return (int)0L;
    }
    public static int CC_CIRCLES() {
        return (int)1L;
    }
    public static int CC_PIE() {
        return (int)2L;
    }
    public static int CC_CHORD() {
        return (int)4L;
    }
    public static int CC_ELLIPSES() {
        return (int)8L;
    }
    public static int CC_WIDE() {
        return (int)16L;
    }
    public static int CC_STYLED() {
        return (int)32L;
    }
    public static int CC_WIDESTYLED() {
        return (int)64L;
    }
    public static int CC_INTERIORS() {
        return (int)128L;
    }
    public static int CC_ROUNDRECT() {
        return (int)256L;
    }
    public static int LC_NONE() {
        return (int)0L;
    }
    public static int LC_POLYLINE() {
        return (int)2L;
    }
    public static int LC_MARKER() {
        return (int)4L;
    }
    public static int LC_POLYMARKER() {
        return (int)8L;
    }
    public static int LC_WIDE() {
        return (int)16L;
    }
    public static int LC_STYLED() {
        return (int)32L;
    }
    public static int LC_WIDESTYLED() {
        return (int)64L;
    }
    public static int LC_INTERIORS() {
        return (int)128L;
    }
    public static int PC_NONE() {
        return (int)0L;
    }
    public static int PC_POLYGON() {
        return (int)1L;
    }
    public static int PC_RECTANGLE() {
        return (int)2L;
    }
    public static int PC_WINDPOLYGON() {
        return (int)4L;
    }
    public static int PC_TRAPEZOID() {
        return (int)4L;
    }
    public static int PC_SCANLINE() {
        return (int)8L;
    }
    public static int PC_WIDE() {
        return (int)16L;
    }
    public static int PC_STYLED() {
        return (int)32L;
    }
    public static int PC_WIDESTYLED() {
        return (int)64L;
    }
    public static int PC_INTERIORS() {
        return (int)128L;
    }
    public static int PC_POLYPOLYGON() {
        return (int)256L;
    }
    public static int PC_PATHS() {
        return (int)512L;
    }
    public static int CP_NONE() {
        return (int)0L;
    }
    public static int CP_RECTANGLE() {
        return (int)1L;
    }
    public static int CP_REGION() {
        return (int)2L;
    }
    public static int TC_OP_CHARACTER() {
        return (int)1L;
    }
    public static int TC_OP_STROKE() {
        return (int)2L;
    }
    public static int TC_CP_STROKE() {
        return (int)4L;
    }
    public static int TC_CR_90() {
        return (int)8L;
    }
    public static int TC_CR_ANY() {
        return (int)16L;
    }
    public static int TC_SF_X_YINDEP() {
        return (int)32L;
    }
    public static int TC_SA_DOUBLE() {
        return (int)64L;
    }
    public static int TC_SA_INTEGER() {
        return (int)128L;
    }
    public static int TC_SA_CONTIN() {
        return (int)256L;
    }
    public static int TC_EA_DOUBLE() {
        return (int)512L;
    }
    public static int TC_IA_ABLE() {
        return (int)1024L;
    }
    public static int TC_UA_ABLE() {
        return (int)2048L;
    }
    public static int TC_SO_ABLE() {
        return (int)4096L;
    }
    public static int TC_RA_ABLE() {
        return (int)8192L;
    }
    public static int TC_VA_ABLE() {
        return (int)16384L;
    }
    public static int TC_RESERVED() {
        return (int)32768L;
    }
    public static int TC_SCROLLBLT() {
        return (int)65536L;
    }
    public static int RC_BITBLT() {
        return (int)1L;
    }
    public static int RC_BANDING() {
        return (int)2L;
    }
    public static int RC_SCALING() {
        return (int)4L;
    }
    public static int RC_BITMAP64() {
        return (int)8L;
    }
    public static int RC_GDI20_OUTPUT() {
        return (int)16L;
    }
    public static int RC_GDI20_STATE() {
        return (int)32L;
    }
    public static int RC_SAVEBITMAP() {
        return (int)64L;
    }
    public static int RC_DI_BITMAP() {
        return (int)128L;
    }
    public static int RC_PALETTE() {
        return (int)256L;
    }
    public static int RC_DIBTODEV() {
        return (int)512L;
    }
    public static int RC_BIGFONT() {
        return (int)1024L;
    }
    public static int RC_STRETCHBLT() {
        return (int)2048L;
    }
    public static int RC_FLOODFILL() {
        return (int)4096L;
    }
    public static int RC_STRETCHDIB() {
        return (int)8192L;
    }
    public static int RC_OP_DX_OUTPUT() {
        return (int)16384L;
    }
    public static int RC_DEVBITS() {
        return (int)32768L;
    }
    public static int SB_NONE() {
        return (int)0L;
    }
    public static int SB_CONST_ALPHA() {
        return (int)1L;
    }
    public static int SB_PIXEL_ALPHA() {
        return (int)2L;
    }
    public static int SB_PREMULT_ALPHA() {
        return (int)4L;
    }
    public static int SB_GRAD_RECT() {
        return (int)16L;
    }
    public static int SB_GRAD_TRI() {
        return (int)32L;
    }
    public static int CM_NONE() {
        return (int)0L;
    }
    public static int CM_DEVICE_ICM() {
        return (int)1L;
    }
    public static int CM_GAMMA_RAMP() {
        return (int)2L;
    }
    public static int CM_CMYK_COLOR() {
        return (int)4L;
    }
    public static int DIB_RGB_COLORS() {
        return (int)0L;
    }
    public static int DIB_PAL_COLORS() {
        return (int)1L;
    }
    public static int SYSPAL_ERROR() {
        return (int)0L;
    }
    public static int SYSPAL_STATIC() {
        return (int)1L;
    }
    public static int SYSPAL_NOSTATIC() {
        return (int)2L;
    }
    public static int SYSPAL_NOSTATIC256() {
        return (int)3L;
    }
    public static int FLOODFILLBORDER() {
        return (int)0L;
    }
    public static int FLOODFILLSURFACE() {
        return (int)1L;
    }
    public static int CCHDEVICENAME() {
        return (int)32L;
    }
    public static int CCHFORMNAME() {
        return (int)32L;
    }
    public static int DM_SPECVERSION() {
        return (int)1025L;
    }
    public static int DMORIENT_PORTRAIT() {
        return (int)1L;
    }
    public static int DMORIENT_LANDSCAPE() {
        return (int)2L;
    }
    public static int DMPAPER_LETTER() {
        return (int)1L;
    }
    public static int DMPAPER_LETTERSMALL() {
        return (int)2L;
    }
    public static int DMPAPER_TABLOID() {
        return (int)3L;
    }
    public static int DMPAPER_LEDGER() {
        return (int)4L;
    }
    public static int DMPAPER_LEGAL() {
        return (int)5L;
    }
    public static int DMPAPER_STATEMENT() {
        return (int)6L;
    }
    public static int DMPAPER_EXECUTIVE() {
        return (int)7L;
    }
    public static int DMPAPER_A3() {
        return (int)8L;
    }
    public static int DMPAPER_A4() {
        return (int)9L;
    }
    public static int DMPAPER_A4SMALL() {
        return (int)10L;
    }
    public static int DMPAPER_A5() {
        return (int)11L;
    }
    public static int DMPAPER_B4() {
        return (int)12L;
    }
    public static int DMPAPER_B5() {
        return (int)13L;
    }
    public static int DMPAPER_FOLIO() {
        return (int)14L;
    }
    public static int DMPAPER_QUARTO() {
        return (int)15L;
    }
    public static int DMPAPER_10X14() {
        return (int)16L;
    }
    public static int DMPAPER_11X17() {
        return (int)17L;
    }
    public static int DMPAPER_NOTE() {
        return (int)18L;
    }
    public static int DMPAPER_ENV_9() {
        return (int)19L;
    }
    public static int DMPAPER_ENV_10() {
        return (int)20L;
    }
    public static int DMPAPER_ENV_11() {
        return (int)21L;
    }
    public static int DMPAPER_ENV_12() {
        return (int)22L;
    }
    public static int DMPAPER_ENV_14() {
        return (int)23L;
    }
    public static int DMPAPER_CSHEET() {
        return (int)24L;
    }
    public static int DMPAPER_DSHEET() {
        return (int)25L;
    }
    public static int DMPAPER_ESHEET() {
        return (int)26L;
    }
    public static int DMPAPER_ENV_DL() {
        return (int)27L;
    }
    public static int DMPAPER_ENV_C5() {
        return (int)28L;
    }
    public static int DMPAPER_ENV_C3() {
        return (int)29L;
    }
    public static int DMPAPER_ENV_C4() {
        return (int)30L;
    }
    public static int DMPAPER_ENV_C6() {
        return (int)31L;
    }
    public static int DMPAPER_ENV_C65() {
        return (int)32L;
    }
    public static int DMPAPER_ENV_B4() {
        return (int)33L;
    }
    public static int DMPAPER_ENV_B5() {
        return (int)34L;
    }
    public static int DMPAPER_ENV_B6() {
        return (int)35L;
    }
    public static int DMPAPER_ENV_ITALY() {
        return (int)36L;
    }
    public static int DMPAPER_ENV_MONARCH() {
        return (int)37L;
    }
    public static int DMPAPER_ENV_PERSONAL() {
        return (int)38L;
    }
    public static int DMPAPER_FANFOLD_US() {
        return (int)39L;
    }
    public static int DMPAPER_FANFOLD_STD_GERMAN() {
        return (int)40L;
    }
    public static int DMPAPER_FANFOLD_LGL_GERMAN() {
        return (int)41L;
    }
    public static int DMPAPER_ISO_B4() {
        return (int)42L;
    }
    public static int DMPAPER_JAPANESE_POSTCARD() {
        return (int)43L;
    }
    public static int DMPAPER_9X11() {
        return (int)44L;
    }
    public static int DMPAPER_10X11() {
        return (int)45L;
    }
    public static int DMPAPER_15X11() {
        return (int)46L;
    }
    public static int DMPAPER_ENV_INVITE() {
        return (int)47L;
    }
    public static int DMPAPER_RESERVED_48() {
        return (int)48L;
    }
    public static int DMPAPER_RESERVED_49() {
        return (int)49L;
    }
    public static int DMPAPER_LETTER_EXTRA() {
        return (int)50L;
    }
    public static int DMPAPER_LEGAL_EXTRA() {
        return (int)51L;
    }
    public static int DMPAPER_TABLOID_EXTRA() {
        return (int)52L;
    }
    public static int DMPAPER_A4_EXTRA() {
        return (int)53L;
    }
    public static int DMPAPER_LETTER_TRANSVERSE() {
        return (int)54L;
    }
    public static int DMPAPER_A4_TRANSVERSE() {
        return (int)55L;
    }
    public static int DMPAPER_LETTER_EXTRA_TRANSVERSE() {
        return (int)56L;
    }
    public static int DMPAPER_A_PLUS() {
        return (int)57L;
    }
    public static int DMPAPER_B_PLUS() {
        return (int)58L;
    }
    public static int DMPAPER_LETTER_PLUS() {
        return (int)59L;
    }
    public static int DMPAPER_A4_PLUS() {
        return (int)60L;
    }
    public static int DMPAPER_A5_TRANSVERSE() {
        return (int)61L;
    }
    public static int DMPAPER_B5_TRANSVERSE() {
        return (int)62L;
    }
    public static int DMPAPER_A3_EXTRA() {
        return (int)63L;
    }
    public static int DMPAPER_A5_EXTRA() {
        return (int)64L;
    }
    public static int DMPAPER_B5_EXTRA() {
        return (int)65L;
    }
    public static int DMPAPER_A2() {
        return (int)66L;
    }
    public static int DMPAPER_A3_TRANSVERSE() {
        return (int)67L;
    }
    public static int DMPAPER_A3_EXTRA_TRANSVERSE() {
        return (int)68L;
    }
    public static int DMPAPER_DBL_JAPANESE_POSTCARD() {
        return (int)69L;
    }
    public static int DMPAPER_A6() {
        return (int)70L;
    }
    public static int DMPAPER_JENV_KAKU2() {
        return (int)71L;
    }
    public static int DMPAPER_JENV_KAKU3() {
        return (int)72L;
    }
    public static int DMPAPER_JENV_CHOU3() {
        return (int)73L;
    }
    public static int DMPAPER_JENV_CHOU4() {
        return (int)74L;
    }
    public static int DMPAPER_LETTER_ROTATED() {
        return (int)75L;
    }
    public static int DMPAPER_A3_ROTATED() {
        return (int)76L;
    }
    public static int DMPAPER_A4_ROTATED() {
        return (int)77L;
    }
    public static int DMPAPER_A5_ROTATED() {
        return (int)78L;
    }
    public static int DMPAPER_B4_JIS_ROTATED() {
        return (int)79L;
    }
    public static int DMPAPER_B5_JIS_ROTATED() {
        return (int)80L;
    }
    public static int DMPAPER_JAPANESE_POSTCARD_ROTATED() {
        return (int)81L;
    }
    public static int DMPAPER_DBL_JAPANESE_POSTCARD_ROTATED() {
        return (int)82L;
    }
    public static int DMPAPER_A6_ROTATED() {
        return (int)83L;
    }
    public static int DMPAPER_JENV_KAKU2_ROTATED() {
        return (int)84L;
    }
    public static int DMPAPER_JENV_KAKU3_ROTATED() {
        return (int)85L;
    }
    public static int DMPAPER_JENV_CHOU3_ROTATED() {
        return (int)86L;
    }
    public static int DMPAPER_JENV_CHOU4_ROTATED() {
        return (int)87L;
    }
    public static int DMPAPER_B6_JIS() {
        return (int)88L;
    }
    public static int DMPAPER_B6_JIS_ROTATED() {
        return (int)89L;
    }
    public static int DMPAPER_12X11() {
        return (int)90L;
    }
    public static int DMPAPER_JENV_YOU4() {
        return (int)91L;
    }
    public static int DMPAPER_JENV_YOU4_ROTATED() {
        return (int)92L;
    }
    public static int DMPAPER_P16K() {
        return (int)93L;
    }
    public static int DMPAPER_P32K() {
        return (int)94L;
    }
    public static int DMPAPER_P32KBIG() {
        return (int)95L;
    }
    public static int DMPAPER_PENV_1() {
        return (int)96L;
    }
    public static int DMPAPER_PENV_2() {
        return (int)97L;
    }
    public static int DMPAPER_PENV_3() {
        return (int)98L;
    }
    public static int DMPAPER_PENV_4() {
        return (int)99L;
    }
    public static int DMPAPER_PENV_5() {
        return (int)100L;
    }
    public static int DMPAPER_PENV_6() {
        return (int)101L;
    }
    public static int DMPAPER_PENV_7() {
        return (int)102L;
    }
    public static int DMPAPER_PENV_8() {
        return (int)103L;
    }
    public static int DMPAPER_PENV_9() {
        return (int)104L;
    }
    public static int DMPAPER_PENV_10() {
        return (int)105L;
    }
    public static int DMPAPER_P16K_ROTATED() {
        return (int)106L;
    }
    public static int DMPAPER_P32K_ROTATED() {
        return (int)107L;
    }
    public static int DMPAPER_P32KBIG_ROTATED() {
        return (int)108L;
    }
    public static int DMPAPER_PENV_1_ROTATED() {
        return (int)109L;
    }
    public static int DMPAPER_PENV_2_ROTATED() {
        return (int)110L;
    }
    public static int DMPAPER_PENV_3_ROTATED() {
        return (int)111L;
    }
    public static int DMPAPER_PENV_4_ROTATED() {
        return (int)112L;
    }
    public static int DMPAPER_PENV_5_ROTATED() {
        return (int)113L;
    }
    public static int DMPAPER_PENV_6_ROTATED() {
        return (int)114L;
    }
    public static int DMPAPER_PENV_7_ROTATED() {
        return (int)115L;
    }
    public static int DMPAPER_PENV_8_ROTATED() {
        return (int)116L;
    }
    public static int DMPAPER_PENV_9_ROTATED() {
        return (int)117L;
    }
    public static int DMPAPER_PENV_10_ROTATED() {
        return (int)118L;
    }
    public static int DMPAPER_USER() {
        return (int)256L;
    }
    public static int DMBIN_UPPER() {
        return (int)1L;
    }
    public static int DMBIN_ONLYONE() {
        return (int)1L;
    }
    public static int DMBIN_LOWER() {
        return (int)2L;
    }
    public static int DMBIN_MIDDLE() {
        return (int)3L;
    }
    public static int DMBIN_MANUAL() {
        return (int)4L;
    }
    public static int DMBIN_ENVELOPE() {
        return (int)5L;
    }
    public static int DMBIN_ENVMANUAL() {
        return (int)6L;
    }
    public static int DMBIN_AUTO() {
        return (int)7L;
    }
    public static int DMBIN_TRACTOR() {
        return (int)8L;
    }
    public static int DMBIN_SMALLFMT() {
        return (int)9L;
    }
    public static int DMBIN_LARGEFMT() {
        return (int)10L;
    }
    public static int DMBIN_LARGECAPACITY() {
        return (int)11L;
    }
    public static int DMBIN_CASSETTE() {
        return (int)14L;
    }
    public static int DMBIN_FORMSOURCE() {
        return (int)15L;
    }
    public static int DMBIN_USER() {
        return (int)256L;
    }
    public static int DMCOLOR_MONOCHROME() {
        return (int)1L;
    }
    public static int DMCOLOR_COLOR() {
        return (int)2L;
    }
    public static int DMDUP_SIMPLEX() {
        return (int)1L;
    }
    public static int DMDUP_VERTICAL() {
        return (int)2L;
    }
    public static int DMDUP_HORIZONTAL() {
        return (int)3L;
    }
    public static int DMTT_BITMAP() {
        return (int)1L;
    }
    public static int DMTT_DOWNLOAD() {
        return (int)2L;
    }
    public static int DMTT_SUBDEV() {
        return (int)3L;
    }
    public static int DMTT_DOWNLOAD_OUTLINE() {
        return (int)4L;
    }
    public static int DMCOLLATE_FALSE() {
        return (int)0L;
    }
    public static int DMCOLLATE_TRUE() {
        return (int)1L;
    }
    public static int DMDO_DEFAULT() {
        return (int)0L;
    }
    public static int DMDO_90() {
        return (int)1L;
    }
    public static int DMDO_180() {
        return (int)2L;
    }
    public static int DMDO_270() {
        return (int)3L;
    }
    public static int DMDFO_DEFAULT() {
        return (int)0L;
    }
    public static int DMDFO_STRETCH() {
        return (int)1L;
    }
    public static int DMDFO_CENTER() {
        return (int)2L;
    }
    public static int DM_INTERLACED() {
        return (int)2L;
    }
    public static int DMDISPLAYFLAGS_TEXTMODE() {
        return (int)4L;
    }
    public static int DMNUP_SYSTEM() {
        return (int)1L;
    }
    public static int DMNUP_ONEUP() {
        return (int)2L;
    }
    public static int DMICMMETHOD_NONE() {
        return (int)1L;
    }
    public static int DMICMMETHOD_SYSTEM() {
        return (int)2L;
    }
    public static int DMICMMETHOD_DRIVER() {
        return (int)3L;
    }
    public static int DMICMMETHOD_DEVICE() {
        return (int)4L;
    }
    public static int DMICMMETHOD_USER() {
        return (int)256L;
    }
    public static int DMICM_SATURATE() {
        return (int)1L;
    }
    public static int DMICM_CONTRAST() {
        return (int)2L;
    }
    public static int DMICM_COLORIMETRIC() {
        return (int)3L;
    }
    public static int DMICM_ABS_COLORIMETRIC() {
        return (int)4L;
    }
    public static int DMICM_USER() {
        return (int)256L;
    }
    public static int DMMEDIA_STANDARD() {
        return (int)1L;
    }
    public static int DMMEDIA_TRANSPARENCY() {
        return (int)2L;
    }
    public static int DMMEDIA_GLOSSY() {
        return (int)3L;
    }
    public static int DMMEDIA_USER() {
        return (int)256L;
    }
    public static int DMDITHER_NONE() {
        return (int)1L;
    }
    public static int DMDITHER_COARSE() {
        return (int)2L;
    }
    public static int DMDITHER_FINE() {
        return (int)3L;
    }
    public static int DMDITHER_LINEART() {
        return (int)4L;
    }
    public static int DMDITHER_ERRORDIFFUSION() {
        return (int)5L;
    }
    public static int DMDITHER_RESERVED6() {
        return (int)6L;
    }
    public static int DMDITHER_RESERVED7() {
        return (int)7L;
    }
    public static int DMDITHER_RESERVED8() {
        return (int)8L;
    }
    public static int DMDITHER_RESERVED9() {
        return (int)9L;
    }
    public static int DMDITHER_GRAYSCALE() {
        return (int)10L;
    }
    public static int DMDITHER_USER() {
        return (int)256L;
    }
    public static int DISPLAY_DEVICE_ATTACHED_TO_DESKTOP() {
        return (int)1L;
    }
    public static int DISPLAY_DEVICE_MULTI_DRIVER() {
        return (int)2L;
    }
    public static int DISPLAY_DEVICE_PRIMARY_DEVICE() {
        return (int)4L;
    }
    public static int DISPLAY_DEVICE_MIRRORING_DRIVER() {
        return (int)8L;
    }
    public static int DISPLAY_DEVICE_VGA_COMPATIBLE() {
        return (int)16L;
    }
    public static int DISPLAY_DEVICE_REMOVABLE() {
        return (int)32L;
    }
    public static int DISPLAY_DEVICE_ACC_DRIVER() {
        return (int)64L;
    }
    public static int DISPLAY_DEVICE_MODESPRUNED() {
        return (int)134217728L;
    }
    public static int DISPLAY_DEVICE_RDPUDD() {
        return (int)16777216L;
    }
    public static int DISPLAY_DEVICE_REMOTE() {
        return (int)67108864L;
    }
    public static int DISPLAY_DEVICE_DISCONNECT() {
        return (int)33554432L;
    }
    public static int DISPLAY_DEVICE_TS_COMPATIBLE() {
        return (int)2097152L;
    }
    public static int DISPLAY_DEVICE_UNSAFE_MODES_ON() {
        return (int)524288L;
    }
    public static int DISPLAY_DEVICE_ACTIVE() {
        return (int)1L;
    }
    public static int DISPLAY_DEVICE_ATTACHED() {
        return (int)2L;
    }
    public static int DISPLAYCONFIG_MAXPATH() {
        return (int)1024L;
    }
    public static int DISPLAYCONFIG_PATH_TARGET_MODE_IDX_INVALID() {
        return (int)65535L;
    }
    public static int DISPLAYCONFIG_PATH_DESKTOP_IMAGE_IDX_INVALID() {
        return (int)65535L;
    }
    public static int DISPLAYCONFIG_PATH_SOURCE_MODE_IDX_INVALID() {
        return (int)65535L;
    }
    public static int DISPLAYCONFIG_PATH_CLONE_GROUP_INVALID() {
        return (int)65535L;
    }
    public static int DISPLAYCONFIG_SOURCE_IN_USE() {
        return (int)1L;
    }
    public static int DISPLAYCONFIG_TARGET_IN_USE() {
        return (int)1L;
    }
    public static int DISPLAYCONFIG_TARGET_FORCIBLE() {
        return (int)2L;
    }
    public static int DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_BOOT() {
        return (int)4L;
    }
    public static int DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_PATH() {
        return (int)8L;
    }
    public static int DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_SYSTEM() {
        return (int)16L;
    }
    public static int DISPLAYCONFIG_TARGET_IS_HMD() {
        return (int)32L;
    }
    public static int DISPLAYCONFIG_PATH_ACTIVE() {
        return (int)1L;
    }
    public static int DISPLAYCONFIG_PATH_PREFERRED_UNSCALED() {
        return (int)4L;
    }
    public static int DISPLAYCONFIG_PATH_SUPPORT_VIRTUAL_MODE() {
        return (int)8L;
    }
    public static int DISPLAYCONFIG_PATH_VALID_FLAGS() {
        return (int)13L;
    }
    public static int QDC_ALL_PATHS() {
        return (int)1L;
    }
    public static int QDC_ONLY_ACTIVE_PATHS() {
        return (int)2L;
    }
    public static int QDC_DATABASE_CURRENT() {
        return (int)4L;
    }
    public static int QDC_VIRTUAL_MODE_AWARE() {
        return (int)16L;
    }
    public static int QDC_INCLUDE_HMD() {
        return (int)32L;
    }
    public static int SDC_TOPOLOGY_INTERNAL() {
        return (int)1L;
    }
    public static int SDC_TOPOLOGY_CLONE() {
        return (int)2L;
    }
    public static int SDC_TOPOLOGY_EXTEND() {
        return (int)4L;
    }
    public static int SDC_TOPOLOGY_EXTERNAL() {
        return (int)8L;
    }
    public static int SDC_TOPOLOGY_SUPPLIED() {
        return (int)16L;
    }
    public static int SDC_USE_SUPPLIED_DISPLAY_CONFIG() {
        return (int)32L;
    }
    public static int SDC_VALIDATE() {
        return (int)64L;
    }
    public static int SDC_APPLY() {
        return (int)128L;
    }
    public static int SDC_NO_OPTIMIZATION() {
        return (int)256L;
    }
    public static int SDC_SAVE_TO_DATABASE() {
        return (int)512L;
    }
    public static int SDC_ALLOW_CHANGES() {
        return (int)1024L;
    }
    public static int SDC_PATH_PERSIST_IF_REQUIRED() {
        return (int)2048L;
    }
    public static int SDC_FORCE_MODE_ENUMERATION() {
        return (int)4096L;
    }
    public static int SDC_ALLOW_PATH_ORDER_CHANGES() {
        return (int)8192L;
    }
    public static int SDC_VIRTUAL_MODE_AWARE() {
        return (int)32768L;
    }
    public static int RDH_RECTANGLES() {
        return (int)1L;
    }
    public static int SYSRGN() {
        return (int)4L;
    }
    public static int GGO_METRICS() {
        return (int)0L;
    }
    public static int GGO_BITMAP() {
        return (int)1L;
    }
    public static int GGO_NATIVE() {
        return (int)2L;
    }
    public static int GGO_BEZIER() {
        return (int)3L;
    }
    public static int GGO_GRAY2_BITMAP() {
        return (int)4L;
    }
    public static int GGO_GRAY4_BITMAP() {
        return (int)5L;
    }
    public static int GGO_GRAY8_BITMAP() {
        return (int)6L;
    }
    public static int GGO_GLYPH_INDEX() {
        return (int)128L;
    }
    public static int GGO_UNHINTED() {
        return (int)256L;
    }
    public static int TT_POLYGON_TYPE() {
        return (int)24L;
    }
    public static int TT_PRIM_LINE() {
        return (int)1L;
    }
    public static int TT_PRIM_QSPLINE() {
        return (int)2L;
    }
    public static int TT_PRIM_CSPLINE() {
        return (int)3L;
    }
    public static int GCP_DBCS() {
        return (int)1L;
    }
    public static int GCP_REORDER() {
        return (int)2L;
    }
    public static int GCP_USEKERNING() {
        return (int)8L;
    }
    public static int GCP_GLYPHSHAPE() {
        return (int)16L;
    }
    public static int GCP_LIGATE() {
        return (int)32L;
    }
    public static int GCP_DIACRITIC() {
        return (int)256L;
    }
    public static int GCP_KASHIDA() {
        return (int)1024L;
    }
    public static int GCP_ERROR() {
        return (int)32768L;
    }
    public static int FLI_MASK() {
        return (int)4155L;
    }
    public static int GCPCLASS_LATIN() {
        return (int)1L;
    }
    public static int GCPCLASS_HEBREW() {
        return (int)2L;
    }
    public static int GCPCLASS_ARABIC() {
        return (int)2L;
    }
    public static int GCPCLASS_NEUTRAL() {
        return (int)3L;
    }
    public static int GCPCLASS_LOCALNUMBER() {
        return (int)4L;
    }
    public static int GCPCLASS_LATINNUMBER() {
        return (int)5L;
    }
    public static int GCPCLASS_LATINNUMERICTERMINATOR() {
        return (int)6L;
    }
    public static int GCPCLASS_LATINNUMERICSEPARATOR() {
        return (int)7L;
    }
    public static int GCPCLASS_NUMERICSEPARATOR() {
        return (int)8L;
    }
    public static int GCPCLASS_PREBOUNDLTR() {
        return (int)128L;
    }
    public static int GCPCLASS_PREBOUNDRTL() {
        return (int)64L;
    }
    public static int GCPCLASS_POSTBOUNDLTR() {
        return (int)32L;
    }
    public static int GCPCLASS_POSTBOUNDRTL() {
        return (int)16L;
    }
    public static int GCPGLYPH_LINKBEFORE() {
        return (int)32768L;
    }
    public static int GCPGLYPH_LINKAFTER() {
        return (int)16384L;
    }
    public static int TT_AVAILABLE() {
        return (int)1L;
    }
    public static int TT_ENABLED() {
        return (int)2L;
    }
    public static int PFD_TYPE_RGBA() {
        return (int)0L;
    }
    public static int PFD_TYPE_COLORINDEX() {
        return (int)1L;
    }
    public static int PFD_MAIN_PLANE() {
        return (int)0L;
    }
    public static int PFD_OVERLAY_PLANE() {
        return (int)1L;
    }
    public static int PFD_DOUBLEBUFFER() {
        return (int)1L;
    }
    public static int PFD_STEREO() {
        return (int)2L;
    }
    public static int PFD_DRAW_TO_WINDOW() {
        return (int)4L;
    }
    public static int PFD_DRAW_TO_BITMAP() {
        return (int)8L;
    }
    public static int PFD_SUPPORT_GDI() {
        return (int)16L;
    }
    public static int PFD_SUPPORT_OPENGL() {
        return (int)32L;
    }
    public static int PFD_GENERIC_FORMAT() {
        return (int)64L;
    }
    public static int PFD_NEED_PALETTE() {
        return (int)128L;
    }
    public static int PFD_NEED_SYSTEM_PALETTE() {
        return (int)256L;
    }
    public static int PFD_SWAP_EXCHANGE() {
        return (int)512L;
    }
    public static int PFD_SWAP_COPY() {
        return (int)1024L;
    }
    public static int PFD_SWAP_LAYER_BUFFERS() {
        return (int)2048L;
    }
    public static int PFD_GENERIC_ACCELERATED() {
        return (int)4096L;
    }
    public static int PFD_SUPPORT_DIRECTDRAW() {
        return (int)8192L;
    }
    public static int PFD_DIRECT3D_ACCELERATED() {
        return (int)16384L;
    }
    public static int PFD_SUPPORT_COMPOSITION() {
        return (int)32768L;
    }
    public static int PFD_DEPTH_DONTCARE() {
        return (int)536870912L;
    }
    public static int PFD_DOUBLEBUFFER_DONTCARE() {
        return (int)1073741824L;
    }
    public static int DC_BINADJUST() {
        return (int)19L;
    }
    public static int DC_EMF_COMPLIANT() {
        return (int)20L;
    }
    public static int DC_DATATYPE_PRODUCED() {
        return (int)21L;
    }
    public static int DC_COLLATE() {
        return (int)22L;
    }
    public static int DC_MANUFACTURER() {
        return (int)23L;
    }
    public static int DC_MODEL() {
        return (int)24L;
    }
    public static int DC_PERSONALITY() {
        return (int)25L;
    }
    public static int DC_PRINTRATE() {
        return (int)26L;
    }
    public static int DC_PRINTRATEUNIT() {
        return (int)27L;
    }
    public static int PRINTRATEUNIT_PPM() {
        return (int)1L;
    }
    public static int PRINTRATEUNIT_CPS() {
        return (int)2L;
    }
    public static int PRINTRATEUNIT_LPM() {
        return (int)3L;
    }
    public static int PRINTRATEUNIT_IPM() {
        return (int)4L;
    }
    public static int DC_PRINTERMEM() {
        return (int)28L;
    }
    public static int DC_MEDIAREADY() {
        return (int)29L;
    }
    public static int DC_STAPLE() {
        return (int)30L;
    }
    public static int DC_PRINTRATEPPM() {
        return (int)31L;
    }
    public static int DC_COLORDEVICE() {
        return (int)32L;
    }
    public static int DC_NUP() {
        return (int)33L;
    }
    public static int DC_MEDIATYPENAMES() {
        return (int)34L;
    }
    public static int DC_MEDIATYPES() {
        return (int)35L;
    }
    public static int DCBA_FACEUPNONE() {
        return (int)0L;
    }
    public static int DCBA_FACEUPCENTER() {
        return (int)1L;
    }
    public static int DCBA_FACEUPLEFT() {
        return (int)2L;
    }
    public static int DCBA_FACEUPRIGHT() {
        return (int)3L;
    }
    public static int DCBA_FACEDOWNNONE() {
        return (int)256L;
    }
    public static int DCBA_FACEDOWNCENTER() {
        return (int)257L;
    }
    public static int DCBA_FACEDOWNLEFT() {
        return (int)258L;
    }
    public static int DCBA_FACEDOWNRIGHT() {
        return (int)259L;
    }
    public static int GS_8BIT_INDICES() {
        return (int)1L;
    }
    public static int GGI_MARK_NONEXISTING_GLYPHS() {
        return (int)1L;
    }
    public static int MM_MAX_NUMAXES() {
        return (int)16L;
    }
    public static int FR_PRIVATE() {
        return (int)16L;
    }
    public static int FR_NOT_ENUM() {
        return (int)32L;
    }
    public static int MM_MAX_AXES_NAMELEN() {
        return (int)16L;
    }
    public static int AC_SRC_OVER() {
        return (int)0L;
    }
    public static int AC_SRC_ALPHA() {
        return (int)1L;
    }
    public static int GRADIENT_FILL_RECT_H() {
        return (int)0L;
    }
    public static int GRADIENT_FILL_RECT_V() {
        return (int)1L;
    }
    public static int GRADIENT_FILL_TRIANGLE() {
        return (int)2L;
    }
    public static int GRADIENT_FILL_OP_FLAG() {
        return (int)255L;
    }
    public static int CA_NEGATIVE() {
        return (int)1L;
    }
    public static int CA_LOG_FILTER() {
        return (int)2L;
    }
    public static int ILLUMINANT_DEVICE_DEFAULT() {
        return (int)0L;
    }
    public static int ILLUMINANT_A() {
        return (int)1L;
    }
    public static int ILLUMINANT_B() {
        return (int)2L;
    }
    public static int ILLUMINANT_C() {
        return (int)3L;
    }
    public static int ILLUMINANT_D50() {
        return (int)4L;
    }
    public static int ILLUMINANT_D55() {
        return (int)5L;
    }
    public static int ILLUMINANT_D65() {
        return (int)6L;
    }
    public static int ILLUMINANT_D75() {
        return (int)7L;
    }
    public static int ILLUMINANT_F2() {
        return (int)8L;
    }
    public static int DI_APPBANDING() {
        return (int)1L;
    }
    public static int DI_ROPS_READ_DESTINATION() {
        return (int)2L;
    }
    public static int FONTMAPPER_MAX() {
        return (int)10L;
    }
    public static int ICM_OFF() {
        return (int)1L;
    }
    public static int ICM_ON() {
        return (int)2L;
    }
    public static int ICM_QUERY() {
        return (int)3L;
    }
    public static int ICM_DONE_OUTSIDEDC() {
        return (int)4L;
    }
    public static int ENHMETA_SIGNATURE() {
        return (int)1179469088L;
    }
    public static int EMR_HEADER() {
        return (int)1L;
    }
    public static int EMR_POLYBEZIER() {
        return (int)2L;
    }
    public static int EMR_POLYGON() {
        return (int)3L;
    }
    public static int EMR_POLYLINE() {
        return (int)4L;
    }
    public static int EMR_POLYBEZIERTO() {
        return (int)5L;
    }
    public static int EMR_POLYLINETO() {
        return (int)6L;
    }
    public static int EMR_POLYPOLYLINE() {
        return (int)7L;
    }
    public static int EMR_POLYPOLYGON() {
        return (int)8L;
    }
    public static int EMR_SETWINDOWEXTEX() {
        return (int)9L;
    }
    public static int EMR_SETWINDOWORGEX() {
        return (int)10L;
    }
    public static int EMR_SETVIEWPORTEXTEX() {
        return (int)11L;
    }
    public static int EMR_SETVIEWPORTORGEX() {
        return (int)12L;
    }
    public static int EMR_SETBRUSHORGEX() {
        return (int)13L;
    }
    public static int EMR_EOF() {
        return (int)14L;
    }
    public static int EMR_SETPIXELV() {
        return (int)15L;
    }
    public static int EMR_SETMAPPERFLAGS() {
        return (int)16L;
    }
    public static int EMR_SETMAPMODE() {
        return (int)17L;
    }
    public static int EMR_SETBKMODE() {
        return (int)18L;
    }
    public static int EMR_SETPOLYFILLMODE() {
        return (int)19L;
    }
    public static int EMR_SETROP2() {
        return (int)20L;
    }
    public static int EMR_SETSTRETCHBLTMODE() {
        return (int)21L;
    }
    public static int EMR_SETTEXTALIGN() {
        return (int)22L;
    }
    public static int EMR_SETCOLORADJUSTMENT() {
        return (int)23L;
    }
    public static int EMR_SETTEXTCOLOR() {
        return (int)24L;
    }
    public static int EMR_SETBKCOLOR() {
        return (int)25L;
    }
    public static int EMR_OFFSETCLIPRGN() {
        return (int)26L;
    }
    public static int EMR_MOVETOEX() {
        return (int)27L;
    }
    public static int EMR_SETMETARGN() {
        return (int)28L;
    }
    public static int EMR_EXCLUDECLIPRECT() {
        return (int)29L;
    }
    public static int EMR_INTERSECTCLIPRECT() {
        return (int)30L;
    }
    public static int EMR_SCALEVIEWPORTEXTEX() {
        return (int)31L;
    }
    public static int EMR_SCALEWINDOWEXTEX() {
        return (int)32L;
    }
    public static int EMR_SAVEDC() {
        return (int)33L;
    }
    public static int EMR_RESTOREDC() {
        return (int)34L;
    }
    public static int EMR_SETWORLDTRANSFORM() {
        return (int)35L;
    }
    public static int EMR_MODIFYWORLDTRANSFORM() {
        return (int)36L;
    }
    public static int EMR_SELECTOBJECT() {
        return (int)37L;
    }
    public static int EMR_CREATEPEN() {
        return (int)38L;
    }
    public static int EMR_CREATEBRUSHINDIRECT() {
        return (int)39L;
    }
    public static int EMR_DELETEOBJECT() {
        return (int)40L;
    }
    public static int EMR_ANGLEARC() {
        return (int)41L;
    }
    public static int EMR_ELLIPSE() {
        return (int)42L;
    }
    public static int EMR_RECTANGLE() {
        return (int)43L;
    }
    public static int EMR_ROUNDRECT() {
        return (int)44L;
    }
    public static int EMR_ARC() {
        return (int)45L;
    }
    public static int EMR_CHORD() {
        return (int)46L;
    }
    public static int EMR_PIE() {
        return (int)47L;
    }
    public static int EMR_SELECTPALETTE() {
        return (int)48L;
    }
    public static int EMR_CREATEPALETTE() {
        return (int)49L;
    }
    public static int EMR_SETPALETTEENTRIES() {
        return (int)50L;
    }
    public static int EMR_RESIZEPALETTE() {
        return (int)51L;
    }
    public static int EMR_REALIZEPALETTE() {
        return (int)52L;
    }
    public static int EMR_EXTFLOODFILL() {
        return (int)53L;
    }
    public static int EMR_LINETO() {
        return (int)54L;
    }
    public static int EMR_ARCTO() {
        return (int)55L;
    }
    public static int EMR_POLYDRAW() {
        return (int)56L;
    }
    public static int EMR_SETARCDIRECTION() {
        return (int)57L;
    }
    public static int EMR_SETMITERLIMIT() {
        return (int)58L;
    }
    public static int EMR_BEGINPATH() {
        return (int)59L;
    }
    public static int EMR_ENDPATH() {
        return (int)60L;
    }
    public static int EMR_CLOSEFIGURE() {
        return (int)61L;
    }
    public static int EMR_FILLPATH() {
        return (int)62L;
    }
    public static int EMR_STROKEANDFILLPATH() {
        return (int)63L;
    }
    public static int EMR_STROKEPATH() {
        return (int)64L;
    }
    public static int EMR_FLATTENPATH() {
        return (int)65L;
    }
    public static int EMR_WIDENPATH() {
        return (int)66L;
    }
    public static int EMR_SELECTCLIPPATH() {
        return (int)67L;
    }
    public static int EMR_ABORTPATH() {
        return (int)68L;
    }
    public static int EMR_GDICOMMENT() {
        return (int)70L;
    }
    public static int EMR_FILLRGN() {
        return (int)71L;
    }
    public static int EMR_FRAMERGN() {
        return (int)72L;
    }
    public static int EMR_INVERTRGN() {
        return (int)73L;
    }
    public static int EMR_PAINTRGN() {
        return (int)74L;
    }
    public static int EMR_EXTSELECTCLIPRGN() {
        return (int)75L;
    }
    public static int EMR_BITBLT() {
        return (int)76L;
    }
    public static int EMR_STRETCHBLT() {
        return (int)77L;
    }
    public static int EMR_MASKBLT() {
        return (int)78L;
    }
    public static int EMR_PLGBLT() {
        return (int)79L;
    }
    public static int EMR_SETDIBITSTODEVICE() {
        return (int)80L;
    }
    public static int EMR_STRETCHDIBITS() {
        return (int)81L;
    }
    public static int EMR_EXTCREATEFONTINDIRECTW() {
        return (int)82L;
    }
    public static int EMR_EXTTEXTOUTA() {
        return (int)83L;
    }
    public static int EMR_EXTTEXTOUTW() {
        return (int)84L;
    }
    public static int EMR_POLYBEZIER16() {
        return (int)85L;
    }
    public static int EMR_POLYGON16() {
        return (int)86L;
    }
    public static int EMR_POLYLINE16() {
        return (int)87L;
    }
    public static int EMR_POLYBEZIERTO16() {
        return (int)88L;
    }
    public static int EMR_POLYLINETO16() {
        return (int)89L;
    }
    public static int EMR_POLYPOLYLINE16() {
        return (int)90L;
    }
    public static int EMR_POLYPOLYGON16() {
        return (int)91L;
    }
    public static int EMR_POLYDRAW16() {
        return (int)92L;
    }
    public static int EMR_CREATEMONOBRUSH() {
        return (int)93L;
    }
    public static int EMR_CREATEDIBPATTERNBRUSHPT() {
        return (int)94L;
    }
    public static int EMR_EXTCREATEPEN() {
        return (int)95L;
    }
    public static int EMR_POLYTEXTOUTA() {
        return (int)96L;
    }
    public static int EMR_POLYTEXTOUTW() {
        return (int)97L;
    }
    public static int EMR_SETICMMODE() {
        return (int)98L;
    }
    public static int EMR_CREATECOLORSPACE() {
        return (int)99L;
    }
    public static int EMR_SETCOLORSPACE() {
        return (int)100L;
    }
    public static int EMR_DELETECOLORSPACE() {
        return (int)101L;
    }
    public static int EMR_GLSRECORD() {
        return (int)102L;
    }
    public static int EMR_GLSBOUNDEDRECORD() {
        return (int)103L;
    }
    public static int EMR_PIXELFORMAT() {
        return (int)104L;
    }
    public static int EMR_RESERVED_105() {
        return (int)105L;
    }
    public static int EMR_RESERVED_106() {
        return (int)106L;
    }
    public static int EMR_RESERVED_107() {
        return (int)107L;
    }
    public static int EMR_RESERVED_108() {
        return (int)108L;
    }
    public static int EMR_RESERVED_109() {
        return (int)109L;
    }
    public static int EMR_RESERVED_110() {
        return (int)110L;
    }
    public static int EMR_COLORCORRECTPALETTE() {
        return (int)111L;
    }
    public static int EMR_SETICMPROFILEA() {
        return (int)112L;
    }
    public static int EMR_SETICMPROFILEW() {
        return (int)113L;
    }
    public static int EMR_ALPHABLEND() {
        return (int)114L;
    }
    public static int EMR_SETLAYOUT() {
        return (int)115L;
    }
    public static int EMR_TRANSPARENTBLT() {
        return (int)116L;
    }
    public static int EMR_RESERVED_117() {
        return (int)117L;
    }
    public static int EMR_GRADIENTFILL() {
        return (int)118L;
    }
    public static int EMR_RESERVED_119() {
        return (int)119L;
    }
    public static int EMR_RESERVED_120() {
        return (int)120L;
    }
    public static int EMR_COLORMATCHTOTARGETW() {
        return (int)121L;
    }
    public static int EMR_CREATECOLORSPACEW() {
        return (int)122L;
    }
    public static int EMR_MIN() {
        return (int)1L;
    }
    public static int EMR_MAX() {
        return (int)122L;
    }
    public static int SETICMPROFILE_EMBEDED() {
        return (int)1L;
    }
    public static int CREATECOLORSPACE_EMBEDED() {
        return (int)1L;
    }
    public static int COLORMATCHTOTARGET_EMBEDED() {
        return (int)1L;
    }
    public static int GDICOMMENT_IDENTIFIER() {
        return (int)1128875079L;
    }
    public static int GDICOMMENT_BEGINGROUP() {
        return (int)2L;
    }
    public static int GDICOMMENT_ENDGROUP() {
        return (int)3L;
    }
    public static int GDICOMMENT_MULTIFORMATS() {
        return (int)1073741828L;
    }
    public static int EPS_SIGNATURE() {
        return (int)1179865157L;
    }
    public static int GDICOMMENT_UNICODE_STRING() {
        return (int)64L;
    }
    public static int GDICOMMENT_UNICODE_END() {
        return (int)128L;
    }
    public static int WGL_FONT_LINES() {
        return (int)0L;
    }
    public static int WGL_FONT_POLYGONS() {
        return (int)1L;
    }
    public static int LPD_DOUBLEBUFFER() {
        return (int)1L;
    }
    public static int LPD_STEREO() {
        return (int)2L;
    }
    public static int LPD_SUPPORT_GDI() {
        return (int)16L;
    }
    public static int LPD_SUPPORT_OPENGL() {
        return (int)32L;
    }
    public static int LPD_SHARE_DEPTH() {
        return (int)64L;
    }
    public static int LPD_SHARE_STENCIL() {
        return (int)128L;
    }
    public static int LPD_SHARE_ACCUM() {
        return (int)256L;
    }
    public static int LPD_SWAP_EXCHANGE() {
        return (int)512L;
    }
    public static int LPD_SWAP_COPY() {
        return (int)1024L;
    }
    public static int LPD_TRANSPARENT() {
        return (int)4096L;
    }
    public static int LPD_TYPE_RGBA() {
        return (int)0L;
    }
    public static int LPD_TYPE_COLORINDEX() {
        return (int)1L;
    }
    public static int WGL_SWAP_MAIN_PLANE() {
        return (int)1L;
    }
    public static int WGL_SWAP_OVERLAY1() {
        return (int)2L;
    }
    public static int WGL_SWAP_OVERLAY2() {
        return (int)4L;
    }
    public static int WGL_SWAP_OVERLAY3() {
        return (int)8L;
    }
    public static int WGL_SWAP_OVERLAY4() {
        return (int)16L;
    }
    public static int WGL_SWAP_OVERLAY5() {
        return (int)32L;
    }
    public static int WGL_SWAP_OVERLAY6() {
        return (int)64L;
    }
    public static int WGL_SWAP_OVERLAY7() {
        return (int)128L;
    }
    public static int WGL_SWAP_OVERLAY8() {
        return (int)256L;
    }
    public static int WGL_SWAP_OVERLAY9() {
        return (int)512L;
    }
    public static int WGL_SWAP_OVERLAY10() {
        return (int)1024L;
    }
    public static int WGL_SWAP_OVERLAY11() {
        return (int)2048L;
    }
    public static int WGL_SWAP_OVERLAY12() {
        return (int)4096L;
    }
    public static int WGL_SWAP_OVERLAY13() {
        return (int)8192L;
    }
    public static int WGL_SWAP_OVERLAY14() {
        return (int)16384L;
    }
    public static int WGL_SWAP_OVERLAY15() {
        return (int)32768L;
    }
    public static int WGL_SWAP_UNDERLAY1() {
        return (int)65536L;
    }
    public static int WGL_SWAP_UNDERLAY2() {
        return (int)131072L;
    }
    public static int WGL_SWAP_UNDERLAY3() {
        return (int)262144L;
    }
    public static int WGL_SWAP_UNDERLAY4() {
        return (int)524288L;
    }
    public static int WGL_SWAP_UNDERLAY5() {
        return (int)1048576L;
    }
    public static int WGL_SWAP_UNDERLAY6() {
        return (int)2097152L;
    }
    public static int WGL_SWAP_UNDERLAY7() {
        return (int)4194304L;
    }
    public static int WGL_SWAP_UNDERLAY8() {
        return (int)8388608L;
    }
    public static int WGL_SWAP_UNDERLAY9() {
        return (int)16777216L;
    }
    public static int WGL_SWAP_UNDERLAY10() {
        return (int)33554432L;
    }
    public static int WGL_SWAP_UNDERLAY11() {
        return (int)67108864L;
    }
    public static int WGL_SWAP_UNDERLAY12() {
        return (int)134217728L;
    }
    public static int WGL_SWAP_UNDERLAY13() {
        return (int)268435456L;
    }
    public static int WGL_SWAP_UNDERLAY14() {
        return (int)536870912L;
    }
    public static int WGL_SWAP_UNDERLAY15() {
        return (int)1073741824L;
    }
    public static int WGL_SWAPMULTIPLE_MAX() {
        return (int)16L;
    }
    public static int DIFFERENCE() {
        return (int)11L;
    }
    public static int SB_HORZ() {
        return (int)0L;
    }
    public static int SB_VERT() {
        return (int)1L;
    }
    public static int SB_CTL() {
        return (int)2L;
    }
    public static int SB_BOTH() {
        return (int)3L;
    }
    public static int SB_LINEUP() {
        return (int)0L;
    }
    public static int SB_LINELEFT() {
        return (int)0L;
    }
    public static int SB_LINEDOWN() {
        return (int)1L;
    }
    public static int SB_LINERIGHT() {
        return (int)1L;
    }
    public static int SB_PAGEUP() {
        return (int)2L;
    }
    public static int SB_PAGELEFT() {
        return (int)2L;
    }
    public static int SB_PAGEDOWN() {
        return (int)3L;
    }
    public static int SB_PAGERIGHT() {
        return (int)3L;
    }
    public static int SB_THUMBPOSITION() {
        return (int)4L;
    }
    public static int SB_THUMBTRACK() {
        return (int)5L;
    }
    public static int SB_TOP() {
        return (int)6L;
    }
    public static int SB_LEFT() {
        return (int)6L;
    }
    public static int SB_BOTTOM() {
        return (int)7L;
    }
    public static int SB_RIGHT() {
        return (int)7L;
    }
    public static int SB_ENDSCROLL() {
        return (int)8L;
    }
    public static int SW_HIDE() {
        return (int)0L;
    }
    public static int SW_SHOWNORMAL() {
        return (int)1L;
    }
    public static int SW_NORMAL() {
        return (int)1L;
    }
    public static int SW_SHOWMINIMIZED() {
        return (int)2L;
    }
    public static int SW_SHOWMAXIMIZED() {
        return (int)3L;
    }
    public static int SW_MAXIMIZE() {
        return (int)3L;
    }
    public static int SW_SHOWNOACTIVATE() {
        return (int)4L;
    }
    public static int SW_SHOW() {
        return (int)5L;
    }
    public static int SW_MINIMIZE() {
        return (int)6L;
    }
    public static int SW_SHOWMINNOACTIVE() {
        return (int)7L;
    }
    public static int SW_SHOWNA() {
        return (int)8L;
    }
    public static int SW_RESTORE() {
        return (int)9L;
    }
    public static int SW_SHOWDEFAULT() {
        return (int)10L;
    }
    public static int SW_FORCEMINIMIZE() {
        return (int)11L;
    }
    public static int SW_MAX() {
        return (int)11L;
    }
    public static int HIDE_WINDOW() {
        return (int)0L;
    }
    public static int SHOW_OPENWINDOW() {
        return (int)1L;
    }
    public static int SHOW_ICONWINDOW() {
        return (int)2L;
    }
    public static int SHOW_FULLSCREEN() {
        return (int)3L;
    }
    public static int SHOW_OPENNOACTIVATE() {
        return (int)4L;
    }
    public static int SW_PARENTCLOSING() {
        return (int)1L;
    }
    public static int SW_OTHERZOOM() {
        return (int)2L;
    }
    public static int SW_PARENTOPENING() {
        return (int)3L;
    }
    public static int SW_OTHERUNZOOM() {
        return (int)4L;
    }
    public static int AW_HOR_POSITIVE() {
        return (int)1L;
    }
    public static int AW_HOR_NEGATIVE() {
        return (int)2L;
    }
    public static int AW_VER_POSITIVE() {
        return (int)4L;
    }
}



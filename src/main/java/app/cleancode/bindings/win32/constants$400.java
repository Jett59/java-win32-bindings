// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$400 {

    static final FunctionDescriptor SetActiveWindow$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SetActiveWindow$MH = RuntimeHelper.downcallHandle(
        "SetActiveWindow",
        constants$400.SetActiveWindow$FUNC
    );
    static final FunctionDescriptor GetForegroundWindow$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle GetForegroundWindow$MH = RuntimeHelper.downcallHandle(
        "GetForegroundWindow",
        constants$400.GetForegroundWindow$FUNC
    );
    static final FunctionDescriptor PaintDesktop$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PaintDesktop$MH = RuntimeHelper.downcallHandle(
        "PaintDesktop",
        constants$400.PaintDesktop$FUNC
    );
    static final FunctionDescriptor SwitchToThisWindow$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle SwitchToThisWindow$MH = RuntimeHelper.downcallHandle(
        "SwitchToThisWindow",
        constants$400.SwitchToThisWindow$FUNC
    );
    static final FunctionDescriptor SetForegroundWindow$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SetForegroundWindow$MH = RuntimeHelper.downcallHandle(
        "SetForegroundWindow",
        constants$400.SetForegroundWindow$FUNC
    );
    static final FunctionDescriptor AllowSetForegroundWindow$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle AllowSetForegroundWindow$MH = RuntimeHelper.downcallHandle(
        "AllowSetForegroundWindow",
        constants$400.AllowSetForegroundWindow$FUNC
    );
}



// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class MFT_ENUM_DATA_V0 {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG_LONG$LAYOUT.withName("StartFileReferenceNumber"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("LowUsn"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("HighUsn")
    );
    public static MemoryLayout $LAYOUT() {
        return MFT_ENUM_DATA_V0.$struct$LAYOUT;
    }
    static final VarHandle StartFileReferenceNumber$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("StartFileReferenceNumber"));
    public static VarHandle StartFileReferenceNumber$VH() {
        return MFT_ENUM_DATA_V0.StartFileReferenceNumber$VH;
    }
    public static long StartFileReferenceNumber$get(MemorySegment seg) {
        return (long)MFT_ENUM_DATA_V0.StartFileReferenceNumber$VH.get(seg);
    }
    public static void StartFileReferenceNumber$set( MemorySegment seg, long x) {
        MFT_ENUM_DATA_V0.StartFileReferenceNumber$VH.set(seg, x);
    }
    public static long StartFileReferenceNumber$get(MemorySegment seg, long index) {
        return (long)MFT_ENUM_DATA_V0.StartFileReferenceNumber$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void StartFileReferenceNumber$set(MemorySegment seg, long index, long x) {
        MFT_ENUM_DATA_V0.StartFileReferenceNumber$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle LowUsn$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("LowUsn"));
    public static VarHandle LowUsn$VH() {
        return MFT_ENUM_DATA_V0.LowUsn$VH;
    }
    public static long LowUsn$get(MemorySegment seg) {
        return (long)MFT_ENUM_DATA_V0.LowUsn$VH.get(seg);
    }
    public static void LowUsn$set( MemorySegment seg, long x) {
        MFT_ENUM_DATA_V0.LowUsn$VH.set(seg, x);
    }
    public static long LowUsn$get(MemorySegment seg, long index) {
        return (long)MFT_ENUM_DATA_V0.LowUsn$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void LowUsn$set(MemorySegment seg, long index, long x) {
        MFT_ENUM_DATA_V0.LowUsn$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle HighUsn$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("HighUsn"));
    public static VarHandle HighUsn$VH() {
        return MFT_ENUM_DATA_V0.HighUsn$VH;
    }
    public static long HighUsn$get(MemorySegment seg) {
        return (long)MFT_ENUM_DATA_V0.HighUsn$VH.get(seg);
    }
    public static void HighUsn$set( MemorySegment seg, long x) {
        MFT_ENUM_DATA_V0.HighUsn$VH.set(seg, x);
    }
    public static long HighUsn$get(MemorySegment seg, long index) {
        return (long)MFT_ENUM_DATA_V0.HighUsn$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void HighUsn$set(MemorySegment seg, long index, long x) {
        MFT_ENUM_DATA_V0.HighUsn$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}



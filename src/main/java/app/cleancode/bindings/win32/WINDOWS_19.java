// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class WINDOWS_19 extends WINDOWS_18 {

    public static int ACCESS_MAX_MS_ACE_TYPE() {
        return (int)8L;
    }
    public static int ACCESS_ALLOWED_CALLBACK_ACE_TYPE() {
        return (int)9L;
    }
    public static int ACCESS_DENIED_CALLBACK_ACE_TYPE() {
        return (int)10L;
    }
    public static int ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE() {
        return (int)11L;
    }
    public static int ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE() {
        return (int)12L;
    }
    public static int SYSTEM_AUDIT_CALLBACK_ACE_TYPE() {
        return (int)13L;
    }
    public static int SYSTEM_ALARM_CALLBACK_ACE_TYPE() {
        return (int)14L;
    }
    public static int SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE() {
        return (int)15L;
    }
    public static int SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE() {
        return (int)16L;
    }
    public static int SYSTEM_MANDATORY_LABEL_ACE_TYPE() {
        return (int)17L;
    }
    public static int SYSTEM_RESOURCE_ATTRIBUTE_ACE_TYPE() {
        return (int)18L;
    }
    public static int SYSTEM_SCOPED_POLICY_ID_ACE_TYPE() {
        return (int)19L;
    }
    public static int SYSTEM_PROCESS_TRUST_LABEL_ACE_TYPE() {
        return (int)20L;
    }
    public static int SYSTEM_ACCESS_FILTER_ACE_TYPE() {
        return (int)21L;
    }
    public static int ACCESS_MAX_MS_V5_ACE_TYPE() {
        return (int)21L;
    }
    public static int OBJECT_INHERIT_ACE() {
        return (int)1L;
    }
    public static int CONTAINER_INHERIT_ACE() {
        return (int)2L;
    }
    public static int NO_PROPAGATE_INHERIT_ACE() {
        return (int)4L;
    }
    public static int INHERIT_ONLY_ACE() {
        return (int)8L;
    }
    public static int INHERITED_ACE() {
        return (int)16L;
    }
    public static int VALID_INHERIT_FLAGS() {
        return (int)31L;
    }
    public static int CRITICAL_ACE_FLAG() {
        return (int)32L;
    }
    public static int SUCCESSFUL_ACCESS_ACE_FLAG() {
        return (int)64L;
    }
    public static int FAILED_ACCESS_ACE_FLAG() {
        return (int)128L;
    }
    public static int TRUST_PROTECTED_FILTER_ACE_FLAG() {
        return (int)64L;
    }
    public static int SYSTEM_MANDATORY_LABEL_VALID_MASK() {
        return (int)7L;
    }
    public static int SYSTEM_PROCESS_TRUST_NOCONSTRAINT_MASK() {
        return (int)4294967295L;
    }
    public static int SYSTEM_ACCESS_FILTER_NOCONSTRAINT_MASK() {
        return (int)4294967295L;
    }
    public static int SECURITY_DESCRIPTOR_REVISION() {
        return (int)1L;
    }
    public static int SECURITY_DESCRIPTOR_REVISION1() {
        return (int)1L;
    }
    public static long SECURITY_DESCRIPTOR_MIN_LENGTH() {
        return 40L;
    }
    public static int SE_OWNER_DEFAULTED() {
        return (int)1L;
    }
    public static int SE_GROUP_DEFAULTED() {
        return (int)2L;
    }
    public static int SE_DACL_PRESENT() {
        return (int)4L;
    }
    public static int SE_DACL_DEFAULTED() {
        return (int)8L;
    }
    public static int SE_SACL_PRESENT() {
        return (int)16L;
    }
    public static int SE_SACL_DEFAULTED() {
        return (int)32L;
    }
    public static int SE_DACL_AUTO_INHERIT_REQ() {
        return (int)256L;
    }
    public static int SE_SACL_AUTO_INHERIT_REQ() {
        return (int)512L;
    }
    public static int SE_DACL_AUTO_INHERITED() {
        return (int)1024L;
    }
    public static int SE_SACL_AUTO_INHERITED() {
        return (int)2048L;
    }
    public static int SE_DACL_PROTECTED() {
        return (int)4096L;
    }
    public static int SE_SACL_PROTECTED() {
        return (int)8192L;
    }
    public static int SE_RM_CONTROL_VALID() {
        return (int)16384L;
    }
    public static int SE_SELF_RELATIVE() {
        return (int)32768L;
    }
    public static MemorySegment ACCESS_DS_SOURCE_A() {
        return constants$726.ACCESS_DS_SOURCE_A$SEGMENT;
    }
    public static MemorySegment ACCESS_DS_SOURCE_W() {
        return constants$727.ACCESS_DS_SOURCE_W$SEGMENT;
    }
    public static MemorySegment ACCESS_DS_OBJECT_TYPE_NAME_A() {
        return constants$727.ACCESS_DS_OBJECT_TYPE_NAME_A$SEGMENT;
    }
    public static MemorySegment ACCESS_DS_OBJECT_TYPE_NAME_W() {
        return constants$727.ACCESS_DS_OBJECT_TYPE_NAME_W$SEGMENT;
    }
    public static int SE_PRIVILEGE_ENABLED_BY_DEFAULT() {
        return (int)1L;
    }
    public static int SE_PRIVILEGE_ENABLED() {
        return (int)2L;
    }
    public static int SE_PRIVILEGE_REMOVED() {
        return (int)4L;
    }
    public static int SE_PRIVILEGE_USED_FOR_ACCESS() {
        return (int)2147483648L;
    }
    public static int SE_PRIVILEGE_VALID_ATTRIBUTES() {
        return (int)2147483655L;
    }
    public static int PRIVILEGE_SET_ALL_NECESSARY() {
        return (int)1L;
    }
    public static int ACCESS_REASON_STAGING_MASK() {
        return (int)2147483648L;
    }
    public static MemorySegment SE_CREATE_TOKEN_NAME() {
        return constants$727.SE_CREATE_TOKEN_NAME$SEGMENT;
    }
    public static MemorySegment SE_ASSIGNPRIMARYTOKEN_NAME() {
        return constants$727.SE_ASSIGNPRIMARYTOKEN_NAME$SEGMENT;
    }
    public static MemorySegment SE_LOCK_MEMORY_NAME() {
        return constants$727.SE_LOCK_MEMORY_NAME$SEGMENT;
    }
    public static MemorySegment SE_INCREASE_QUOTA_NAME() {
        return constants$728.SE_INCREASE_QUOTA_NAME$SEGMENT;
    }
    public static MemorySegment SE_UNSOLICITED_INPUT_NAME() {
        return constants$728.SE_UNSOLICITED_INPUT_NAME$SEGMENT;
    }
    public static MemorySegment SE_MACHINE_ACCOUNT_NAME() {
        return constants$728.SE_MACHINE_ACCOUNT_NAME$SEGMENT;
    }
    public static MemorySegment SE_TCB_NAME() {
        return constants$728.SE_TCB_NAME$SEGMENT;
    }
    public static MemorySegment SE_SECURITY_NAME() {
        return constants$728.SE_SECURITY_NAME$SEGMENT;
    }
    public static MemorySegment SE_TAKE_OWNERSHIP_NAME() {
        return constants$728.SE_TAKE_OWNERSHIP_NAME$SEGMENT;
    }
    public static MemorySegment SE_LOAD_DRIVER_NAME() {
        return constants$729.SE_LOAD_DRIVER_NAME$SEGMENT;
    }
    public static MemorySegment SE_SYSTEM_PROFILE_NAME() {
        return constants$729.SE_SYSTEM_PROFILE_NAME$SEGMENT;
    }
    public static MemorySegment SE_SYSTEMTIME_NAME() {
        return constants$729.SE_SYSTEMTIME_NAME$SEGMENT;
    }
    public static MemorySegment SE_PROF_SINGLE_PROCESS_NAME() {
        return constants$729.SE_PROF_SINGLE_PROCESS_NAME$SEGMENT;
    }
    public static MemorySegment SE_INC_BASE_PRIORITY_NAME() {
        return constants$729.SE_INC_BASE_PRIORITY_NAME$SEGMENT;
    }
    public static MemorySegment SE_CREATE_PAGEFILE_NAME() {
        return constants$729.SE_CREATE_PAGEFILE_NAME$SEGMENT;
    }
    public static MemorySegment SE_CREATE_PERMANENT_NAME() {
        return constants$730.SE_CREATE_PERMANENT_NAME$SEGMENT;
    }
    public static MemorySegment SE_BACKUP_NAME() {
        return constants$730.SE_BACKUP_NAME$SEGMENT;
    }
    public static MemorySegment SE_RESTORE_NAME() {
        return constants$730.SE_RESTORE_NAME$SEGMENT;
    }
    public static MemorySegment SE_SHUTDOWN_NAME() {
        return constants$730.SE_SHUTDOWN_NAME$SEGMENT;
    }
    public static MemorySegment SE_DEBUG_NAME() {
        return constants$730.SE_DEBUG_NAME$SEGMENT;
    }
    public static MemorySegment SE_AUDIT_NAME() {
        return constants$730.SE_AUDIT_NAME$SEGMENT;
    }
    public static MemorySegment SE_SYSTEM_ENVIRONMENT_NAME() {
        return constants$731.SE_SYSTEM_ENVIRONMENT_NAME$SEGMENT;
    }
    public static MemorySegment SE_CHANGE_NOTIFY_NAME() {
        return constants$731.SE_CHANGE_NOTIFY_NAME$SEGMENT;
    }
    public static MemorySegment SE_REMOTE_SHUTDOWN_NAME() {
        return constants$731.SE_REMOTE_SHUTDOWN_NAME$SEGMENT;
    }
    public static MemorySegment SE_UNDOCK_NAME() {
        return constants$731.SE_UNDOCK_NAME$SEGMENT;
    }
    public static MemorySegment SE_SYNC_AGENT_NAME() {
        return constants$731.SE_SYNC_AGENT_NAME$SEGMENT;
    }
    public static MemorySegment SE_ENABLE_DELEGATION_NAME() {
        return constants$731.SE_ENABLE_DELEGATION_NAME$SEGMENT;
    }
    public static MemorySegment SE_MANAGE_VOLUME_NAME() {
        return constants$732.SE_MANAGE_VOLUME_NAME$SEGMENT;
    }
    public static MemorySegment SE_IMPERSONATE_NAME() {
        return constants$732.SE_IMPERSONATE_NAME$SEGMENT;
    }
    public static MemorySegment SE_CREATE_GLOBAL_NAME() {
        return constants$732.SE_CREATE_GLOBAL_NAME$SEGMENT;
    }
    public static MemorySegment SE_TRUSTED_CREDMAN_ACCESS_NAME() {
        return constants$732.SE_TRUSTED_CREDMAN_ACCESS_NAME$SEGMENT;
    }
    public static MemorySegment SE_RELABEL_NAME() {
        return constants$732.SE_RELABEL_NAME$SEGMENT;
    }
    public static MemorySegment SE_INC_WORKING_SET_NAME() {
        return constants$732.SE_INC_WORKING_SET_NAME$SEGMENT;
    }
    public static MemorySegment SE_TIME_ZONE_NAME() {
        return constants$733.SE_TIME_ZONE_NAME$SEGMENT;
    }
    public static MemorySegment SE_CREATE_SYMBOLIC_LINK_NAME() {
        return constants$733.SE_CREATE_SYMBOLIC_LINK_NAME$SEGMENT;
    }
    public static MemorySegment SE_DELEGATE_SESSION_USER_IMPERSONATE_NAME() {
        return constants$733.SE_DELEGATE_SESSION_USER_IMPERSONATE_NAME$SEGMENT;
    }
    public static MemorySegment SE_ACTIVATE_AS_USER_CAPABILITY() {
        return constants$733.SE_ACTIVATE_AS_USER_CAPABILITY$SEGMENT;
    }
    public static MemorySegment SE_CONSTRAINED_IMPERSONATION_CAPABILITY() {
        return constants$733.SE_CONSTRAINED_IMPERSONATION_CAPABILITY$SEGMENT;
    }
    public static MemorySegment SE_SESSION_IMPERSONATION_CAPABILITY() {
        return constants$733.SE_SESSION_IMPERSONATION_CAPABILITY$SEGMENT;
    }
    public static MemorySegment SE_MUMA_CAPABILITY() {
        return constants$734.SE_MUMA_CAPABILITY$SEGMENT;
    }
    public static MemorySegment SE_DEVELOPMENT_MODE_NETWORK_CAPABILITY() {
        return constants$734.SE_DEVELOPMENT_MODE_NETWORK_CAPABILITY$SEGMENT;
    }
    public static int SECURITY_MAX_IMPERSONATION_LEVEL() {
        return (int)3L;
    }
    public static int SECURITY_MIN_IMPERSONATION_LEVEL() {
        return (int)0L;
    }
    public static int DEFAULT_IMPERSONATION_LEVEL() {
        return (int)2L;
    }
    public static int TOKEN_ASSIGN_PRIMARY() {
        return (int)1L;
    }
    public static int TOKEN_DUPLICATE() {
        return (int)2L;
    }
    public static int TOKEN_IMPERSONATE() {
        return (int)4L;
    }
    public static int TOKEN_QUERY() {
        return (int)8L;
    }
    public static int TOKEN_QUERY_SOURCE() {
        return (int)16L;
    }
    public static int TOKEN_ADJUST_PRIVILEGES() {
        return (int)32L;
    }
    public static int TOKEN_ADJUST_GROUPS() {
        return (int)64L;
    }
    public static int TOKEN_ADJUST_DEFAULT() {
        return (int)128L;
    }
    public static int TOKEN_ADJUST_SESSIONID() {
        return (int)256L;
    }
    public static int TOKEN_ALL_ACCESS_P() {
        return (int)983295L;
    }
    public static int TOKEN_ALL_ACCESS() {
        return (int)983551L;
    }
    public static int TOKEN_READ() {
        return (int)131080L;
    }
    public static int TOKEN_WRITE() {
        return (int)131296L;
    }
    public static int TOKEN_EXECUTE() {
        return (int)131072L;
    }
    public static int TOKEN_TRUST_CONSTRAINT_MASK() {
        return (int)131096L;
    }
    public static int TOKEN_ACCESS_PSEUDO_HANDLE_WIN8() {
        return (int)24L;
    }
    public static int TOKEN_ACCESS_PSEUDO_HANDLE() {
        return (int)24L;
    }
    public static long TOKEN_USER_MAX_SIZE() {
        return 84L;
    }
    public static long TOKEN_OWNER_MAX_SIZE() {
        return 76L;
    }
    public static int TOKEN_MANDATORY_POLICY_VALID_MASK() {
        return (int)3L;
    }
    public static long TOKEN_INTEGRITY_LEVEL_MAX_SIZE() {
        return 84L;
    }
    public static int POLICY_AUDIT_SUBCATEGORY_COUNT() {
        return (int)59L;
    }
    public static long TOKEN_APPCONTAINER_SID_MAX_SIZE() {
        return 76L;
    }
    public static int CLAIM_SECURITY_ATTRIBUTE_VALID_FLAGS() {
        return (int)63L;
    }
    public static int CLAIM_SECURITY_ATTRIBUTE_CUSTOM_FLAGS() {
        return (int)4294901760L;
    }
    public static int CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION() {
        return (int)1L;
    }
    public static int SECURITY_DYNAMIC_TRACKING() {
        return (int)1L;
    }
    public static int SECURITY_STATIC_TRACKING() {
        return (int)0L;
    }
    public static int OWNER_SECURITY_INFORMATION() {
        return (int)1L;
    }
    public static int GROUP_SECURITY_INFORMATION() {
        return (int)2L;
    }
    public static int DACL_SECURITY_INFORMATION() {
        return (int)4L;
    }
    public static int SACL_SECURITY_INFORMATION() {
        return (int)8L;
    }
    public static int LABEL_SECURITY_INFORMATION() {
        return (int)16L;
    }
    public static int ATTRIBUTE_SECURITY_INFORMATION() {
        return (int)32L;
    }
    public static int SCOPE_SECURITY_INFORMATION() {
        return (int)64L;
    }
    public static int PROCESS_TRUST_LABEL_SECURITY_INFORMATION() {
        return (int)128L;
    }
    public static int ACCESS_FILTER_SECURITY_INFORMATION() {
        return (int)256L;
    }
    public static int BACKUP_SECURITY_INFORMATION() {
        return (int)65536L;
    }
    public static int PROTECTED_DACL_SECURITY_INFORMATION() {
        return (int)2147483648L;
    }
    public static int PROTECTED_SACL_SECURITY_INFORMATION() {
        return (int)1073741824L;
    }
    public static int UNPROTECTED_DACL_SECURITY_INFORMATION() {
        return (int)536870912L;
    }
    public static int UNPROTECTED_SACL_SECURITY_INFORMATION() {
        return (int)268435456L;
    }
    public static int SE_SIGNING_LEVEL_DEVELOPER() {
        return (int)3L;
    }
    public static int SE_SIGNING_LEVEL_ANTIMALWARE() {
        return (int)7L;
    }
    public static int PROCESS_TERMINATE() {
        return (int)1L;
    }
    public static int PROCESS_CREATE_THREAD() {
        return (int)2L;
    }
    public static int PROCESS_SET_SESSIONID() {
        return (int)4L;
    }
    public static int PROCESS_VM_OPERATION() {
        return (int)8L;
    }
    public static int PROCESS_VM_READ() {
        return (int)16L;
    }
    public static int PROCESS_VM_WRITE() {
        return (int)32L;
    }
    public static int PROCESS_DUP_HANDLE() {
        return (int)64L;
    }
    public static int PROCESS_CREATE_PROCESS() {
        return (int)128L;
    }
    public static int PROCESS_SET_QUOTA() {
        return (int)256L;
    }
    public static int PROCESS_SET_INFORMATION() {
        return (int)512L;
    }
    public static int PROCESS_QUERY_INFORMATION() {
        return (int)1024L;
    }
    public static int PROCESS_SUSPEND_RESUME() {
        return (int)2048L;
    }
    public static int PROCESS_QUERY_LIMITED_INFORMATION() {
        return (int)4096L;
    }
    public static int PROCESS_SET_LIMITED_INFORMATION() {
        return (int)8192L;
    }
    public static int PROCESS_ALL_ACCESS() {
        return (int)2097151L;
    }
    public static int THREAD_TERMINATE() {
        return (int)1L;
    }
    public static int THREAD_SUSPEND_RESUME() {
        return (int)2L;
    }
    public static int THREAD_GET_CONTEXT() {
        return (int)8L;
    }
    public static int THREAD_SET_CONTEXT() {
        return (int)16L;
    }
    public static int THREAD_QUERY_INFORMATION() {
        return (int)64L;
    }
    public static int THREAD_SET_INFORMATION() {
        return (int)32L;
    }
    public static int THREAD_SET_THREAD_TOKEN() {
        return (int)128L;
    }
    public static int THREAD_IMPERSONATE() {
        return (int)256L;
    }
    public static int THREAD_DIRECT_IMPERSONATION() {
        return (int)512L;
    }
    public static int THREAD_SET_LIMITED_INFORMATION() {
        return (int)1024L;
    }
    public static int THREAD_QUERY_LIMITED_INFORMATION() {
        return (int)2048L;
    }
    public static int THREAD_RESUME() {
        return (int)4096L;
    }
    public static int THREAD_ALL_ACCESS() {
        return (int)2097151L;
    }
    public static int JOB_OBJECT_ASSIGN_PROCESS() {
        return (int)1L;
    }
    public static int JOB_OBJECT_SET_ATTRIBUTES() {
        return (int)2L;
    }
    public static int JOB_OBJECT_QUERY() {
        return (int)4L;
    }
    public static int JOB_OBJECT_TERMINATE() {
        return (int)8L;
    }
    public static int JOB_OBJECT_SET_SECURITY_ATTRIBUTES() {
        return (int)16L;
    }
    public static int JOB_OBJECT_IMPERSONATE() {
        return (int)32L;
    }
    public static int JOB_OBJECT_ALL_ACCESS() {
        return (int)2031679L;
    }
    public static int THREAD_BASE_PRIORITY_MIN() {
        return (int)-2L;
    }
    public static int THREAD_BASE_PRIORITY_IDLE() {
        return (int)-15L;
    }
    public static int DYNAMIC_EH_CONTINUATION_TARGET_ADD() {
        return (int)1L;
    }
    public static int DYNAMIC_EH_CONTINUATION_TARGET_PROCESSED() {
        return (int)2L;
    }
    public static int DYNAMIC_ENFORCED_ADDRESS_RANGE_ADD() {
        return (int)1L;
    }
    public static int DYNAMIC_ENFORCED_ADDRESS_RANGE_PROCESSED() {
        return (int)2L;
    }
    public static int JOB_OBJECT_VALID_COMPLETION_FILTER() {
        return (int)16382L;
    }
    public static int JOB_OBJECT_LIMIT_JOB_MEMORY_HIGH() {
        return (int)512L;
    }
    public static int JOB_OBJECT_LIMIT_CPU_RATE_CONTROL() {
        return (int)262144L;
    }
    public static int JOB_OBJECT_NOTIFICATION_LIMIT_VALID_FLAGS() {
        return (int)2064900L;
    }
    public static int EVENT_ALL_ACCESS() {
        return (int)2031619L;
    }
    public static int MUTANT_ALL_ACCESS() {
        return (int)2031617L;
    }
    public static int SEMAPHORE_ALL_ACCESS() {
        return (int)2031619L;
    }
    public static int TIMER_ALL_ACCESS() {
        return (int)2031619L;
    }
    public static int XSTATE_LEGACY_FLOATING_POINT() {
        return (int)0L;
    }
    public static int XSTATE_LEGACY_SSE() {
        return (int)1L;
    }
    public static int XSTATE_GSSE() {
        return (int)2L;
    }
    public static int XSTATE_AVX() {
        return (int)2L;
    }
    public static int XSTATE_MPX_BNDREGS() {
        return (int)3L;
    }
    public static int XSTATE_MPX_BNDCSR() {
        return (int)4L;
    }
    public static int XSTATE_AVX512_KMASK() {
        return (int)5L;
    }
    public static int XSTATE_AVX512_ZMM_H() {
        return (int)6L;
    }
    public static int XSTATE_AVX512_ZMM() {
        return (int)7L;
    }
    public static int XSTATE_IPT() {
        return (int)8L;
    }
    public static int XSTATE_CET_U() {
        return (int)11L;
    }
    public static int XSTATE_LWP() {
        return (int)62L;
    }
    public static int MAXIMUM_XSTATE_FEATURES() {
        return (int)64L;
    }
    public static long XSTATE_MASK_LEGACY_FLOATING_POINT() {
        return 1L;
    }
    public static long XSTATE_MASK_LEGACY_SSE() {
        return 2L;
    }
    public static long XSTATE_MASK_LEGACY() {
        return 3L;
    }
    public static long XSTATE_MASK_GSSE() {
        return 4L;
    }
    public static long XSTATE_MASK_AVX() {
        return 4L;
    }
    public static long XSTATE_MASK_MPX() {
        return 24L;
    }
    public static long XSTATE_MASK_AVX512() {
        return 224L;
    }
    public static long XSTATE_MASK_IPT() {
        return 256L;
    }
    public static long XSTATE_MASK_CET_U() {
        return 2048L;
    }
    public static long XSTATE_MASK_LWP() {
        return 4611686018427387904L;
    }
    public static long XSTATE_MASK_ALLOWED() {
        return 4611686018427390463L;
    }
    public static long XSTATE_MASK_PERSISTENT() {
        return 4611686018427387920L;
    }
    public static long XSTATE_MASK_USER_VISIBLE_SUPERVISOR() {
        return 2048L;
    }
    public static int XSTATE_COMPACTION_ENABLE() {
        return (int)63L;
    }
    public static long XSTATE_COMPACTION_ENABLE_MASK() {
        return -9223372036854775808L;
    }
    public static int XSTATE_ALIGN_BIT() {
        return (int)1L;
    }
    public static long XSTATE_ALIGN_MASK() {
        return 2L;
    }
    public static int XSTATE_CONTROLFLAG_XSAVEOPT_MASK() {
        return (int)1L;
    }
    public static int XSTATE_CONTROLFLAG_XSAVEC_MASK() {
        return (int)2L;
    }
    public static int XSTATE_CONTROLFLAG_VALID_MASK() {
        return (int)3L;
    }
    public static int CFG_CALL_TARGET_VALID() {
        return (int)1L;
    }
    public static int CFG_CALL_TARGET_PROCESSED() {
        return (int)2L;
    }
    public static int CFG_CALL_TARGET_CONVERT_EXPORT_SUPPRESSED_TO_VALID() {
        return (int)4L;
    }
    public static int SECTION_ALL_ACCESS() {
        return (int)983071L;
    }
    public static int SESSION_ALL_ACCESS() {
        return (int)983043L;
    }
    public static int PAGE_ENCLAVE_THREAD_CONTROL() {
        return (int)2147483648L;
    }
    public static int PAGE_REVERT_TO_FILE_MAP() {
        return (int)2147483648L;
    }
    public static int PAGE_ENCLAVE_DECOMMIT() {
        return (int)268435456L;
    }
    public static int PAGE_ENCLAVE_SS_FIRST() {
        return (int)268435457L;
    }
    public static int PAGE_ENCLAVE_SS_REST() {
        return (int)268435458L;
    }
    public static int MEM_4MB_PAGES() {
        return (int)2147483648L;
    }
    public static int MEM_64K_PAGES() {
        return (int)541065216L;
    }
    public static long MEM_EXTENDED_PARAMETER_NUMA_NODE_MANDATORY() {
        return -9223372036854775808L;
    }
    public static int SEC_LARGE_PAGES() {
        return (int)2147483648L;
    }
    public static int SEC_IMAGE_NO_EXECUTE() {
        return (int)285212672L;
    }
    public static int FILE_READ_DATA() {
        return (int)1L;
    }
    public static int FILE_LIST_DIRECTORY() {
        return (int)1L;
    }
    public static int FILE_WRITE_DATA() {
        return (int)2L;
    }
    public static int FILE_ADD_FILE() {
        return (int)2L;
    }
    public static int FILE_APPEND_DATA() {
        return (int)4L;
    }
    public static int FILE_ADD_SUBDIRECTORY() {
        return (int)4L;
    }
    public static int FILE_CREATE_PIPE_INSTANCE() {
        return (int)4L;
    }
    public static int FILE_READ_EA() {
        return (int)8L;
    }
    public static int FILE_WRITE_EA() {
        return (int)16L;
    }
    public static int FILE_EXECUTE() {
        return (int)32L;
    }
    public static int FILE_TRAVERSE() {
        return (int)32L;
    }
    public static int FILE_DELETE_CHILD() {
        return (int)64L;
    }
    public static int FILE_READ_ATTRIBUTES() {
        return (int)128L;
    }
    public static int FILE_WRITE_ATTRIBUTES() {
        return (int)256L;
    }
    public static int FILE_ALL_ACCESS() {
        return (int)2032127L;
    }
    public static int FILE_GENERIC_READ() {
        return (int)1179785L;
    }
    public static int FILE_GENERIC_WRITE() {
        return (int)1179926L;
    }
    public static int FILE_GENERIC_EXECUTE() {
        return (int)1179808L;
    }
    public static int MAILSLOT_NO_MESSAGE() {
        return (int)4294967295L;
    }
    public static int MAILSLOT_WAIT_FOREVER() {
        return (int)4294967295L;
    }
    public static long FILE_INVALID_FILE_ID() {
        return -1L;
    }
    public static int REPARSE_GUID_DATA_BUFFER_HEADER_SIZE() {
        return (int)24L;
    }
    public static int MAXIMUM_REPARSE_DATA_BUFFER_SIZE() {
        return (int)16384L;
    }
    public static int IO_REPARSE_TAG_RESERVED_ZERO() {
        return (int)0L;
    }
    public static int IO_REPARSE_TAG_RESERVED_ONE() {
        return (int)1L;
    }
    public static int IO_REPARSE_TAG_RESERVED_TWO() {
        return (int)2L;
    }
    public static int IO_REPARSE_TAG_RESERVED_RANGE() {
        return (int)2L;
    }
    public static int IO_REPARSE_TAG_MOUNT_POINT() {
        return (int)2684354563L;
    }
    public static int IO_REPARSE_TAG_HSM() {
        return (int)3221225476L;
    }
    public static int IO_REPARSE_TAG_HSM2() {
        return (int)2147483654L;
    }
    public static int IO_REPARSE_TAG_SIS() {
        return (int)2147483655L;
    }
    public static int IO_REPARSE_TAG_WIM() {
        return (int)2147483656L;
    }
    public static int IO_REPARSE_TAG_CSV() {
        return (int)2147483657L;
    }
    public static int IO_REPARSE_TAG_DFS() {
        return (int)2147483658L;
    }
    public static int IO_REPARSE_TAG_SYMLINK() {
        return (int)2684354572L;
    }
    public static int IO_REPARSE_TAG_DFSR() {
        return (int)2147483666L;
    }
    public static int IO_REPARSE_TAG_DEDUP() {
        return (int)2147483667L;
    }
    public static int IO_REPARSE_TAG_NFS() {
        return (int)2147483668L;
    }
    public static int IO_REPARSE_TAG_FILE_PLACEHOLDER() {
        return (int)2147483669L;
    }
    public static int IO_REPARSE_TAG_WOF() {
        return (int)2147483671L;
    }
    public static int IO_REPARSE_TAG_WCI() {
        return (int)2147483672L;
    }
    public static int IO_REPARSE_TAG_WCI_1() {
        return (int)2415923224L;
    }
    public static int IO_REPARSE_TAG_GLOBAL_REPARSE() {
        return (int)2684354585L;
    }
    public static int IO_REPARSE_TAG_CLOUD() {
        return (int)2415919130L;
    }
    public static int IO_REPARSE_TAG_CLOUD_1() {
        return (int)2415923226L;
    }
    public static int IO_REPARSE_TAG_CLOUD_2() {
        return (int)2415927322L;
    }
    public static int IO_REPARSE_TAG_CLOUD_3() {
        return (int)2415931418L;
    }
    public static int IO_REPARSE_TAG_CLOUD_4() {
        return (int)2415935514L;
    }
    public static int IO_REPARSE_TAG_CLOUD_5() {
        return (int)2415939610L;
    }
    public static int IO_REPARSE_TAG_CLOUD_6() {
        return (int)2415943706L;
    }
    public static int IO_REPARSE_TAG_CLOUD_7() {
        return (int)2415947802L;
    }
    public static int IO_REPARSE_TAG_CLOUD_8() {
        return (int)2415951898L;
    }
    public static int IO_REPARSE_TAG_CLOUD_9() {
        return (int)2415955994L;
    }
    public static int IO_REPARSE_TAG_CLOUD_A() {
        return (int)2415960090L;
    }
    public static int IO_REPARSE_TAG_CLOUD_B() {
        return (int)2415964186L;
    }
    public static int IO_REPARSE_TAG_CLOUD_C() {
        return (int)2415968282L;
    }
    public static int IO_REPARSE_TAG_CLOUD_D() {
        return (int)2415972378L;
    }
    public static int IO_REPARSE_TAG_CLOUD_E() {
        return (int)2415976474L;
    }
    public static int IO_REPARSE_TAG_CLOUD_F() {
        return (int)2415980570L;
    }
    public static int IO_REPARSE_TAG_CLOUD_MASK() {
        return (int)61440L;
    }
    public static int IO_REPARSE_TAG_APPEXECLINK() {
        return (int)2147483675L;
    }
    public static int IO_REPARSE_TAG_PROJFS() {
        return (int)2415919132L;
    }
    public static int IO_REPARSE_TAG_STORAGE_SYNC() {
        return (int)2147483678L;
    }
    public static int IO_REPARSE_TAG_WCI_TOMBSTONE() {
        return (int)2684354591L;
    }
    public static int IO_REPARSE_TAG_UNHANDLED() {
        return (int)2147483680L;
    }
    public static int IO_REPARSE_TAG_ONEDRIVE() {
        return (int)2147483681L;
    }
    public static int IO_REPARSE_TAG_PROJFS_TOMBSTONE() {
        return (int)2684354594L;
    }
    public static int IO_REPARSE_TAG_AF_UNIX() {
        return (int)2147483683L;
    }
    public static int IO_REPARSE_TAG_WCI_LINK() {
        return (int)2684354599L;
    }
    public static int IO_REPARSE_TAG_WCI_LINK_1() {
        return (int)2684358695L;
    }
    public static int SHUFFLE_FILE_FLAG_SKIP_INITIALIZING_NEW_CLUSTERS() {
        return (int)1L;
    }
    public static int IO_COMPLETION_ALL_ACCESS() {
        return (int)2031619L;
    }
    public static long IO_QOS_MAX_RESERVATION() {
        return 1000000000L;
    }
    public static MemorySegment SMB_CCF_APP_INSTANCE_EA_NAME() {
        return constants$734.SMB_CCF_APP_INSTANCE_EA_NAME$SEGMENT;
    }
    public static int PERFSTATE_POLICY_CHANGE_DECREASE_MAX() {
        return (int)2L;
    }
    public static int PERFSTATE_POLICY_CHANGE_INCREASE_MAX() {
        return (int)3L;
    }
    public static int PROCESSOR_PERF_BOOST_MODE_MAX() {
        return (int)6L;
    }
    public static int CORE_PARKING_POLICY_CHANGE_MAX() {
        return (int)3L;
    }
    public static int ES_SYSTEM_REQUIRED() {
        return (int)1L;
    }
    public static int ES_DISPLAY_REQUIRED() {
        return (int)2L;
    }
    public static int ES_USER_PRESENT() {
        return (int)4L;
    }
    public static int ES_AWAYMODE_REQUIRED() {
        return (int)64L;
    }
    public static int ES_CONTINUOUS() {
        return (int)2147483648L;
    }
    public static int DIAGNOSTIC_REASON_NOT_SPECIFIED() {
        return (int)2147483648L;
    }
    public static int DIAGNOSTIC_REASON_INVALID_FLAGS() {
        return (int)2147483640L;
    }
    public static int POWER_REQUEST_CONTEXT_VERSION() {
        return (int)0L;
    }
    public static int POWER_REQUEST_CONTEXT_SIMPLE_STRING() {
        return (int)1L;
    }
    public static int POWER_REQUEST_CONTEXT_DETAILED_STRING() {
        return (int)2L;
    }
    public static int POWER_SETTING_VALUE_VERSION() {
        return (int)1L;
    }
    public static int POWER_PLATFORM_ROLE_V1() {
        return (int)1L;
    }
    public static int POWER_PLATFORM_ROLE_V1_MAX() {
        return (int)8L;
    }
    public static int POWER_PLATFORM_ROLE_V2() {
        return (int)2L;
    }
    public static int POWER_PLATFORM_ROLE_V2_MAX() {
        return (int)9L;
    }
    public static int POWER_PLATFORM_ROLE_VERSION() {
        return (int)2L;
    }
    public static int POWER_PLATFORM_ROLE_VERSION_MAX() {
        return (int)9L;
    }
    public static int POWER_ACTION_CRITICAL() {
        return (int)2147483648L;
    }
    public static int POWER_FORCE_TRIGGER_RESET() {
        return (int)2147483648L;
    }
    public static int BATTERY_DISCHARGE_FLAGS_ENABLE() {
        return (int)2147483648L;
    }
    public static int IMAGE_FILE_MACHINE_AXP64() {
        return (int)644L;
    }
    public static int IMAGE_NT_OPTIONAL_HDR_MAGIC() {
        return (int)523L;
    }
    public static int IMAGE_SCN_MEM_WRITE() {
        return (int)2147483648L;
    }
    public static short IMAGE_SYM_UNDEFINED() {
        return (short)0L;
    }
    public static short IMAGE_SYM_ABSOLUTE() {
        return (short)-1L;
    }
    public static short IMAGE_SYM_DEBUG() {
        return (short)-2L;
    }
    public static int IMAGE_SYM_SECTION_MAX_EX() {
        return (int)2147483647L;
    }
    public static byte IMAGE_SYM_CLASS_END_OF_FUNCTION() {
        return (byte)255L;
    }
    public static MemorySegment IMAGE_ARCHIVE_START() {
        return constants$734.IMAGE_ARCHIVE_START$SEGMENT;
    }
    public static MemorySegment IMAGE_ARCHIVE_END() {
        return constants$734.IMAGE_ARCHIVE_END$SEGMENT;
    }
    public static MemorySegment IMAGE_ARCHIVE_PAD() {
        return constants$734.IMAGE_ARCHIVE_PAD$SEGMENT;
    }
    public static MemorySegment IMAGE_ARCHIVE_LINKER_MEMBER() {
        return constants$735.IMAGE_ARCHIVE_LINKER_MEMBER$SEGMENT;
    }
    public static MemorySegment IMAGE_ARCHIVE_LONGNAMES_MEMBER() {
        return constants$735.IMAGE_ARCHIVE_LONGNAMES_MEMBER$SEGMENT;
    }
    public static MemorySegment IMAGE_ARCHIVE_HYBRIDMAP_MEMBER() {
        return constants$735.IMAGE_ARCHIVE_HYBRIDMAP_MEMBER$SEGMENT;
    }
    public static long IMAGE_ORDINAL_FLAG64() {
        return -9223372036854775808L;
    }
    public static int IMAGE_ORDINAL_FLAG32() {
        return (int)2147483648L;
    }
    public static long IMAGE_ORDINAL_FLAG() {
        return -9223372036854775808L;
    }
    public static int IMAGE_RESOURCE_NAME_IS_STRING() {
        return (int)2147483648L;
    }
    public static int IMAGE_RESOURCE_DATA_IS_DIRECTORY() {
        return (int)2147483648L;
    }
    public static int IMAGE_HOT_PATCH_CHUNK_INVERSE() {
        return (int)2147483648L;
    }
    public static int IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_MASK() {
        return (int)4026531840L;
    }
    public static int IMAGE_ENCLAVE_LONG_ID_LENGTH() {
        return (int)32L;
    }
    public static int IMAGE_ENCLAVE_SHORT_ID_LENGTH() {
        return (int)16L;
    }
    public static int IMAGE_ENCLAVE_MINIMUM_CONFIG_SIZE() {
        return (int)76L;
    }
    public static int RTL_RUN_ONCE_CHECK_ONLY() {
        return (int)1L;
    }
    public static int RTL_RUN_ONCE_ASYNC() {
        return (int)2L;
    }
    public static int RTL_RUN_ONCE_INIT_FAILED() {
        return (int)4L;
    }
    public static int FAST_FAIL_INVALID_FAST_FAIL_CODE() {
        return (int)4294967295L;
    }
    public static int COMPRESSION_FORMAT_NONE() {
        return (int)0L;
    }
    public static int COMPRESSION_FORMAT_DEFAULT() {
        return (int)1L;
    }
    public static int COMPRESSION_FORMAT_LZNT1() {
        return (int)2L;
    }
    public static int COMPRESSION_FORMAT_XPRESS() {
        return (int)3L;
    }
    public static int COMPRESSION_FORMAT_XPRESS_HUFF() {
        return (int)4L;
    }
    public static int COMPRESSION_ENGINE_STANDARD() {
        return (int)0L;
    }
    public static int COMPRESSION_ENGINE_MAXIMUM() {
        return (int)256L;
    }
    public static int COMPRESSION_ENGINE_HIBER() {
        return (int)512L;
    }
    public static int SEF_MACL_VALID_FLAGS() {
        return (int)1792L;
    }
    public static int RTL_UMS_VERSION() {
        return (int)256L;
    }
    public static int VRL_PREDEFINED_CLASS_BEGIN() {
        return (int)1L;
    }
    public static int VRL_CUSTOM_CLASS_BEGIN() {
        return (int)256L;
    }
    public static int VRL_CLASS_CONSISTENCY() {
        return (int)1L;
    }
    public static int VRL_ENABLE_KERNEL_BREAKS() {
        return (int)-2147483648L;
    }
    public static int CTMF_INCLUDE_APPCONTAINER() {
        return (int)1L;
    }
    public static int CTMF_INCLUDE_LPAC() {
        return (int)2L;
    }
    public static int CTMF_VALID_FLAGS() {
        return (int)3L;
    }
    public static int FLUSH_NV_MEMORY_IN_FLAG_NO_DRAIN() {
        return (int)1L;
    }
    public static long FLUSH_NV_MEMORY_DEFAULT_TOKEN() {
        return -1L;
    }
    public static int WRITE_NV_MEMORY_FLAG_FLUSH() {
        return (int)1L;
    }
    public static int WRITE_NV_MEMORY_FLAG_NON_TEMPORAL() {
        return (int)2L;
    }
    public static int WRITE_NV_MEMORY_FLAG_PERSIST() {
        return (int)3L;
    }
    public static int WRITE_NV_MEMORY_FLAG_NO_DRAIN() {
        return (int)256L;
    }
    public static int FILL_NV_MEMORY_FLAG_FLUSH() {
        return (int)1L;
    }
    public static int FILL_NV_MEMORY_FLAG_NON_TEMPORAL() {
        return (int)2L;
    }
    public static int FILL_NV_MEMORY_FLAG_PERSIST() {
        return (int)3L;
    }
    public static int FILL_NV_MEMORY_FLAG_NO_DRAIN() {
        return (int)256L;
    }
    public static byte RTL_CORRELATION_VECTOR_VERSION_1() {
        return (byte)1L;
    }
    public static byte RTL_CORRELATION_VECTOR_VERSION_2() {
        return (byte)2L;
    }
    public static byte RTL_CORRELATION_VECTOR_VERSION_CURRENT() {
        return (byte)2L;
    }
    public static int RTL_CORRELATION_VECTOR_V1_PREFIX_LENGTH() {
        return (int)16L;
    }
    public static int RTL_CORRELATION_VECTOR_V1_LENGTH() {
        return (int)64L;
    }
    public static int RTL_CORRELATION_VECTOR_V2_PREFIX_LENGTH() {
        return (int)22L;
    }
    public static int RTL_CORRELATION_VECTOR_V2_LENGTH() {
        return (int)128L;
    }
    public static MemorySegment IMAGE_POLICY_SECTION_NAME() {
        return constants$735.IMAGE_POLICY_SECTION_NAME$SEGMENT;
    }
    public static int RTL_CRITICAL_SECTION_ALL_FLAG_BITS() {
        return (int)4278190080L;
    }
    public static int RTL_CRITICAL_SECTION_FLAG_RESERVED() {
        return (int)3758096384L;
    }
    public static int ACTIVATION_CONTEXT_PATH_TYPE_NONE() {
        return (int)1L;
    }
    public static int ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE() {
        return (int)2L;
    }
    public static int ACTIVATION_CONTEXT_PATH_TYPE_URL() {
        return (int)3L;
    }
    public static int ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF() {
        return (int)4L;
    }
    public static MemorySegment UNIFIEDBUILDREVISION_KEY() {
        return constants$735.UNIFIEDBUILDREVISION_KEY$SEGMENT;
    }
    public static MemorySegment UNIFIEDBUILDREVISION_VALUE() {
        return constants$735.UNIFIEDBUILDREVISION_VALUE$SEGMENT;
    }
    public static MemorySegment DEVICEFAMILYDEVICEFORM_KEY() {
        return constants$736.DEVICEFAMILYDEVICEFORM_KEY$SEGMENT;
    }
    public static MemorySegment DEVICEFAMILYDEVICEFORM_VALUE() {
        return constants$736.DEVICEFAMILYDEVICEFORM_VALUE$SEGMENT;
    }
    public static int KEY_QUERY_VALUE() {
        return (int)1L;
    }
    public static int KEY_SET_VALUE() {
        return (int)2L;
    }
    public static int KEY_CREATE_SUB_KEY() {
        return (int)4L;
    }
    public static int KEY_ENUMERATE_SUB_KEYS() {
        return (int)8L;
    }
    public static int KEY_NOTIFY() {
        return (int)16L;
    }
    public static int KEY_CREATE_LINK() {
        return (int)32L;
    }
    public static int KEY_WOW64_32KEY() {
        return (int)512L;
    }
    public static int KEY_WOW64_64KEY() {
        return (int)256L;
    }
    public static int KEY_WOW64_RES() {
        return (int)768L;
    }
    public static int KEY_READ() {
        return (int)131097L;
    }
    public static int KEY_WRITE() {
        return (int)131078L;
    }
    public static int KEY_EXECUTE() {
        return (int)131097L;
    }
    public static int KEY_ALL_ACCESS() {
        return (int)983103L;
    }
    public static int REG_OPTION_RESERVED() {
        return (int)0L;
    }
    public static int REG_OPTION_NON_VOLATILE() {
        return (int)0L;
    }
    public static int REG_OPTION_VOLATILE() {
        return (int)1L;
    }
    public static int REG_OPTION_CREATE_LINK() {
        return (int)2L;
    }
    public static int REG_OPTION_BACKUP_RESTORE() {
        return (int)4L;
    }
    public static int REG_OPTION_OPEN_LINK() {
        return (int)8L;
    }
    public static int REG_OPTION_DONT_VIRTUALIZE() {
        return (int)16L;
    }
    public static int REG_LEGAL_OPTION() {
        return (int)31L;
    }
    public static int REG_OPEN_LEGAL_OPTION() {
        return (int)28L;
    }
    public static int REG_CREATED_NEW_KEY() {
        return (int)1L;
    }
    public static int REG_OPENED_EXISTING_KEY() {
        return (int)2L;
    }
    public static int REG_WHOLE_HIVE_VOLATILE() {
        return (int)1L;
    }
    public static int REG_REFRESH_HIVE() {
        return (int)2L;
    }
    public static int REG_NO_LAZY_FLUSH() {
        return (int)4L;
    }
    public static int REG_FORCE_RESTORE() {
        return (int)8L;
    }
    public static int REG_APP_HIVE() {
        return (int)16L;
    }
    public static int REG_PROCESS_PRIVATE() {
        return (int)32L;
    }
    public static int REG_START_JOURNAL() {
        return (int)64L;
    }
    public static int REG_HIVE_EXACT_FILE_GROWTH() {
        return (int)128L;
    }
    public static int REG_HIVE_NO_RM() {
        return (int)256L;
    }
    public static int REG_HIVE_SINGLE_LOG() {
        return (int)512L;
    }
    public static int REG_BOOT_HIVE() {
        return (int)1024L;
    }
    public static int REG_LOAD_HIVE_OPEN_HANDLE() {
        return (int)2048L;
    }
    public static int REG_FLUSH_HIVE_FILE_GROWTH() {
        return (int)4096L;
    }
    public static int REG_OPEN_READ_ONLY() {
        return (int)8192L;
    }
    public static int REG_IMMUTABLE() {
        return (int)16384L;
    }
    public static int REG_NO_IMPERSONATION_FALLBACK() {
        return (int)32768L;
    }
    public static int REG_APP_HIVE_OPEN_READ_ONLY() {
        return (int)8192L;
    }
    public static int REG_UNLOAD_LEGAL_FLAGS() {
        return (int)1L;
    }
    public static int REG_NOTIFY_CHANGE_NAME() {
        return (int)1L;
    }
    public static int REG_NOTIFY_CHANGE_ATTRIBUTES() {
        return (int)2L;
    }
    public static int REG_NOTIFY_CHANGE_LAST_SET() {
        return (int)4L;
    }
    public static int REG_NOTIFY_CHANGE_SECURITY() {
        return (int)8L;
    }
    public static int REG_NOTIFY_THREAD_AGNOSTIC() {
        return (int)268435456L;
    }
    public static int REG_LEGAL_CHANGE_FILTER() {
        return (int)268435471L;
    }
    public static int REG_NONE() {
        return (int)0L;
    }
    public static int REG_SZ() {
        return (int)1L;
    }
    public static int REG_EXPAND_SZ() {
        return (int)2L;
    }
    public static int REG_BINARY() {
        return (int)3L;
    }
    public static int REG_DWORD() {
        return (int)4L;
    }
    public static int REG_DWORD_LITTLE_ENDIAN() {
        return (int)4L;
    }
    public static int REG_DWORD_BIG_ENDIAN() {
        return (int)5L;
    }
    public static int REG_LINK() {
        return (int)6L;
    }
    public static int REG_MULTI_SZ() {
        return (int)7L;
    }
    public static int REG_RESOURCE_LIST() {
        return (int)8L;
    }
    public static int REG_FULL_RESOURCE_DESCRIPTOR() {
        return (int)9L;
    }
    public static int REG_RESOURCE_REQUIREMENTS_LIST() {
        return (int)10L;
    }
    public static int REG_QWORD() {
        return (int)11L;
    }
    public static int REG_QWORD_LITTLE_ENDIAN() {
        return (int)11L;
    }
    public static int SERVICE_DRIVER() {
        return (int)11L;
    }
    public static int SERVICE_WIN32() {
        return (int)48L;
    }
    public static int SERVICE_USER_SHARE_PROCESS() {
        return (int)96L;
    }
    public static int SERVICE_USER_OWN_PROCESS() {
        return (int)80L;
    }
    public static int SERVICE_TYPE_ALL() {
        return (int)1023L;
    }
    public static int CM_SERVICE_VALID_PROMOTION_MASK() {
        return (int)511L;
    }
    public static int TAPE_ERASE_SHORT() {
        return (int)0L;
    }
    public static int TAPE_ERASE_LONG() {
        return (int)1L;
    }
    public static int TAPE_LOAD() {
        return (int)0L;
    }
    public static int TAPE_UNLOAD() {
        return (int)1L;
    }
    public static int TAPE_TENSION() {
        return (int)2L;
    }
    public static int TAPE_LOCK() {
        return (int)3L;
    }
    public static int TAPE_UNLOCK() {
        return (int)4L;
    }
    public static int TAPE_FORMAT() {
        return (int)5L;
    }
    public static int TAPE_SETMARKS() {
        return (int)0L;
    }
    public static int TAPE_FILEMARKS() {
        return (int)1L;
    }
    public static int TAPE_SHORT_FILEMARKS() {
        return (int)2L;
    }
    public static int TAPE_LONG_FILEMARKS() {
        return (int)3L;
    }
    public static int TAPE_ABSOLUTE_POSITION() {
        return (int)0L;
    }
    public static int TAPE_LOGICAL_POSITION() {
        return (int)1L;
    }
    public static int TAPE_PSEUDO_LOGICAL_POSITION() {
        return (int)2L;
    }
    public static int TAPE_REWIND() {
        return (int)0L;
    }
    public static int TAPE_ABSOLUTE_BLOCK() {
        return (int)1L;
    }
    public static int TAPE_LOGICAL_BLOCK() {
        return (int)2L;
    }
    public static int TAPE_PSEUDO_LOGICAL_BLOCK() {
        return (int)3L;
    }
    public static int TAPE_SPACE_END_OF_DATA() {
        return (int)4L;
    }
    public static int TAPE_SPACE_RELATIVE_BLOCKS() {
        return (int)5L;
    }
    public static int TAPE_SPACE_FILEMARKS() {
        return (int)6L;
    }
    public static int TAPE_SPACE_SEQUENTIAL_FMKS() {
        return (int)7L;
    }
    public static int TAPE_SPACE_SETMARKS() {
        return (int)8L;
    }
    public static int TAPE_SPACE_SEQUENTIAL_SMKS() {
        return (int)9L;
    }
    public static int TAPE_DRIVE_RESERVED_BIT() {
        return (int)2147483648L;
    }
    public static int TAPE_DRIVE_LOAD_UNLOAD() {
        return (int)2147483649L;
    }
    public static int TAPE_DRIVE_TENSION() {
        return (int)2147483650L;
    }
    public static int TAPE_DRIVE_LOCK_UNLOCK() {
        return (int)2147483652L;
    }
    public static int TAPE_DRIVE_REWIND_IMMEDIATE() {
        return (int)2147483656L;
    }
    public static int TAPE_DRIVE_SET_BLOCK_SIZE() {
        return (int)2147483664L;
    }
    public static int TAPE_DRIVE_LOAD_UNLD_IMMED() {
        return (int)2147483680L;
    }
    public static int TAPE_DRIVE_TENSION_IMMED() {
        return (int)2147483712L;
    }
    public static int TAPE_DRIVE_LOCK_UNLK_IMMED() {
        return (int)2147483776L;
    }
    public static int TAPE_DRIVE_SET_ECC() {
        return (int)2147483904L;
    }
    public static int TAPE_DRIVE_SET_COMPRESSION() {
        return (int)2147484160L;
    }
    public static int TAPE_DRIVE_SET_PADDING() {
        return (int)2147484672L;
    }
    public static int TAPE_DRIVE_SET_REPORT_SMKS() {
        return (int)2147485696L;
    }
    public static int TAPE_DRIVE_ABSOLUTE_BLK() {
        return (int)2147487744L;
    }
    public static int TAPE_DRIVE_ABS_BLK_IMMED() {
        return (int)2147491840L;
    }
    public static int TAPE_DRIVE_LOGICAL_BLK() {
        return (int)2147500032L;
    }
    public static int TAPE_DRIVE_LOG_BLK_IMMED() {
        return (int)2147516416L;
    }
    public static int TAPE_DRIVE_END_OF_DATA() {
        return (int)2147549184L;
    }
    public static int TAPE_DRIVE_RELATIVE_BLKS() {
        return (int)2147614720L;
    }
    public static int TAPE_DRIVE_FILEMARKS() {
        return (int)2147745792L;
    }
    public static int TAPE_DRIVE_SEQUENTIAL_FMKS() {
        return (int)2148007936L;
    }
    public static int TAPE_DRIVE_SETMARKS() {
        return (int)2148532224L;
    }
    public static int TAPE_DRIVE_SEQUENTIAL_SMKS() {
        return (int)2149580800L;
    }
    public static int TAPE_DRIVE_REVERSE_POSITION() {
        return (int)2151677952L;
    }
    public static int TAPE_DRIVE_SPACE_IMMEDIATE() {
        return (int)2155872256L;
    }
    public static int TAPE_DRIVE_WRITE_SETMARKS() {
        return (int)2164260864L;
    }
    public static int TAPE_DRIVE_WRITE_FILEMARKS() {
        return (int)2181038080L;
    }
    public static int TAPE_DRIVE_WRITE_SHORT_FMKS() {
        return (int)2214592512L;
    }
    public static int TAPE_DRIVE_WRITE_LONG_FMKS() {
        return (int)2281701376L;
    }
    public static int TAPE_DRIVE_WRITE_MARK_IMMED() {
        return (int)2415919104L;
    }
    public static int TAPE_DRIVE_FORMAT() {
        return (int)2684354560L;
    }
    public static int TAPE_DRIVE_FORMAT_IMMEDIATE() {
        return (int)3221225472L;
    }
    public static int TAPE_DRIVE_HIGH_FEATURES() {
        return (int)2147483648L;
    }
    public static int TAPE_FIXED_PARTITIONS() {
        return (int)0L;
    }
    public static int TAPE_SELECT_PARTITIONS() {
        return (int)1L;
    }
    public static int TAPE_INITIATOR_PARTITIONS() {
        return (int)2L;
    }
    public static int TAPE_QUERY_DRIVE_PARAMETERS() {
        return (int)0L;
    }
    public static int TAPE_QUERY_MEDIA_CAPACITY() {
        return (int)1L;
    }
    public static int TAPE_CHECK_FOR_DRIVE_PROBLEM() {
        return (int)2L;
    }
    public static int TAPE_QUERY_IO_ERROR_DATA() {
        return (int)3L;
    }
    public static int TAPE_QUERY_DEVICE_ERROR_DATA() {
        return (int)4L;
    }
    public static int TRANSACTIONMANAGER_QUERY_INFORMATION() {
        return (int)1L;
    }
    public static int TRANSACTIONMANAGER_SET_INFORMATION() {
        return (int)2L;
    }
    public static int TRANSACTIONMANAGER_RECOVER() {
        return (int)4L;
    }
    public static int TRANSACTIONMANAGER_RENAME() {
        return (int)8L;
    }
    public static int TRANSACTIONMANAGER_CREATE_RM() {
        return (int)16L;
    }
    public static int TRANSACTIONMANAGER_BIND_TRANSACTION() {
        return (int)32L;
    }
    public static int TRANSACTIONMANAGER_GENERIC_READ() {
        return (int)131073L;
    }
    public static int TRANSACTIONMANAGER_GENERIC_WRITE() {
        return (int)131102L;
    }
    public static int TRANSACTIONMANAGER_GENERIC_EXECUTE() {
        return (int)131072L;
    }
    public static int TRANSACTIONMANAGER_ALL_ACCESS() {
        return (int)983103L;
    }
    public static int TRANSACTION_QUERY_INFORMATION() {
        return (int)1L;
    }
    public static int TRANSACTION_SET_INFORMATION() {
        return (int)2L;
    }
    public static int TRANSACTION_ENLIST() {
        return (int)4L;
    }
    public static int TRANSACTION_COMMIT() {
        return (int)8L;
    }
    public static int TRANSACTION_ROLLBACK() {
        return (int)16L;
    }
    public static int TRANSACTION_PROPAGATE() {
        return (int)32L;
    }
    public static int TRANSACTION_RIGHT_RESERVED1() {
        return (int)64L;
    }
    public static int TRANSACTION_GENERIC_READ() {
        return (int)1179649L;
    }
    public static int TRANSACTION_GENERIC_WRITE() {
        return (int)1179710L;
    }
    public static int TRANSACTION_GENERIC_EXECUTE() {
        return (int)1179672L;
    }
    public static int TRANSACTION_ALL_ACCESS() {
        return (int)2031679L;
    }
    public static int TRANSACTION_RESOURCE_MANAGER_RIGHTS() {
        return (int)1179703L;
    }
    public static int RESOURCEMANAGER_QUERY_INFORMATION() {
        return (int)1L;
    }
    public static int RESOURCEMANAGER_SET_INFORMATION() {
        return (int)2L;
    }
    public static int RESOURCEMANAGER_RECOVER() {
        return (int)4L;
    }
    public static int RESOURCEMANAGER_ENLIST() {
        return (int)8L;
    }
    public static int RESOURCEMANAGER_GET_NOTIFICATION() {
        return (int)16L;
    }
    public static int RESOURCEMANAGER_REGISTER_PROTOCOL() {
        return (int)32L;
    }
    public static int RESOURCEMANAGER_COMPLETE_PROPAGATION() {
        return (int)64L;
    }
    public static int RESOURCEMANAGER_GENERIC_READ() {
        return (int)1179649L;
    }
    public static int RESOURCEMANAGER_GENERIC_WRITE() {
        return (int)1179774L;
    }
    public static int RESOURCEMANAGER_GENERIC_EXECUTE() {
        return (int)1179740L;
    }
    public static int RESOURCEMANAGER_ALL_ACCESS() {
        return (int)2031743L;
    }
    public static int ENLISTMENT_QUERY_INFORMATION() {
        return (int)1L;
    }
    public static int ENLISTMENT_SET_INFORMATION() {
        return (int)2L;
    }
    public static int ENLISTMENT_RECOVER() {
        return (int)4L;
    }
    public static int ENLISTMENT_SUBORDINATE_RIGHTS() {
        return (int)8L;
    }
    public static int ENLISTMENT_SUPERIOR_RIGHTS() {
        return (int)16L;
    }
    public static int ENLISTMENT_GENERIC_READ() {
        return (int)131073L;
    }
    public static int ENLISTMENT_GENERIC_WRITE() {
        return (int)131102L;
    }
    public static int ENLISTMENT_GENERIC_EXECUTE() {
        return (int)131100L;
    }
    public static int ENLISTMENT_ALL_ACCESS() {
        return (int)983071L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION() {
        return (int)1L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION() {
        return (int)2L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION() {
        return (int)3L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION() {
        return (int)4L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION() {
        return (int)5L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION() {
        return (int)6L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION() {
        return (int)7L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE() {
        return (int)8L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES() {
        return (int)9L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS() {
        return (int)10L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO() {
        return (int)11L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_WINRT_ACTIVATABLE_CLASSES() {
        return (int)12L;
    }
    public static int HFILE_ERROR() {
        return (int)-1L;
    }
    public static int DM_IN_BUFFER() {
        return (int)8L;
    }
    public static int DM_IN_PROMPT() {
        return (int)4L;
    }
    public static int DM_OUT_BUFFER() {
        return (int)2L;
    }
    public static int DM_OUT_DEFAULT() {
        return (int)1L;
    }
    public static MemoryAddress DPI_AWARENESS_CONTEXT_UNAWARE() {
        return constants$736.DPI_AWARENESS_CONTEXT_UNAWARE$ADDR;
    }
    public static MemoryAddress DPI_AWARENESS_CONTEXT_SYSTEM_AWARE() {
        return constants$736.DPI_AWARENESS_CONTEXT_SYSTEM_AWARE$ADDR;
    }
    public static MemoryAddress DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE() {
        return constants$736.DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE$ADDR;
    }
    public static MemoryAddress DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2() {
        return constants$736.DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2$ADDR;
    }
    public static MemoryAddress DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED() {
        return constants$737.DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED$ADDR;
    }
    public static int STILL_ACTIVE() {
        return (int)259L;
    }
    public static int EXCEPTION_ACCESS_VIOLATION() {
        return (int)3221225477L;
    }
    public static int EXCEPTION_DATATYPE_MISALIGNMENT() {
        return (int)2147483650L;
    }
    public static int EXCEPTION_BREAKPOINT() {
        return (int)2147483651L;
    }
    public static int EXCEPTION_SINGLE_STEP() {
        return (int)2147483652L;
    }
    public static int EXCEPTION_ARRAY_BOUNDS_EXCEEDED() {
        return (int)3221225612L;
    }
    public static int EXCEPTION_FLT_DENORMAL_OPERAND() {
        return (int)3221225613L;
    }
    public static int EXCEPTION_FLT_DIVIDE_BY_ZERO() {
        return (int)3221225614L;
    }
    public static int EXCEPTION_FLT_INEXACT_RESULT() {
        return (int)3221225615L;
    }
    public static int EXCEPTION_FLT_INVALID_OPERATION() {
        return (int)3221225616L;
    }
    public static int EXCEPTION_FLT_OVERFLOW() {
        return (int)3221225617L;
    }
    public static int EXCEPTION_FLT_STACK_CHECK() {
        return (int)3221225618L;
    }
    public static int EXCEPTION_FLT_UNDERFLOW() {
        return (int)3221225619L;
    }
    public static int EXCEPTION_INT_DIVIDE_BY_ZERO() {
        return (int)3221225620L;
    }
    public static int EXCEPTION_INT_OVERFLOW() {
        return (int)3221225621L;
    }
    public static int EXCEPTION_PRIV_INSTRUCTION() {
        return (int)3221225622L;
    }
    public static int EXCEPTION_IN_PAGE_ERROR() {
        return (int)3221225478L;
    }
    public static int EXCEPTION_ILLEGAL_INSTRUCTION() {
        return (int)3221225501L;
    }
    public static int EXCEPTION_NONCONTINUABLE_EXCEPTION() {
        return (int)3221225509L;
    }
    public static int EXCEPTION_STACK_OVERFLOW() {
        return (int)3221225725L;
    }
    public static int EXCEPTION_INVALID_DISPOSITION() {
        return (int)3221225510L;
    }
    public static int EXCEPTION_GUARD_PAGE() {
        return (int)2147483649L;
    }
    public static int EXCEPTION_INVALID_HANDLE() {
        return (int)3221225480L;
    }
    public static int CONTROL_C_EXIT() {
        return (int)3221225786L;
    }
    public static int LHND() {
        return (int)66L;
    }
    public static int LPTR() {
        return (int)64L;
    }
    public static int NONZEROLHND() {
        return (int)2L;
    }
    public static int NONZEROLPTR() {
        return (int)0L;
    }
    public static int NUMA_NO_PREFERRED_NODE() {
        return (int)4294967295L;
    }
    public static int INVALID_FILE_SIZE() {
        return (int)4294967295L;
    }
    public static int INVALID_SET_FILE_POINTER() {
        return (int)4294967295L;
    }
    public static int INVALID_FILE_ATTRIBUTES() {
        return (int)4294967295L;
    }
    public static MemoryAddress INVALID_HANDLE_VALUE() {
        return constants$737.INVALID_HANDLE_VALUE$ADDR;
    }
    public static int FLS_OUT_OF_INDEXES() {
        return (int)4294967295L;
    }
    public static int INIT_ONCE_CHECK_ONLY() {
        return (int)1L;
    }
    public static int INIT_ONCE_ASYNC() {
        return (int)2L;
    }
    public static int INIT_ONCE_INIT_FAILED() {
        return (int)4L;
    }
    public static int INIT_ONCE_CTX_RESERVED_BITS() {
        return (int)2L;
    }
    public static int CONDITION_VARIABLE_LOCKMODE_SHARED() {
        return (int)1L;
    }
    public static int MUTEX_MODIFY_STATE() {
        return (int)1L;
    }
    public static int MUTEX_ALL_ACCESS() {
        return (int)2031617L;
    }
    public static int TLS_OUT_OF_INDEXES() {
        return (int)4294967295L;
    }
    public static int PROCESS_AFFINITY_ENABLE_AUTO_UPDATE() {
        return (int)1L;
    }
    public static int THREAD_POWER_THROTTLING_VALID_FLAGS() {
        return (int)1L;
    }
    public static int PROCESS_POWER_THROTTLING_VALID_FLAGS() {
        return (int)1L;
    }
    public static int PROCESS_LEAP_SECOND_INFO_VALID_FLAGS() {
        return (int)1L;
    }
    public static int FILE_MAP_WRITE() {
        return (int)2L;
    }
    public static int FILE_MAP_READ() {
        return (int)4L;
    }
    public static int FILE_MAP_ALL_ACCESS() {
        return (int)983071L;
    }
    public static int FILE_MAP_EXECUTE() {
        return (int)32L;
    }
    public static int FILE_MAP_RESERVE() {
        return (int)2147483648L;
    }
    public static int FIND_RESOURCE_DIRECTORY_TYPES() {
        return (int)256L;
    }
    public static int FIND_RESOURCE_DIRECTORY_NAMES() {
        return (int)512L;
    }
    public static int FIND_RESOURCE_DIRECTORY_LANGUAGES() {
        return (int)1024L;
    }
    public static int RESOURCE_ENUM_LN() {
        return (int)1L;
    }
    public static int RESOURCE_ENUM_MUI() {
        return (int)2L;
    }
    public static int RESOURCE_ENUM_MUI_SYSTEM() {
        return (int)4L;
    }
    public static int RESOURCE_ENUM_VALIDATE() {
        return (int)8L;
    }
    public static int RESOURCE_ENUM_MODULE_EXACT() {
        return (int)16L;
    }
    public static int GET_MODULE_HANDLE_EX_FLAG_PIN() {
        return (int)1L;
    }
    public static int GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT() {
        return (int)2L;
    }
    public static int GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS() {
        return (int)4L;
    }
    public static int WAIT_FAILED() {
        return (int)4294967295L;
    }
    public static int WAIT_OBJECT_0() {
        return (int)0L;
    }
    public static int WAIT_ABANDONED() {
        return (int)128L;
    }
    public static int WAIT_ABANDONED_0() {
        return (int)128L;
    }
    public static int WAIT_IO_COMPLETION() {
        return (int)192L;
    }
    public static int FILE_FLAG_WRITE_THROUGH() {
        return (int)2147483648L;
    }
    public static int SECURITY_ANONYMOUS() {
        return (int)0L;
    }
    public static int SECURITY_IDENTIFICATION() {
        return (int)65536L;
    }
    public static int SECURITY_IMPERSONATION() {
        return (int)131072L;
    }
    public static int SECURITY_DELEGATION() {
        return (int)196608L;
    }
    public static int SP_SERIALCOMM() {
        return (int)1L;
    }
    public static int PST_UNSPECIFIED() {
        return (int)0L;
    }
    public static int PST_RS232() {
        return (int)1L;
    }
    public static int PST_PARALLELPORT() {
        return (int)2L;
    }
    public static int PST_RS422() {
        return (int)3L;
    }
    public static int PST_RS423() {
        return (int)4L;
    }
    public static int PST_RS449() {
        return (int)5L;
    }
    public static int PST_MODEM() {
        return (int)6L;
    }
    public static int PST_FAX() {
        return (int)33L;
    }
    public static int PST_SCANNER() {
        return (int)34L;
    }
    public static int PST_NETWORK_BRIDGE() {
        return (int)256L;
    }
    public static int PST_LAT() {
        return (int)257L;
    }
    public static int PST_TCPIP_TELNET() {
        return (int)258L;
    }
    public static int PST_X25() {
        return (int)259L;
    }
    public static int PCF_DTRDSR() {
        return (int)1L;
    }
    public static int PCF_RTSCTS() {
        return (int)2L;
    }
    public static int PCF_RLSD() {
        return (int)4L;
    }
    public static int PCF_PARITY_CHECK() {
        return (int)8L;
    }
    public static int PCF_XONXOFF() {
        return (int)16L;
    }
    public static int PCF_SETXCHAR() {
        return (int)32L;
    }
    public static int PCF_TOTALTIMEOUTS() {
        return (int)64L;
    }
    public static int PCF_INTTIMEOUTS() {
        return (int)128L;
    }
    public static int PCF_SPECIALCHARS() {
        return (int)256L;
    }
    public static int PCF_16BITMODE() {
        return (int)512L;
    }
    public static int SP_PARITY() {
        return (int)1L;
    }
    public static int SP_BAUD() {
        return (int)2L;
    }
    public static int SP_DATABITS() {
        return (int)4L;
    }
    public static int SP_STOPBITS() {
        return (int)8L;
    }
    public static int SP_HANDSHAKING() {
        return (int)16L;
    }
    public static int SP_PARITY_CHECK() {
        return (int)32L;
    }
    public static int SP_RLSD() {
        return (int)64L;
    }
    public static int BAUD_075() {
        return (int)1L;
    }
    public static int BAUD_110() {
        return (int)2L;
    }
    public static int BAUD_134_5() {
        return (int)4L;
    }
    public static int BAUD_150() {
        return (int)8L;
    }
    public static int BAUD_300() {
        return (int)16L;
    }
    public static int BAUD_600() {
        return (int)32L;
    }
    public static int BAUD_1200() {
        return (int)64L;
    }
    public static int BAUD_1800() {
        return (int)128L;
    }
    public static int BAUD_2400() {
        return (int)256L;
    }
    public static int BAUD_4800() {
        return (int)512L;
    }
    public static int BAUD_7200() {
        return (int)1024L;
    }
    public static int BAUD_9600() {
        return (int)2048L;
    }
    public static int BAUD_14400() {
        return (int)4096L;
    }
    public static int BAUD_19200() {
        return (int)8192L;
    }
    public static int BAUD_38400() {
        return (int)16384L;
    }
    public static int BAUD_56K() {
        return (int)32768L;
    }
    public static int BAUD_128K() {
        return (int)65536L;
    }
    public static int BAUD_115200() {
        return (int)131072L;
    }
    public static int BAUD_57600() {
        return (int)262144L;
    }
    public static int BAUD_USER() {
        return (int)268435456L;
    }
    public static short DATABITS_5() {
        return (short)1L;
    }
    public static short DATABITS_6() {
        return (short)2L;
    }
    public static short DATABITS_7() {
        return (short)4L;
    }
    public static short DATABITS_8() {
        return (short)8L;
    }
    public static short DATABITS_16() {
        return (short)16L;
    }
    public static short DATABITS_16X() {
        return (short)32L;
    }
    public static short STOPBITS_10() {
        return (short)1L;
    }
    public static short STOPBITS_15() {
        return (short)2L;
    }
    public static short STOPBITS_20() {
        return (short)4L;
    }
    public static short PARITY_NONE() {
        return (short)256L;
    }
    public static short PARITY_ODD() {
        return (short)512L;
    }
    public static short PARITY_EVEN() {
        return (short)1024L;
    }
    public static short PARITY_MARK() {
        return (short)2048L;
    }
    public static short PARITY_SPACE() {
        return (short)4096L;
    }
    public static int COMMPROP_INITIALIZED() {
        return (int)3879531822L;
    }
    public static int GMEM_LOWER() {
        return (int)4096L;
    }
    public static int GHND() {
        return (int)66L;
    }
    public static int GPTR() {
        return (int)64L;
    }
    public static int CREATE_IGNORE_SYSTEM_DEFAULT() {
        return (int)2147483648L;
    }
    public static int THREAD_PRIORITY_LOWEST() {
        return (int)-2L;
    }
    public static int THREAD_PRIORITY_BELOW_NORMAL() {
        return (int)-1L;
    }
    public static int THREAD_PRIORITY_HIGHEST() {
        return (int)2L;
    }
    public static int THREAD_PRIORITY_ABOVE_NORMAL() {
        return (int)1L;
    }
    public static int THREAD_PRIORITY_ERROR_RETURN() {
        return (int)2147483647L;
    }
    public static int THREAD_PRIORITY_TIME_CRITICAL() {
        return (int)15L;
    }
    public static int THREAD_PRIORITY_IDLE() {
        return (int)-15L;
    }
    public static int STD_INPUT_HANDLE() {
        return (int)4294967286L;
    }
    public static int STD_OUTPUT_HANDLE() {
        return (int)4294967285L;
    }
    public static int STD_ERROR_HANDLE() {
        return (int)4294967284L;
    }
    public static int INFINITE() {
        return (int)4294967295L;
    }
    public static int IE_BADID() {
        return (int)-1L;
    }
    public static int IE_OPEN() {
        return (int)-2L;
    }
    public static int IE_NOPEN() {
        return (int)-3L;
    }
    public static int IE_MEMORY() {
        return (int)-4L;
    }
    public static int IE_DEFAULT() {
        return (int)-5L;
    }
    public static int IE_HARDWARE() {
        return (int)-10L;
    }
    public static int IE_BYTESIZE() {
        return (int)-11L;
    }
    public static int IE_BAUDRATE() {
        return (int)-12L;
    }
    public static int MS_CTS_ON() {
        return (int)16L;
    }
    public static int MS_DSR_ON() {
        return (int)32L;
    }
    public static int MS_RING_ON() {
        return (int)64L;
    }
    public static int MS_RLSD_ON() {
        return (int)128L;
    }
    public static int S_SERDVNA() {
        return (int)-1L;
    }
    public static int S_SEROFM() {
        return (int)-2L;
    }
    public static int S_SERMACT() {
        return (int)-3L;
    }
    public static int S_SERQFUL() {
        return (int)-4L;
    }
    public static int S_SERBDNT() {
        return (int)-5L;
    }
    public static int S_SERDLN() {
        return (int)-6L;
    }
    public static int S_SERDCC() {
        return (int)-7L;
    }
    public static int S_SERDTP() {
        return (int)-8L;
    }
    public static int S_SERDVL() {
        return (int)-9L;
    }
    public static int S_SERDMD() {
        return (int)-10L;
    }
    public static int S_SERDSH() {
        return (int)-11L;
    }
    public static int S_SERDPT() {
        return (int)-12L;
    }
    public static int S_SERDFQ() {
        return (int)-13L;
    }
    public static int S_SERDDR() {
        return (int)-14L;
    }
    public static int S_SERDSR() {
        return (int)-15L;
    }
    public static int S_SERDST() {
        return (int)-16L;
    }
    public static int NMPWAIT_WAIT_FOREVER() {
        return (int)4294967295L;
    }
    public static int FS_CASE_IS_PRESERVED() {
        return (int)2L;
    }
    public static int FS_CASE_SENSITIVE() {
        return (int)1L;
    }
    public static int FS_UNICODE_STORED_ON_DISK() {
        return (int)4L;
    }
    public static int FS_PERSISTENT_ACLS() {
        return (int)8L;
    }
    public static int FS_VOL_IS_COMPRESSED() {
        return (int)32768L;
    }
    public static int FS_FILE_COMPRESSION() {
        return (int)16L;
    }
    public static int FS_FILE_ENCRYPTION() {
        return (int)131072L;
    }
    public static short INVALID_ATOM() {
        return (short)0L;
    }
    public static int SCS_THIS_PLATFORM_BINARY() {
        return (int)6L;
    }
    public static int UMS_VERSION() {
        return (int)256L;
    }
    public static int CRITICAL_SECTION_NO_DEBUG_INFO() {
        return (int)16777216L;
    }
    public static int EFS_USE_RECOVERY_KEYS() {
        return (int)1L;
    }
    public static int CREATE_FOR_IMPORT() {
        return (int)1L;
    }
    public static int CREATE_FOR_DIR() {
        return (int)2L;
    }
    public static int OVERWRITE_HIDDEN() {
        return (int)4L;
    }
    public static int EFSRPC_SECURE_ONLY() {
        return (int)8L;
    }
    public static int EFS_DROP_ALTERNATE_STREAMS() {
        return (int)16L;
    }
    public static int PROTECTION_LEVEL_SAME() {
        return (int)4294967295L;
    }
    public static int PROTECTION_LEVEL_NONE() {
        return (int)4294967294L;
    }
    public static int PROC_THREAD_ATTRIBUTE_PARENT_PROCESS() {
        return (int)131072L;
    }
    public static int PROC_THREAD_ATTRIBUTE_HANDLE_LIST() {
        return (int)131074L;
    }
    public static int PROC_THREAD_ATTRIBUTE_GROUP_AFFINITY() {
        return (int)196611L;
    }
    public static int PROC_THREAD_ATTRIBUTE_PREFERRED_NODE() {
        return (int)131076L;
    }
    public static int PROC_THREAD_ATTRIBUTE_IDEAL_PROCESSOR() {
        return (int)196613L;
    }
    public static int PROC_THREAD_ATTRIBUTE_UMS_THREAD() {
        return (int)196614L;
    }
    public static int PROC_THREAD_ATTRIBUTE_MITIGATION_POLICY() {
        return (int)131079L;
    }
    public static int PROC_THREAD_ATTRIBUTE_SECURITY_CAPABILITIES() {
        return (int)131081L;
    }
    public static int PROC_THREAD_ATTRIBUTE_PROTECTION_LEVEL() {
        return (int)131083L;
    }
    public static int PROC_THREAD_ATTRIBUTE_PSEUDOCONSOLE() {
        return (int)131094L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_MASK() {
        return (int)768L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_DEFER() {
        return (int)0L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON() {
        return (int)256L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_OFF() {
        return (int)512L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON_REQ_RELOCS() {
        return (int)768L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_MASK() {
        return (int)12288L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_DEFER() {
        return (int)0L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_ON() {
        return (int)4096L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_OFF() {
        return (int)8192L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_RESERVED() {
        return (int)12288L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_MASK() {
        return (int)196608L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_DEFER() {
        return (int)0L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_ON() {
        return (int)65536L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_OFF() {
        return (int)131072L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_RESERVED() {
        return (int)196608L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_MASK() {
        return (int)3145728L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_DEFER() {
        return (int)0L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_ON() {
        return (int)1048576L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_OFF() {
        return (int)2097152L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_RESERVED() {
        return (int)3145728L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_MASK() {
        return (int)50331648L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_DEFER() {
        return (int)0L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_ON() {
        return (int)16777216L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_OFF() {
        return (int)33554432L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_RESERVED() {
        return (int)50331648L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_MASK() {
        return (int)805306368L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_DEFER() {
        return (int)0L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_ON() {
        return (int)268435456L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_OFF() {
        return (int)536870912L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_RESERVED() {
        return (int)805306368L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_MASK() {
        return 12884901888L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_ON() {
        return 4294967296L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_OFF() {
        return 8589934592L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_RESERVED() {
        return 12884901888L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_MASK() {
        return 206158430208L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON() {
        return 68719476736L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_OFF() {
        return 137438953472L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON_ALLOW_OPT_OUT() {
        return 206158430208L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_MASK() {
        return 3298534883328L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_ON() {
        return 1099511627776L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_OFF() {
        return 2199023255552L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_EXPORT_SUPPRESSION() {
        return 3298534883328L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_MASK() {
        return 52776558133248L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_ON() {
        return 17592186044416L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_OFF() {
        return 35184372088832L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALLOW_STORE() {
        return 52776558133248L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_MASK() {
        return 844424930131968L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_ON() {
        return 281474976710656L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_OFF() {
        return 562949953421312L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_AUDIT_NONSYSTEM_FONTS() {
        return 844424930131968L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_MASK() {
        return 13510798882111488L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_ON() {
        return 4503599627370496L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_OFF() {
        return 9007199254740992L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_RESERVED() {
        return 13510798882111488L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_MASK() {
        return 216172782113783808L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_ON() {
        return 72057594037927936L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_OFF() {
        return 144115188075855872L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_RESERVED() {
        return 216172782113783808L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_MASK() {
        return 3458764513820540928L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_ON() {
        return 1152921504606846976L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_OFF() {
        return 2305843009213693952L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_RESERVED() {
        return 3458764513820540928L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_MASK() {
        return 48L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_ON() {
        return 16L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_OFF() {
        return 32L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_AUDIT() {
        return 48L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_MASK() {
        return 768L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_ON() {
        return 256L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_OFF() {
        return 512L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_RESERVED() {
        return 768L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_MASK() {
        return 12288L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_ON() {
        return 4096L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_OFF() {
        return 8192L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_NOINHERIT() {
        return 12288L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_MASK() {
        return 196608L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_ON() {
        return 65536L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_OFF() {
        return 131072L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_RESERVED() {
        return 196608L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_MASK() {
        return 3145728L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_ON() {
        return 1048576L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_OFF() {
        return 2097152L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_RESERVED() {
        return 3145728L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_MASK() {
        return 50331648L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_ON() {
        return 16777216L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_OFF() {
        return 33554432L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_RESERVED() {
        return 50331648L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_MASK() {
        return 805306368L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_ON() {
        return 268435456L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_OFF() {
        return 536870912L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_STRICT_MODE() {
        return 805306368L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_MASK() {
        return 12884901888L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_ON() {
        return 4294967296L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_OFF() {
        return 8589934592L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_RELAXED_MODE() {
        return 12884901888L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_MASK() {
        return 206158430208L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_ON() {
        return 68719476736L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_OFF() {
        return 137438953472L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_NON_EHCONT() {
        return 206158430208L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_MASK() {
        return 844424930131968L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_ALWAYS_ON() {
        return 281474976710656L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_ALWAYS_OFF() {
        return 562949953421312L;
    }
    public static long PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_RESERVED() {
        return 844424930131968L;
    }
    public static int PROC_THREAD_ATTRIBUTE_JOB_LIST() {
        return (int)131085L;
    }
    public static int PROC_THREAD_ATTRIBUTE_CHILD_PROCESS_POLICY() {
        return (int)131086L;
    }
    public static int PROC_THREAD_ATTRIBUTE_ALL_APPLICATION_PACKAGES_POLICY() {
        return (int)131087L;
    }
    public static int PROC_THREAD_ATTRIBUTE_WIN32K_FILTER() {
        return (int)131088L;
    }
    public static int PROC_THREAD_ATTRIBUTE_DESKTOP_APP_POLICY() {
        return (int)131090L;
    }
    public static int PROC_THREAD_ATTRIBUTE_MITIGATION_AUDIT_POLICY() {
        return (int)131096L;
    }
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_MASK() {
        return 805306368L;
    }
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_ON() {
        return 268435456L;
    }
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_OFF() {
        return 536870912L;
    }
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_RESERVED() {
        return 805306368L;
    }
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_MASK() {
        return 12884901888L;
    }
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_ON() {
        return 4294967296L;
    }
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_OFF() {
        return 8589934592L;
    }
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_RESERVED() {
        return 12884901888L;
    }
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_MASK() {
        return 206158430208L;
    }
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_DEFER() {
        return 0L;
    }
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_ON() {
        return 68719476736L;
    }
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_OFF() {
        return 137438953472L;
    }
    public static long PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_RESERVED() {
        return 206158430208L;
    }
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_A() {
        return constants$737.GET_SYSTEM_WOW64_DIRECTORY_NAME_A_A$SEGMENT;
    }
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_W() {
        return constants$737.GET_SYSTEM_WOW64_DIRECTORY_NAME_A_W$SEGMENT;
    }
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_T() {
        return constants$737.GET_SYSTEM_WOW64_DIRECTORY_NAME_A_T$SEGMENT;
    }
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_A() {
        return constants$737.GET_SYSTEM_WOW64_DIRECTORY_NAME_W_A$SEGMENT;
    }
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_W() {
        return constants$738.GET_SYSTEM_WOW64_DIRECTORY_NAME_W_W$SEGMENT;
    }
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_T() {
        return constants$738.GET_SYSTEM_WOW64_DIRECTORY_NAME_W_T$SEGMENT;
    }
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_A() {
        return constants$738.GET_SYSTEM_WOW64_DIRECTORY_NAME_T_A$SEGMENT;
    }
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_W() {
        return constants$738.GET_SYSTEM_WOW64_DIRECTORY_NAME_T_W$SEGMENT;
    }
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_T() {
        return constants$738.GET_SYSTEM_WOW64_DIRECTORY_NAME_T_T$SEGMENT;
    }
    public static int BASE_SEARCH_PATH_INVALID_FLAGS() {
        return (int)-98306L;
    }
    public static int COPYFILE2_MESSAGE_COPY_OFFLOAD() {
        return (int)1L;
    }
    public static int LOGON_ZERO_PASSWORD_BUFFER() {
        return (int)2147483648L;
    }
    public static int DOCKINFO_UNDOCKED() {
        return (int)1L;
    }
    public static int DOCKINFO_DOCKED() {
        return (int)2L;
    }
    public static int DOCKINFO_USER_SUPPLIED() {
        return (int)4L;
    }
    public static int DOCKINFO_USER_UNDOCKED() {
        return (int)5L;
    }
    public static int DOCKINFO_USER_DOCKED() {
        return (int)6L;
    }
    public static int ERROR_SUCCESS() {
        return (int)0L;
    }
    public static int NO_ERROR() {
        return (int)0L;
    }
    public static int SEC_E_OK() {
        return (int)0L;
    }
    public static int ERROR_INVALID_FUNCTION() {
        return (int)1L;
    }
    public static int ERROR_FILE_NOT_FOUND() {
        return (int)2L;
    }
    public static int ERROR_PATH_NOT_FOUND() {
        return (int)3L;
    }
    public static int ERROR_TOO_MANY_OPEN_FILES() {
        return (int)4L;
    }
    public static int ERROR_ACCESS_DENIED() {
        return (int)5L;
    }
    public static int ERROR_INVALID_HANDLE() {
        return (int)6L;
    }
    public static int ERROR_ARENA_TRASHED() {
        return (int)7L;
    }
    public static int ERROR_NOT_ENOUGH_MEMORY() {
        return (int)8L;
    }
    public static int ERROR_INVALID_BLOCK() {
        return (int)9L;
    }
    public static int ERROR_BAD_ENVIRONMENT() {
        return (int)10L;
    }
    public static int ERROR_BAD_FORMAT() {
        return (int)11L;
    }
    public static int ERROR_INVALID_ACCESS() {
        return (int)12L;
    }
    public static int ERROR_INVALID_DATA() {
        return (int)13L;
    }
    public static int ERROR_OUTOFMEMORY() {
        return (int)14L;
    }
    public static int ERROR_INVALID_DRIVE() {
        return (int)15L;
    }
    public static int ERROR_CURRENT_DIRECTORY() {
        return (int)16L;
    }
    public static int ERROR_NOT_SAME_DEVICE() {
        return (int)17L;
    }
    public static int ERROR_NO_MORE_FILES() {
        return (int)18L;
    }
}



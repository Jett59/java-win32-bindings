// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class WINDOWS_7 extends WINDOWS_6 {

    public static int DRV_USER() {
        return (int)16384L;
    }
    public static int DRVCNF_CANCEL() {
        return (int)0L;
    }
    public static int DRVCNF_OK() {
        return (int)1L;
    }
    public static int DRVCNF_RESTART() {
        return (int)2L;
    }
    public static int MMIOERR_BASE() {
        return (int)256L;
    }
    public static int MMIO_RWMODE() {
        return (int)3L;
    }
    public static int MMIO_SHAREMODE() {
        return (int)112L;
    }
    public static int MMIO_CREATE() {
        return (int)4096L;
    }
    public static int MMIO_PARSE() {
        return (int)256L;
    }
    public static int MMIO_DELETE() {
        return (int)512L;
    }
    public static int MMIO_EXIST() {
        return (int)16384L;
    }
    public static int MMIO_ALLOCBUF() {
        return (int)65536L;
    }
    public static int MMIO_GETTEMP() {
        return (int)131072L;
    }
    public static int MMIO_DIRTY() {
        return (int)268435456L;
    }
    public static int MMIO_READ() {
        return (int)0L;
    }
    public static int MMIO_WRITE() {
        return (int)1L;
    }
    public static int MMIO_READWRITE() {
        return (int)2L;
    }
    public static int MMIO_COMPAT() {
        return (int)0L;
    }
    public static int MMIO_EXCLUSIVE() {
        return (int)16L;
    }
    public static int MMIO_DENYWRITE() {
        return (int)32L;
    }
    public static int MMIO_DENYREAD() {
        return (int)48L;
    }
    public static int MMIO_DENYNONE() {
        return (int)64L;
    }
    public static int MMIO_FHOPEN() {
        return (int)16L;
    }
    public static int MMIO_EMPTYBUF() {
        return (int)16L;
    }
    public static int MMIO_TOUPPER() {
        return (int)16L;
    }
    public static int MMIO_INSTALLPROC() {
        return (int)65536L;
    }
    public static int MMIO_GLOBALPROC() {
        return (int)268435456L;
    }
    public static int MMIO_REMOVEPROC() {
        return (int)131072L;
    }
    public static int MMIO_UNICODEPROC() {
        return (int)16777216L;
    }
    public static int MMIO_FINDPROC() {
        return (int)262144L;
    }
    public static int MMIO_FINDCHUNK() {
        return (int)16L;
    }
    public static int MMIO_FINDRIFF() {
        return (int)32L;
    }
    public static int MMIO_FINDLIST() {
        return (int)64L;
    }
    public static int MMIO_CREATERIFF() {
        return (int)32L;
    }
    public static int MMIO_CREATELIST() {
        return (int)64L;
    }
    public static int MMIOM_SEEK() {
        return (int)2L;
    }
    public static int MMIOM_OPEN() {
        return (int)3L;
    }
    public static int MMIOM_CLOSE() {
        return (int)4L;
    }
    public static int MMIOM_WRITEFLUSH() {
        return (int)5L;
    }
    public static int MMIOM_RENAME() {
        return (int)6L;
    }
    public static int MMIOM_USER() {
        return (int)32768L;
    }
    public static int SEEK_SET() {
        return (int)0L;
    }
    public static int SEEK_CUR() {
        return (int)1L;
    }
    public static int SEEK_END() {
        return (int)2L;
    }
    public static int MMIO_DEFAULTBUFFER() {
        return (int)8192L;
    }
    public static int SND_SYNC() {
        return (int)0L;
    }
    public static int SND_ASYNC() {
        return (int)1L;
    }
    public static int SND_NODEFAULT() {
        return (int)2L;
    }
    public static int SND_MEMORY() {
        return (int)4L;
    }
    public static int SND_LOOP() {
        return (int)8L;
    }
    public static int SND_NOSTOP() {
        return (int)16L;
    }
    public static int SND_PURGE() {
        return (int)64L;
    }
    public static int SND_APPLICATION() {
        return (int)128L;
    }
    public static int SND_ALIAS_START() {
        return (int)0L;
    }
    public static int WAVE_FORMAT_QUERY() {
        return (int)1L;
    }
    public static int WAVE_ALLOWSYNC() {
        return (int)2L;
    }
    public static int WAVE_MAPPED() {
        return (int)4L;
    }
    public static int WAVE_FORMAT_DIRECT() {
        return (int)8L;
    }
    public static int WAVE_MAPPED_DEFAULT_COMMUNICATION_DEVICE() {
        return (int)16L;
    }
    public static int WHDR_DONE() {
        return (int)1L;
    }
    public static int WHDR_PREPARED() {
        return (int)2L;
    }
    public static int WHDR_BEGINLOOP() {
        return (int)4L;
    }
    public static int WHDR_ENDLOOP() {
        return (int)8L;
    }
    public static int WHDR_INQUEUE() {
        return (int)16L;
    }
    public static int WAVECAPS_PITCH() {
        return (int)1L;
    }
    public static int WAVECAPS_PLAYBACKRATE() {
        return (int)2L;
    }
    public static int WAVECAPS_VOLUME() {
        return (int)4L;
    }
    public static int WAVECAPS_LRVOLUME() {
        return (int)8L;
    }
    public static int WAVECAPS_SYNC() {
        return (int)16L;
    }
    public static int WAVECAPS_SAMPLEACCURATE() {
        return (int)32L;
    }
    public static int WAVE_INVALIDFORMAT() {
        return (int)0L;
    }
    public static int WAVE_FORMAT_1M08() {
        return (int)1L;
    }
    public static int WAVE_FORMAT_1S08() {
        return (int)2L;
    }
    public static int WAVE_FORMAT_1M16() {
        return (int)4L;
    }
    public static int WAVE_FORMAT_1S16() {
        return (int)8L;
    }
    public static int WAVE_FORMAT_2M08() {
        return (int)16L;
    }
    public static int WAVE_FORMAT_2S08() {
        return (int)32L;
    }
    public static int WAVE_FORMAT_2M16() {
        return (int)64L;
    }
    public static int WAVE_FORMAT_2S16() {
        return (int)128L;
    }
    public static int WAVE_FORMAT_4M08() {
        return (int)256L;
    }
    public static int WAVE_FORMAT_4S08() {
        return (int)512L;
    }
    public static int WAVE_FORMAT_4M16() {
        return (int)1024L;
    }
    public static int WAVE_FORMAT_4S16() {
        return (int)2048L;
    }
    public static int WAVE_FORMAT_44M08() {
        return (int)256L;
    }
    public static int WAVE_FORMAT_44S08() {
        return (int)512L;
    }
    public static int WAVE_FORMAT_44M16() {
        return (int)1024L;
    }
    public static int WAVE_FORMAT_44S16() {
        return (int)2048L;
    }
    public static int WAVE_FORMAT_48M08() {
        return (int)4096L;
    }
    public static int WAVE_FORMAT_48S08() {
        return (int)8192L;
    }
    public static int WAVE_FORMAT_48M16() {
        return (int)16384L;
    }
    public static int WAVE_FORMAT_48S16() {
        return (int)32768L;
    }
    public static int WAVE_FORMAT_96M08() {
        return (int)65536L;
    }
    public static int WAVE_FORMAT_96S08() {
        return (int)131072L;
    }
    public static int WAVE_FORMAT_96M16() {
        return (int)262144L;
    }
    public static int WAVE_FORMAT_96S16() {
        return (int)524288L;
    }
    public static int WAVE_FORMAT_PCM() {
        return (int)1L;
    }
    public static int MIDIPATCHSIZE() {
        return (int)128L;
    }
    public static int MIDI_CACHE_ALL() {
        return (int)1L;
    }
    public static int MIDI_CACHE_BESTFIT() {
        return (int)2L;
    }
    public static int MIDI_CACHE_QUERY() {
        return (int)3L;
    }
    public static int MIDI_UNCACHE() {
        return (int)4L;
    }
    public static int MOD_MIDIPORT() {
        return (int)1L;
    }
    public static int MOD_SYNTH() {
        return (int)2L;
    }
    public static int MOD_SQSYNTH() {
        return (int)3L;
    }
    public static int MOD_FMSYNTH() {
        return (int)4L;
    }
    public static int MOD_MAPPER() {
        return (int)5L;
    }
    public static int MOD_WAVETABLE() {
        return (int)6L;
    }
    public static int MOD_SWSYNTH() {
        return (int)7L;
    }
    public static int MIDICAPS_VOLUME() {
        return (int)1L;
    }
    public static int MIDICAPS_LRVOLUME() {
        return (int)2L;
    }
    public static int MIDICAPS_CACHE() {
        return (int)4L;
    }
    public static int MIDICAPS_STREAM() {
        return (int)8L;
    }
    public static int MHDR_DONE() {
        return (int)1L;
    }
    public static int MHDR_PREPARED() {
        return (int)2L;
    }
    public static int MHDR_INQUEUE() {
        return (int)4L;
    }
    public static int MHDR_ISSTRM() {
        return (int)8L;
    }
    public static int AUXCAPS_CDAUDIO() {
        return (int)1L;
    }
    public static int AUXCAPS_AUXIN() {
        return (int)2L;
    }
    public static int AUXCAPS_VOLUME() {
        return (int)1L;
    }
    public static int AUXCAPS_LRVOLUME() {
        return (int)2L;
    }
    public static int MIXER_SHORT_NAME_CHARS() {
        return (int)16L;
    }
    public static int MIXER_LONG_NAME_CHARS() {
        return (int)64L;
    }
    public static int MIXERLINE_TARGETTYPE_UNDEFINED() {
        return (int)0L;
    }
    public static int MIXERLINE_TARGETTYPE_WAVEOUT() {
        return (int)1L;
    }
    public static int MIXERLINE_TARGETTYPE_WAVEIN() {
        return (int)2L;
    }
    public static int MIXERLINE_TARGETTYPE_MIDIOUT() {
        return (int)3L;
    }
    public static int MIXERLINE_TARGETTYPE_MIDIIN() {
        return (int)4L;
    }
    public static int MIXERLINE_TARGETTYPE_AUX() {
        return (int)5L;
    }
    public static int JOY_BUTTON1() {
        return (int)1L;
    }
    public static int JOY_BUTTON2() {
        return (int)2L;
    }
    public static int JOY_BUTTON3() {
        return (int)4L;
    }
    public static int JOY_BUTTON4() {
        return (int)8L;
    }
    public static int JOY_BUTTON1CHG() {
        return (int)256L;
    }
    public static int JOY_BUTTON2CHG() {
        return (int)512L;
    }
    public static int JOY_BUTTON3CHG() {
        return (int)1024L;
    }
    public static int JOY_BUTTON4CHG() {
        return (int)2048L;
    }
    public static int JOY_POVFORWARD() {
        return (int)0L;
    }
    public static int JOY_POVRIGHT() {
        return (int)9000L;
    }
    public static int JOY_POVBACKWARD() {
        return (int)18000L;
    }
    public static int JOY_POVLEFT() {
        return (int)27000L;
    }
    public static int JOYSTICKID1() {
        return (int)0L;
    }
    public static int JOYSTICKID2() {
        return (int)1L;
    }
    public static int JOYCAPS_HASZ() {
        return (int)1L;
    }
    public static int JOYCAPS_HASR() {
        return (int)2L;
    }
    public static int JOYCAPS_HASU() {
        return (int)4L;
    }
    public static int JOYCAPS_HASV() {
        return (int)8L;
    }
    public static int JOYCAPS_HASPOV() {
        return (int)16L;
    }
    public static int JOYCAPS_POV4DIR() {
        return (int)32L;
    }
    public static int JOYCAPS_POVCTS() {
        return (int)64L;
    }
    public static int ABM_NEW() {
        return (int)0L;
    }
    public static int ABM_REMOVE() {
        return (int)1L;
    }
    public static int ABM_QUERYPOS() {
        return (int)2L;
    }
    public static int ABM_SETPOS() {
        return (int)3L;
    }
    public static int ABM_GETSTATE() {
        return (int)4L;
    }
    public static int ABM_GETTASKBARPOS() {
        return (int)5L;
    }
    public static int ABM_ACTIVATE() {
        return (int)6L;
    }
    public static int ABM_GETAUTOHIDEBAR() {
        return (int)7L;
    }
    public static int ABM_SETAUTOHIDEBAR() {
        return (int)8L;
    }
    public static int ABM_WINDOWPOSCHANGED() {
        return (int)9L;
    }
    public static int ABM_SETSTATE() {
        return (int)10L;
    }
    public static int ABM_GETAUTOHIDEBAREX() {
        return (int)11L;
    }
    public static int ABM_SETAUTOHIDEBAREX() {
        return (int)12L;
    }
    public static int ABN_STATECHANGE() {
        return (int)0L;
    }
    public static int ABN_POSCHANGED() {
        return (int)1L;
    }
    public static int ABN_FULLSCREENAPP() {
        return (int)2L;
    }
    public static int ABN_WINDOWARRANGE() {
        return (int)3L;
    }
    public static int ABS_AUTOHIDE() {
        return (int)1L;
    }
    public static int ABS_ALWAYSONTOP() {
        return (int)2L;
    }
    public static int ABE_LEFT() {
        return (int)0L;
    }
    public static int ABE_TOP() {
        return (int)1L;
    }
    public static int ABE_RIGHT() {
        return (int)2L;
    }
    public static int ABE_BOTTOM() {
        return (int)3L;
    }
    public static int FO_MOVE() {
        return (int)1L;
    }
    public static int FO_COPY() {
        return (int)2L;
    }
    public static int FO_DELETE() {
        return (int)3L;
    }
    public static int FO_RENAME() {
        return (int)4L;
    }
    public static int FOF_MULTIDESTFILES() {
        return (int)1L;
    }
    public static int FOF_CONFIRMMOUSE() {
        return (int)2L;
    }
    public static int FOF_SILENT() {
        return (int)4L;
    }
    public static int FOF_RENAMEONCOLLISION() {
        return (int)8L;
    }
    public static int FOF_NOCONFIRMATION() {
        return (int)16L;
    }
    public static int FOF_WANTMAPPINGHANDLE() {
        return (int)32L;
    }
    public static int FOF_ALLOWUNDO() {
        return (int)64L;
    }
    public static int FOF_FILESONLY() {
        return (int)128L;
    }
    public static int FOF_SIMPLEPROGRESS() {
        return (int)256L;
    }
    public static int FOF_NOCONFIRMMKDIR() {
        return (int)512L;
    }
    public static int FOF_NOERRORUI() {
        return (int)1024L;
    }
    public static int FOF_NOCOPYSECURITYATTRIBS() {
        return (int)2048L;
    }
    public static int FOF_NORECURSION() {
        return (int)4096L;
    }
    public static int FOF_NO_CONNECTED_ELEMENTS() {
        return (int)8192L;
    }
    public static int FOF_WANTNUKEWARNING() {
        return (int)16384L;
    }
    public static int FOF_NORECURSEREPARSE() {
        return (int)32768L;
    }
    public static int PO_DELETE() {
        return (int)19L;
    }
    public static int PO_RENAME() {
        return (int)20L;
    }
    public static int PO_PORTCHANGE() {
        return (int)32L;
    }
    public static int PO_REN_PORT() {
        return (int)52L;
    }
    public static int SE_ERR_FNF() {
        return (int)2L;
    }
    public static int SE_ERR_PNF() {
        return (int)3L;
    }
    public static int SE_ERR_ACCESSDENIED() {
        return (int)5L;
    }
    public static int SE_ERR_OOM() {
        return (int)8L;
    }
    public static int SE_ERR_DLLNOTFOUND() {
        return (int)32L;
    }
    public static int SE_ERR_SHARE() {
        return (int)26L;
    }
    public static int SE_ERR_ASSOCINCOMPLETE() {
        return (int)27L;
    }
    public static int SE_ERR_DDETIMEOUT() {
        return (int)28L;
    }
    public static int SE_ERR_DDEFAIL() {
        return (int)29L;
    }
    public static int SE_ERR_DDEBUSY() {
        return (int)30L;
    }
    public static int SE_ERR_NOASSOC() {
        return (int)31L;
    }
    public static int SEE_MASK_DEFAULT() {
        return (int)0L;
    }
    public static int SEE_MASK_CLASSNAME() {
        return (int)1L;
    }
    public static int SEE_MASK_CLASSKEY() {
        return (int)3L;
    }
    public static int SEE_MASK_IDLIST() {
        return (int)4L;
    }
    public static int SEE_MASK_INVOKEIDLIST() {
        return (int)12L;
    }
    public static int SEE_MASK_HOTKEY() {
        return (int)32L;
    }
    public static int SEE_MASK_NOCLOSEPROCESS() {
        return (int)64L;
    }
    public static int SEE_MASK_CONNECTNETDRV() {
        return (int)128L;
    }
    public static int SEE_MASK_NOASYNC() {
        return (int)256L;
    }
    public static int SEE_MASK_DOENVSUBST() {
        return (int)512L;
    }
    public static int SEE_MASK_FLAG_NO_UI() {
        return (int)1024L;
    }
    public static int SEE_MASK_UNICODE() {
        return (int)16384L;
    }
    public static int SEE_MASK_NO_CONSOLE() {
        return (int)32768L;
    }
    public static int SEE_MASK_ASYNCOK() {
        return (int)1048576L;
    }
    public static int SEE_MASK_HMONITOR() {
        return (int)2097152L;
    }
    public static int SEE_MASK_NOZONECHECKS() {
        return (int)8388608L;
    }
    public static int SEE_MASK_NOQUERYCLASSSTORE() {
        return (int)16777216L;
    }
    public static int SEE_MASK_WAITFORINPUTIDLE() {
        return (int)33554432L;
    }
    public static int SEE_MASK_FLAG_LOG_USAGE() {
        return (int)67108864L;
    }
    public static int SEE_MASK_FLAG_HINST_IS_SITE() {
        return (int)134217728L;
    }
    public static int SHERB_NOCONFIRMATION() {
        return (int)1L;
    }
    public static int SHERB_NOPROGRESSUI() {
        return (int)2L;
    }
    public static int SHERB_NOSOUND() {
        return (int)4L;
    }
    public static int NINF_KEY() {
        return (int)1L;
    }
    public static int NIM_ADD() {
        return (int)0L;
    }
    public static int NIM_MODIFY() {
        return (int)1L;
    }
    public static int NIM_DELETE() {
        return (int)2L;
    }
    public static int NIM_SETFOCUS() {
        return (int)3L;
    }
    public static int NIM_SETVERSION() {
        return (int)4L;
    }
    public static int NOTIFYICON_VERSION() {
        return (int)3L;
    }
    public static int NOTIFYICON_VERSION_4() {
        return (int)4L;
    }
    public static int NIF_MESSAGE() {
        return (int)1L;
    }
    public static int NIF_ICON() {
        return (int)2L;
    }
    public static int NIF_TIP() {
        return (int)4L;
    }
    public static int NIF_STATE() {
        return (int)8L;
    }
    public static int NIF_INFO() {
        return (int)16L;
    }
    public static int NIF_GUID() {
        return (int)32L;
    }
    public static int NIF_REALTIME() {
        return (int)64L;
    }
    public static int NIF_SHOWTIP() {
        return (int)128L;
    }
    public static int NIS_HIDDEN() {
        return (int)1L;
    }
    public static int NIS_SHAREDICON() {
        return (int)2L;
    }
    public static int NIIF_NONE() {
        return (int)0L;
    }
    public static int NIIF_INFO() {
        return (int)1L;
    }
    public static int NIIF_WARNING() {
        return (int)2L;
    }
    public static int NIIF_ERROR() {
        return (int)3L;
    }
    public static int NIIF_USER() {
        return (int)4L;
    }
    public static int NIIF_ICON_MASK() {
        return (int)15L;
    }
    public static int NIIF_NOSOUND() {
        return (int)16L;
    }
    public static int NIIF_LARGE_ICON() {
        return (int)32L;
    }
    public static int NIIF_RESPECT_QUIET_TIME() {
        return (int)128L;
    }
    public static int SHGFI_ICON() {
        return (int)256L;
    }
    public static int SHGFI_DISPLAYNAME() {
        return (int)512L;
    }
    public static int SHGFI_TYPENAME() {
        return (int)1024L;
    }
    public static int SHGFI_ATTRIBUTES() {
        return (int)2048L;
    }
    public static int SHGFI_ICONLOCATION() {
        return (int)4096L;
    }
    public static int SHGFI_EXETYPE() {
        return (int)8192L;
    }
    public static int SHGFI_SYSICONINDEX() {
        return (int)16384L;
    }
    public static int SHGFI_LINKOVERLAY() {
        return (int)32768L;
    }
    public static int SHGFI_SELECTED() {
        return (int)65536L;
    }
    public static int SHGFI_ATTR_SPECIFIED() {
        return (int)131072L;
    }
    public static int SHGFI_LARGEICON() {
        return (int)0L;
    }
    public static int SHGFI_SMALLICON() {
        return (int)1L;
    }
    public static int SHGFI_OPENICON() {
        return (int)2L;
    }
    public static int SHGFI_SHELLICONSIZE() {
        return (int)4L;
    }
    public static int SHGFI_PIDL() {
        return (int)8L;
    }
    public static int SHGFI_USEFILEATTRIBUTES() {
        return (int)16L;
    }
    public static int SHGFI_ADDOVERLAYS() {
        return (int)32L;
    }
    public static int SHGFI_OVERLAYINDEX() {
        return (int)64L;
    }
    public static int SHGSI_ICONLOCATION() {
        return (int)0L;
    }
    public static int SHGNLI_PIDL() {
        return (int)1L;
    }
    public static int SHGNLI_PREFIXNAME() {
        return (int)2L;
    }
    public static int SHGNLI_NOUNIQUE() {
        return (int)4L;
    }
    public static int SHGNLI_NOLNK() {
        return (int)8L;
    }
    public static int SHGNLI_NOLOCNAME() {
        return (int)16L;
    }
    public static int SHGNLI_USEURLEXT() {
        return (int)32L;
    }
    public static int PRINTACTION_OPEN() {
        return (int)0L;
    }
    public static int PRINTACTION_PROPERTIES() {
        return (int)1L;
    }
    public static int PRINTACTION_NETINSTALL() {
        return (int)2L;
    }
    public static int PRINTACTION_NETINSTALLLINK() {
        return (int)3L;
    }
    public static int PRINTACTION_TESTPAGE() {
        return (int)4L;
    }
    public static int PRINTACTION_OPENNETPRN() {
        return (int)5L;
    }
    public static int PRINTACTION_DOCUMENTDEFAULTS() {
        return (int)6L;
    }
    public static int PRINTACTION_SERVERPROPERTIES() {
        return (int)7L;
    }
    public static int PRINT_PROP_FORCE_NAME() {
        return (int)1L;
    }
    public static int OFFLINE_STATUS_LOCAL() {
        return (int)1L;
    }
    public static int OFFLINE_STATUS_REMOTE() {
        return (int)2L;
    }
    public static int OFFLINE_STATUS_INCOMPLETE() {
        return (int)4L;
    }
    public static int SHIL_LARGE() {
        return (int)0L;
    }
    public static int SHIL_SMALL() {
        return (int)1L;
    }
    public static int SHIL_EXTRALARGE() {
        return (int)2L;
    }
    public static int SHIL_SYSSMALL() {
        return (int)3L;
    }
    public static int SHIL_JUMBO() {
        return (int)4L;
    }
    public static int PERF_DATA_VERSION() {
        return (int)1L;
    }
    public static int PERF_DATA_REVISION() {
        return (int)1L;
    }
    public static int PERF_SIZE_DWORD() {
        return (int)0L;
    }
    public static int PERF_SIZE_LARGE() {
        return (int)256L;
    }
    public static int PERF_SIZE_ZERO() {
        return (int)512L;
    }
    public static int PERF_SIZE_VARIABLE_LEN() {
        return (int)768L;
    }
    public static int PERF_TYPE_NUMBER() {
        return (int)0L;
    }
    public static int PERF_TYPE_COUNTER() {
        return (int)1024L;
    }
    public static int PERF_TYPE_TEXT() {
        return (int)2048L;
    }
    public static int PERF_TYPE_ZERO() {
        return (int)3072L;
    }
    public static int PERF_NUMBER_HEX() {
        return (int)0L;
    }
    public static int PERF_NUMBER_DECIMAL() {
        return (int)65536L;
    }
    public static int PERF_NUMBER_DEC_1000() {
        return (int)131072L;
    }
    public static int PERF_COUNTER_VALUE() {
        return (int)0L;
    }
    public static int PERF_COUNTER_RATE() {
        return (int)65536L;
    }
    public static int PERF_COUNTER_FRACTION() {
        return (int)131072L;
    }
    public static int PERF_COUNTER_BASE() {
        return (int)196608L;
    }
    public static int PERF_COUNTER_ELAPSED() {
        return (int)262144L;
    }
    public static int PERF_COUNTER_QUEUELEN() {
        return (int)327680L;
    }
    public static int PERF_COUNTER_HISTOGRAM() {
        return (int)393216L;
    }
    public static int PERF_COUNTER_PRECISION() {
        return (int)458752L;
    }
    public static int PERF_TEXT_UNICODE() {
        return (int)0L;
    }
    public static int PERF_TEXT_ASCII() {
        return (int)65536L;
    }
    public static int PERF_TIMER_TICK() {
        return (int)0L;
    }
    public static int PERF_TIMER_100NS() {
        return (int)1048576L;
    }
    public static int PERF_OBJECT_TIMER() {
        return (int)2097152L;
    }
    public static int PERF_DELTA_COUNTER() {
        return (int)4194304L;
    }
    public static int PERF_DELTA_BASE() {
        return (int)8388608L;
    }
    public static int PERF_INVERSE_COUNTER() {
        return (int)16777216L;
    }
    public static int PERF_MULTI_COUNTER() {
        return (int)33554432L;
    }
    public static int PERF_DISPLAY_NO_SUFFIX() {
        return (int)0L;
    }
    public static int PERF_DISPLAY_PER_SEC() {
        return (int)268435456L;
    }
    public static int PERF_DISPLAY_PERCENT() {
        return (int)536870912L;
    }
    public static int PERF_DISPLAY_SECONDS() {
        return (int)805306368L;
    }
    public static int PERF_DISPLAY_NOSHOW() {
        return (int)1073741824L;
    }
    public static int PERF_DETAIL_NOVICE() {
        return (int)100L;
    }
    public static int PERF_DETAIL_ADVANCED() {
        return (int)200L;
    }
    public static int PERF_DETAIL_EXPERT() {
        return (int)300L;
    }
    public static int PERF_DETAIL_WIZARD() {
        return (int)400L;
    }
    public static int WINPERF_LOG_NONE() {
        return (int)0L;
    }
    public static int WINPERF_LOG_USER() {
        return (int)1L;
    }
    public static int WINPERF_LOG_DEBUG() {
        return (int)2L;
    }
    public static int WINPERF_LOG_VERBOSE() {
        return (int)3L;
    }
    public static int FD_SETSIZE() {
        return (int)64L;
    }
    public static int IOCPARM_MASK() {
        return (int)127L;
    }
    public static int IOC_VOID() {
        return (int)536870912L;
    }
    public static int IOC_OUT() {
        return (int)1073741824L;
    }
    public static int IPPROTO_IP() {
        return (int)0L;
    }
    public static int IPPROTO_ICMP() {
        return (int)1L;
    }
    public static int IPPROTO_IGMP() {
        return (int)2L;
    }
    public static int IPPROTO_GGP() {
        return (int)3L;
    }
    public static int IPPROTO_TCP() {
        return (int)6L;
    }
    public static int IPPROTO_PUP() {
        return (int)12L;
    }
    public static int IPPROTO_UDP() {
        return (int)17L;
    }
    public static int IPPROTO_IDP() {
        return (int)22L;
    }
    public static int IPPROTO_ND() {
        return (int)77L;
    }
    public static int IPPROTO_RAW() {
        return (int)255L;
    }
    public static int IPPROTO_MAX() {
        return (int)256L;
    }
    public static int IPPORT_ECHO() {
        return (int)7L;
    }
    public static int IPPORT_DISCARD() {
        return (int)9L;
    }
    public static int IPPORT_SYSTAT() {
        return (int)11L;
    }
    public static int IPPORT_DAYTIME() {
        return (int)13L;
    }
    public static int IPPORT_NETSTAT() {
        return (int)15L;
    }
    public static int IPPORT_FTP() {
        return (int)21L;
    }
    public static int IPPORT_TELNET() {
        return (int)23L;
    }
    public static int IPPORT_SMTP() {
        return (int)25L;
    }
    public static int IPPORT_TIMESERVER() {
        return (int)37L;
    }
    public static int IPPORT_NAMESERVER() {
        return (int)42L;
    }
    public static int IPPORT_WHOIS() {
        return (int)43L;
    }
    public static int IPPORT_MTP() {
        return (int)57L;
    }
    public static int IPPORT_TFTP() {
        return (int)69L;
    }
    public static int IPPORT_RJE() {
        return (int)77L;
    }
    public static int IPPORT_FINGER() {
        return (int)79L;
    }
    public static int IPPORT_TTYLINK() {
        return (int)87L;
    }
    public static int IPPORT_SUPDUP() {
        return (int)95L;
    }
    public static int IPPORT_EXECSERVER() {
        return (int)512L;
    }
    public static int IPPORT_LOGINSERVER() {
        return (int)513L;
    }
    public static int IPPORT_CMDSERVER() {
        return (int)514L;
    }
    public static int IPPORT_EFSSERVER() {
        return (int)520L;
    }
    public static int IPPORT_BIFFUDP() {
        return (int)512L;
    }
    public static int IPPORT_WHOSERVER() {
        return (int)513L;
    }
    public static int IPPORT_ROUTESERVER() {
        return (int)520L;
    }
    public static int IPPORT_RESERVED() {
        return (int)1024L;
    }
    public static int IMPLINK_IP() {
        return (int)155L;
    }
    public static int IMPLINK_LOWEXPER() {
        return (int)156L;
    }
    public static int IMPLINK_HIGHEXPER() {
        return (int)158L;
    }
    public static int IN_CLASSA_NSHIFT() {
        return (int)24L;
    }
    public static int IN_CLASSA_HOST() {
        return (int)16777215L;
    }
    public static int IN_CLASSA_MAX() {
        return (int)128L;
    }
    public static int IN_CLASSB_NSHIFT() {
        return (int)16L;
    }
    public static int IN_CLASSB_HOST() {
        return (int)65535L;
    }
    public static int IN_CLASSB_MAX() {
        return (int)65536L;
    }
    public static int IN_CLASSC_NSHIFT() {
        return (int)8L;
    }
    public static int IN_CLASSC_HOST() {
        return (int)255L;
    }
    public static int INADDR_LOOPBACK() {
        return (int)2130706433L;
    }
    public static int WSADESCRIPTION_LEN() {
        return (int)256L;
    }
    public static int WSASYS_STATUS_LEN() {
        return (int)128L;
    }
    public static int IP_OPTIONS() {
        return (int)1L;
    }
    public static int IP_MULTICAST_IF() {
        return (int)2L;
    }
    public static int IP_MULTICAST_TTL() {
        return (int)3L;
    }
    public static int IP_MULTICAST_LOOP() {
        return (int)4L;
    }
    public static int IP_ADD_MEMBERSHIP() {
        return (int)5L;
    }
    public static int IP_DROP_MEMBERSHIP() {
        return (int)6L;
    }
    public static int IP_TTL() {
        return (int)7L;
    }
    public static int IP_TOS() {
        return (int)8L;
    }
    public static int IP_DONTFRAGMENT() {
        return (int)9L;
    }
    public static int IP_DEFAULT_MULTICAST_TTL() {
        return (int)1L;
    }
    public static int IP_DEFAULT_MULTICAST_LOOP() {
        return (int)1L;
    }
    public static int IP_MAX_MEMBERSHIPS() {
        return (int)20L;
    }
    public static int SOCK_STREAM() {
        return (int)1L;
    }
    public static int SOCK_DGRAM() {
        return (int)2L;
    }
    public static int SOCK_RAW() {
        return (int)3L;
    }
    public static int SOCK_RDM() {
        return (int)4L;
    }
    public static int SOCK_SEQPACKET() {
        return (int)5L;
    }
    public static int SO_DEBUG() {
        return (int)1L;
    }
    public static int SO_ACCEPTCONN() {
        return (int)2L;
    }
    public static int SO_REUSEADDR() {
        return (int)4L;
    }
    public static int SO_KEEPALIVE() {
        return (int)8L;
    }
    public static int SO_DONTROUTE() {
        return (int)16L;
    }
    public static int SO_BROADCAST() {
        return (int)32L;
    }
    public static int SO_USELOOPBACK() {
        return (int)64L;
    }
    public static int SO_LINGER() {
        return (int)128L;
    }
    public static int SO_OOBINLINE() {
        return (int)256L;
    }
    public static int SO_SNDBUF() {
        return (int)4097L;
    }
    public static int SO_RCVBUF() {
        return (int)4098L;
    }
    public static int SO_SNDLOWAT() {
        return (int)4099L;
    }
    public static int SO_RCVLOWAT() {
        return (int)4100L;
    }
    public static int SO_SNDTIMEO() {
        return (int)4101L;
    }
    public static int SO_RCVTIMEO() {
        return (int)4102L;
    }
    public static int SO_ERROR() {
        return (int)4103L;
    }
    public static int SO_TYPE() {
        return (int)4104L;
    }
    public static int SO_CONNDATA() {
        return (int)28672L;
    }
    public static int SO_CONNOPT() {
        return (int)28673L;
    }
    public static int SO_DISCDATA() {
        return (int)28674L;
    }
    public static int SO_DISCOPT() {
        return (int)28675L;
    }
    public static int SO_CONNDATALEN() {
        return (int)28676L;
    }
    public static int SO_CONNOPTLEN() {
        return (int)28677L;
    }
    public static int SO_DISCDATALEN() {
        return (int)28678L;
    }
    public static int SO_DISCOPTLEN() {
        return (int)28679L;
    }
    public static int SO_OPENTYPE() {
        return (int)28680L;
    }
    public static int SO_SYNCHRONOUS_ALERT() {
        return (int)16L;
    }
    public static int SO_SYNCHRONOUS_NONALERT() {
        return (int)32L;
    }
    public static int SO_MAXDG() {
        return (int)28681L;
    }
    public static int SO_MAXPATHDG() {
        return (int)28682L;
    }
    public static int SO_UPDATE_ACCEPT_CONTEXT() {
        return (int)28683L;
    }
    public static int SO_CONNECT_TIME() {
        return (int)28684L;
    }
    public static int TCP_NODELAY() {
        return (int)1L;
    }
    public static int TCP_BSDURGENT() {
        return (int)28672L;
    }
    public static int AF_UNSPEC() {
        return (int)0L;
    }
    public static int AF_UNIX() {
        return (int)1L;
    }
    public static int AF_INET() {
        return (int)2L;
    }
    public static int AF_IMPLINK() {
        return (int)3L;
    }
    public static int AF_PUP() {
        return (int)4L;
    }
    public static int AF_CHAOS() {
        return (int)5L;
    }
    public static int AF_IPX() {
        return (int)6L;
    }
    public static int AF_NS() {
        return (int)6L;
    }
    public static int AF_ISO() {
        return (int)7L;
    }
    public static int AF_ECMA() {
        return (int)8L;
    }
    public static int AF_DATAKIT() {
        return (int)9L;
    }
    public static int AF_CCITT() {
        return (int)10L;
    }
    public static int AF_SNA() {
        return (int)11L;
    }
    public static int AF_DECnet() {
        return (int)12L;
    }
    public static int AF_DLI() {
        return (int)13L;
    }
    public static int AF_LAT() {
        return (int)14L;
    }
    public static int AF_HYLINK() {
        return (int)15L;
    }
    public static int AF_APPLETALK() {
        return (int)16L;
    }
    public static int AF_NETBIOS() {
        return (int)17L;
    }
    public static int AF_VOICEVIEW() {
        return (int)18L;
    }
    public static int AF_FIREFOX() {
        return (int)19L;
    }
    public static int AF_UNKNOWN1() {
        return (int)20L;
    }
    public static int AF_BAN() {
        return (int)21L;
    }
    public static int AF_MAX() {
        return (int)22L;
    }
    public static int SOL_SOCKET() {
        return (int)65535L;
    }
    public static int SOMAXCONN() {
        return (int)5L;
    }
    public static int MSG_OOB() {
        return (int)1L;
    }
    public static int MSG_PEEK() {
        return (int)2L;
    }
    public static int MSG_DONTROUTE() {
        return (int)4L;
    }
    public static int MSG_MAXIOVLEN() {
        return (int)16L;
    }
    public static int MSG_PARTIAL() {
        return (int)32768L;
    }
    public static int MAXGETHOSTSTRUCT() {
        return (int)1024L;
    }
    public static int FD_READ() {
        return (int)1L;
    }
    public static int FD_WRITE() {
        return (int)2L;
    }
    public static int FD_OOB() {
        return (int)4L;
    }
    public static int FD_ACCEPT() {
        return (int)8L;
    }
    public static int FD_CONNECT() {
        return (int)16L;
    }
    public static int FD_CLOSE() {
        return (int)32L;
    }
    public static int TF_DISCONNECT() {
        return (int)1L;
    }
    public static int TF_REUSE_SOCKET() {
        return (int)2L;
    }
    public static int TF_WRITE_BEHIND() {
        return (int)4L;
    }
    public static int ALG_SID_RSA_ANY() {
        return (int)0L;
    }
    public static int ALG_SID_RSA_PKCS() {
        return (int)1L;
    }
    public static int ALG_SID_RSA_MSATWORK() {
        return (int)2L;
    }
    public static int ALG_SID_RSA_ENTRUST() {
        return (int)3L;
    }
    public static int ALG_SID_RSA_PGP() {
        return (int)4L;
    }
    public static int ALG_SID_DSS_ANY() {
        return (int)0L;
    }
    public static int ALG_SID_DSS_PKCS() {
        return (int)1L;
    }
    public static int ALG_SID_DSS_DMS() {
        return (int)2L;
    }
    public static int ALG_SID_ECDSA() {
        return (int)3L;
    }
    public static int ALG_SID_DES() {
        return (int)1L;
    }
    public static int ALG_SID_3DES() {
        return (int)3L;
    }
    public static int ALG_SID_DESX() {
        return (int)4L;
    }
    public static int ALG_SID_IDEA() {
        return (int)5L;
    }
    public static int ALG_SID_CAST() {
        return (int)6L;
    }
    public static int ALG_SID_SAFERSK64() {
        return (int)7L;
    }
    public static int ALG_SID_SAFERSK128() {
        return (int)8L;
    }
    public static int ALG_SID_3DES_112() {
        return (int)9L;
    }
    public static int ALG_SID_CYLINK_MEK() {
        return (int)12L;
    }
    public static int ALG_SID_RC5() {
        return (int)13L;
    }
    public static int ALG_SID_AES_128() {
        return (int)14L;
    }
    public static int ALG_SID_AES_192() {
        return (int)15L;
    }
    public static int ALG_SID_AES_256() {
        return (int)16L;
    }
    public static int ALG_SID_AES() {
        return (int)17L;
    }
    public static int ALG_SID_SKIPJACK() {
        return (int)10L;
    }
    public static int ALG_SID_TEK() {
        return (int)11L;
    }
    public static int CRYPT_MODE_CBCI() {
        return (int)6L;
    }
    public static int CRYPT_MODE_CFBP() {
        return (int)7L;
    }
    public static int CRYPT_MODE_OFBP() {
        return (int)8L;
    }
    public static int CRYPT_MODE_CBCOFM() {
        return (int)9L;
    }
    public static int CRYPT_MODE_CBCOFMI() {
        return (int)10L;
    }
    public static int ALG_SID_RC2() {
        return (int)2L;
    }
    public static int ALG_SID_RC4() {
        return (int)1L;
    }
    public static int ALG_SID_SEAL() {
        return (int)2L;
    }
    public static int ALG_SID_DH_SANDF() {
        return (int)1L;
    }
    public static int ALG_SID_DH_EPHEM() {
        return (int)2L;
    }
    public static int ALG_SID_AGREED_KEY_ANY() {
        return (int)3L;
    }
    public static int ALG_SID_KEA() {
        return (int)4L;
    }
    public static int ALG_SID_ECDH() {
        return (int)5L;
    }
    public static int ALG_SID_ECDH_EPHEM() {
        return (int)6L;
    }
    public static int ALG_SID_MD2() {
        return (int)1L;
    }
    public static int ALG_SID_MD4() {
        return (int)2L;
    }
    public static int ALG_SID_MD5() {
        return (int)3L;
    }
    public static int ALG_SID_SHA() {
        return (int)4L;
    }
    public static int ALG_SID_SHA1() {
        return (int)4L;
    }
    public static int ALG_SID_MAC() {
        return (int)5L;
    }
    public static int ALG_SID_RIPEMD() {
        return (int)6L;
    }
    public static int ALG_SID_RIPEMD160() {
        return (int)7L;
    }
    public static int ALG_SID_SSL3SHAMD5() {
        return (int)8L;
    }
    public static int ALG_SID_HMAC() {
        return (int)9L;
    }
    public static int ALG_SID_TLS1PRF() {
        return (int)10L;
    }
    public static int ALG_SID_HASH_REPLACE_OWF() {
        return (int)11L;
    }
    public static int ALG_SID_SHA_256() {
        return (int)12L;
    }
    public static int ALG_SID_SHA_384() {
        return (int)13L;
    }
    public static int ALG_SID_SHA_512() {
        return (int)14L;
    }
    public static int ALG_SID_SSL3_MASTER() {
        return (int)1L;
    }
    public static int ALG_SID_SCHANNEL_MASTER_HASH() {
        return (int)2L;
    }
    public static int ALG_SID_SCHANNEL_MAC_KEY() {
        return (int)3L;
    }
    public static int ALG_SID_PCT1_MASTER() {
        return (int)4L;
    }
    public static int ALG_SID_SSL2_MASTER() {
        return (int)5L;
    }
    public static int ALG_SID_TLS1_MASTER() {
        return (int)6L;
    }
    public static int ALG_SID_SCHANNEL_ENC_KEY() {
        return (int)7L;
    }
    public static int ALG_SID_ECMQV() {
        return (int)1L;
    }
    public static int ALG_SID_EXAMPLE() {
        return (int)80L;
    }
    public static int CRYPT_NEWKEYSET() {
        return (int)8L;
    }
    public static int CRYPT_DELETEKEYSET() {
        return (int)16L;
    }
    public static int CRYPT_MACHINE_KEYSET() {
        return (int)32L;
    }
    public static int CRYPT_SILENT() {
        return (int)64L;
    }
    public static int CRYPT_DEFAULT_CONTAINER_OPTIONAL() {
        return (int)128L;
    }
    public static int CRYPT_EXPORTABLE() {
        return (int)1L;
    }
    public static int CRYPT_USER_PROTECTED() {
        return (int)2L;
    }
    public static int CRYPT_CREATE_SALT() {
        return (int)4L;
    }
    public static int CRYPT_UPDATE_KEY() {
        return (int)8L;
    }
    public static int CRYPT_NO_SALT() {
        return (int)16L;
    }
    public static int CRYPT_PREGEN() {
        return (int)64L;
    }
    public static int CRYPT_RECIPIENT() {
        return (int)16L;
    }
    public static int CRYPT_INITIATOR() {
        return (int)64L;
    }
    public static int CRYPT_ONLINE() {
        return (int)128L;
    }
    public static int CRYPT_SF() {
        return (int)256L;
    }
    public static int CRYPT_CREATE_IV() {
        return (int)512L;
    }
    public static int CRYPT_KEK() {
        return (int)1024L;
    }
    public static int CRYPT_DATA_KEY() {
        return (int)2048L;
    }
    public static int CRYPT_VOLATILE() {
        return (int)4096L;
    }
    public static int CRYPT_SGCKEY() {
        return (int)8192L;
    }
    public static int CRYPT_USER_PROTECTED_STRONG() {
        return (int)1048576L;
    }
    public static int CRYPT_ARCHIVABLE() {
        return (int)16384L;
    }
    public static int CRYPT_FORCE_KEY_PROTECTION_HIGH() {
        return (int)32768L;
    }
    public static int RSA1024BIT_KEY() {
        return (int)67108864L;
    }
    public static int CRYPT_SERVER() {
        return (int)1024L;
    }
    public static int CRYPT_Y_ONLY() {
        return (int)1L;
    }
    public static int CRYPT_SSL2_FALLBACK() {
        return (int)2L;
    }
    public static int CRYPT_DESTROYKEY() {
        return (int)4L;
    }
    public static int CRYPT_OAEP() {
        return (int)64L;
    }
    public static int CRYPT_BLOB_VER3() {
        return (int)128L;
    }
    public static int CRYPT_IPSEC_HMAC_KEY() {
        return (int)256L;
    }
    public static int CRYPT_DECRYPT_RSA_NO_PADDING_CHECK() {
        return (int)32L;
    }
    public static int CRYPT_SECRETDIGEST() {
        return (int)1L;
    }
    public static int CRYPT_OWF_REPL_LM_HASH() {
        return (int)1L;
    }
    public static int CRYPT_LITTLE_ENDIAN() {
        return (int)1L;
    }
    public static int CRYPT_NOHASHOID() {
        return (int)1L;
    }
    public static int CRYPT_TYPE2_FORMAT() {
        return (int)2L;
    }
    public static int CRYPT_X931_FORMAT() {
        return (int)4L;
    }
    public static int CRYPT_MACHINE_DEFAULT() {
        return (int)1L;
    }
    public static int CRYPT_USER_DEFAULT() {
        return (int)2L;
    }
    public static int CRYPT_DELETE_DEFAULT() {
        return (int)4L;
    }
    public static int SIMPLEBLOB() {
        return (int)1L;
    }
    public static int PUBLICKEYBLOB() {
        return (int)6L;
    }
    public static int PRIVATEKEYBLOB() {
        return (int)7L;
    }
    public static int PLAINTEXTKEYBLOB() {
        return (int)8L;
    }
    public static int OPAQUEKEYBLOB() {
        return (int)9L;
    }
    public static int PUBLICKEYBLOBEX() {
        return (int)10L;
    }
    public static int SYMMETRICWRAPKEYBLOB() {
        return (int)11L;
    }
    public static int KEYSTATEBLOB() {
        return (int)12L;
    }
    public static int AT_KEYEXCHANGE() {
        return (int)1L;
    }
    public static int AT_SIGNATURE() {
        return (int)2L;
    }
    public static int CRYPT_USERDATA() {
        return (int)1L;
    }
    public static int KP_IV() {
        return (int)1L;
    }
    public static int KP_SALT() {
        return (int)2L;
    }
    public static int KP_PADDING() {
        return (int)3L;
    }
    public static int KP_MODE() {
        return (int)4L;
    }
    public static int KP_MODE_BITS() {
        return (int)5L;
    }
    public static int KP_PERMISSIONS() {
        return (int)6L;
    }
    public static int KP_ALGID() {
        return (int)7L;
    }
    public static int KP_BLOCKLEN() {
        return (int)8L;
    }
    public static int KP_KEYLEN() {
        return (int)9L;
    }
    public static int KP_SALT_EX() {
        return (int)10L;
    }
    public static int KP_P() {
        return (int)11L;
    }
    public static int KP_G() {
        return (int)12L;
    }
    public static int KP_Q() {
        return (int)13L;
    }
    public static int KP_X() {
        return (int)14L;
    }
    public static int KP_Y() {
        return (int)15L;
    }
    public static int KP_RA() {
        return (int)16L;
    }
    public static int KP_RB() {
        return (int)17L;
    }
    public static int KP_INFO() {
        return (int)18L;
    }
    public static int KP_EFFECTIVE_KEYLEN() {
        return (int)19L;
    }
    public static int KP_SCHANNEL_ALG() {
        return (int)20L;
    }
    public static int KP_CLIENT_RANDOM() {
        return (int)21L;
    }
    public static int KP_SERVER_RANDOM() {
        return (int)22L;
    }
    public static int KP_RP() {
        return (int)23L;
    }
    public static int KP_PRECOMP_MD5() {
        return (int)24L;
    }
    public static int KP_PRECOMP_SHA() {
        return (int)25L;
    }
    public static int KP_CERTIFICATE() {
        return (int)26L;
    }
    public static int KP_CLEAR_KEY() {
        return (int)27L;
    }
    public static int KP_PUB_EX_LEN() {
        return (int)28L;
    }
    public static int KP_PUB_EX_VAL() {
        return (int)29L;
    }
    public static int KP_KEYVAL() {
        return (int)30L;
    }
    public static int KP_ADMIN_PIN() {
        return (int)31L;
    }
    public static int KP_KEYEXCHANGE_PIN() {
        return (int)32L;
    }
    public static int KP_SIGNATURE_PIN() {
        return (int)33L;
    }
    public static int KP_PREHASH() {
        return (int)34L;
    }
    public static int KP_ROUNDS() {
        return (int)35L;
    }
    public static int KP_OAEP_PARAMS() {
        return (int)36L;
    }
    public static int KP_CMS_KEY_INFO() {
        return (int)37L;
    }
    public static int KP_CMS_DH_KEY_INFO() {
        return (int)38L;
    }
    public static int KP_PUB_PARAMS() {
        return (int)39L;
    }
    public static int KP_VERIFY_PARAMS() {
        return (int)40L;
    }
    public static int KP_HIGHEST_VERSION() {
        return (int)41L;
    }
    public static int KP_GET_USE_COUNT() {
        return (int)42L;
    }
    public static int KP_PIN_ID() {
        return (int)43L;
    }
    public static int KP_PIN_INFO() {
        return (int)44L;
    }
    public static int PKCS5_PADDING() {
        return (int)1L;
    }
    public static int RANDOM_PADDING() {
        return (int)2L;
    }
    public static int ZERO_PADDING() {
        return (int)3L;
    }
    public static int CRYPT_MODE_CBC() {
        return (int)1L;
    }
    public static int CRYPT_MODE_ECB() {
        return (int)2L;
    }
    public static int CRYPT_MODE_OFB() {
        return (int)3L;
    }
    public static int CRYPT_MODE_CFB() {
        return (int)4L;
    }
    public static int CRYPT_MODE_CTS() {
        return (int)5L;
    }
    public static int CRYPT_ENCRYPT() {
        return (int)1L;
    }
    public static int CRYPT_DECRYPT() {
        return (int)2L;
    }
    public static int CRYPT_EXPORT() {
        return (int)4L;
    }
    public static int CRYPT_READ() {
        return (int)8L;
    }
    public static int CRYPT_WRITE() {
        return (int)16L;
    }
    public static int CRYPT_MAC() {
        return (int)32L;
    }
    public static int CRYPT_EXPORT_KEY() {
        return (int)64L;
    }
    public static int CRYPT_IMPORT_KEY() {
        return (int)128L;
    }
    public static int CRYPT_ARCHIVE() {
        return (int)256L;
    }
    public static int HP_ALGID() {
        return (int)1L;
    }
    public static int HP_HASHVAL() {
        return (int)2L;
    }
    public static int HP_HASHSIZE() {
        return (int)4L;
    }
    public static int HP_HMAC_INFO() {
        return (int)5L;
    }
    public static int HP_TLS1PRF_LABEL() {
        return (int)6L;
    }
    public static int HP_TLS1PRF_SEED() {
        return (int)7L;
    }
    public static int PP_ENUMALGS() {
        return (int)1L;
    }
    public static int PP_ENUMCONTAINERS() {
        return (int)2L;
    }
    public static int PP_IMPTYPE() {
        return (int)3L;
    }
    public static int PP_NAME() {
        return (int)4L;
    }
    public static int PP_VERSION() {
        return (int)5L;
    }
    public static int PP_CONTAINER() {
        return (int)6L;
    }
    public static int PP_CHANGE_PASSWORD() {
        return (int)7L;
    }
    public static int PP_KEYSET_SEC_DESCR() {
        return (int)8L;
    }
    public static int PP_CERTCHAIN() {
        return (int)9L;
    }
    public static int PP_KEY_TYPE_SUBTYPE() {
        return (int)10L;
    }
    public static int PP_PROVTYPE() {
        return (int)16L;
    }
    public static int PP_KEYSTORAGE() {
        return (int)17L;
    }
    public static int PP_APPLI_CERT() {
        return (int)18L;
    }
    public static int PP_SYM_KEYSIZE() {
        return (int)19L;
    }
    public static int PP_SESSION_KEYSIZE() {
        return (int)20L;
    }
    public static int PP_UI_PROMPT() {
        return (int)21L;
    }
    public static int PP_ENUMALGS_EX() {
        return (int)22L;
    }
    public static int PP_ENUMMANDROOTS() {
        return (int)25L;
    }
    public static int PP_ENUMELECTROOTS() {
        return (int)26L;
    }
    public static int PP_KEYSET_TYPE() {
        return (int)27L;
    }
    public static int PP_ADMIN_PIN() {
        return (int)31L;
    }
    public static int PP_KEYEXCHANGE_PIN() {
        return (int)32L;
    }
    public static int PP_SIGNATURE_PIN() {
        return (int)33L;
    }
    public static int PP_SIG_KEYSIZE_INC() {
        return (int)34L;
    }
    public static int PP_KEYX_KEYSIZE_INC() {
        return (int)35L;
    }
    public static int PP_UNIQUE_CONTAINER() {
        return (int)36L;
    }
    public static int PP_SGC_INFO() {
        return (int)37L;
    }
    public static int PP_USE_HARDWARE_RNG() {
        return (int)38L;
    }
    public static int PP_KEYSPEC() {
        return (int)39L;
    }
    public static int PP_ENUMEX_SIGNING_PROT() {
        return (int)40L;
    }
    public static int PP_CRYPT_COUNT_KEY_USE() {
        return (int)41L;
    }
    public static int PP_USER_CERTSTORE() {
        return (int)42L;
    }
    public static int PP_SMARTCARD_READER() {
        return (int)43L;
    }
    public static int PP_SMARTCARD_GUID() {
        return (int)45L;
    }
    public static int PP_ROOT_CERTSTORE() {
        return (int)46L;
    }
    public static int PP_SMARTCARD_READER_ICON() {
        return (int)47L;
    }
    public static int CRYPT_FIRST() {
        return (int)1L;
    }
    public static int CRYPT_NEXT() {
        return (int)2L;
    }
    public static int CRYPT_SGC_ENUM() {
        return (int)4L;
    }
    public static int CRYPT_IMPL_HARDWARE() {
        return (int)1L;
    }
    public static int CRYPT_IMPL_SOFTWARE() {
        return (int)2L;
    }
    public static int CRYPT_IMPL_MIXED() {
        return (int)3L;
    }
    public static int CRYPT_IMPL_UNKNOWN() {
        return (int)4L;
    }
    public static int CRYPT_IMPL_REMOVABLE() {
        return (int)8L;
    }
    public static int CRYPT_SEC_DESCR() {
        return (int)1L;
    }
    public static int CRYPT_PSTORE() {
        return (int)2L;
    }
    public static int CRYPT_UI_PROMPT() {
        return (int)4L;
    }
    public static int CRYPT_FLAG_PCT1() {
        return (int)1L;
    }
    public static int CRYPT_FLAG_SSL2() {
        return (int)2L;
    }
    public static int CRYPT_FLAG_SSL3() {
        return (int)4L;
    }
    public static int CRYPT_FLAG_TLS1() {
        return (int)8L;
    }
    public static int CRYPT_FLAG_IPSEC() {
        return (int)16L;
    }
    public static int CRYPT_FLAG_SIGNING() {
        return (int)32L;
    }
    public static int CRYPT_SGC() {
        return (int)1L;
    }
    public static int CRYPT_FASTSGC() {
        return (int)2L;
    }
    public static int PP_CLIENT_HWND() {
        return (int)1L;
    }
    public static int PP_CONTEXT_INFO() {
        return (int)11L;
    }
    public static int PP_KEYEXCHANGE_KEYSIZE() {
        return (int)12L;
    }
    public static int PP_SIGNATURE_KEYSIZE() {
        return (int)13L;
    }
    public static int PP_KEYEXCHANGE_ALG() {
        return (int)14L;
    }
    public static int PP_SIGNATURE_ALG() {
        return (int)15L;
    }
    public static int PP_DELETEKEY() {
        return (int)24L;
    }
    public static int PP_PIN_PROMPT_STRING() {
        return (int)44L;
    }
    public static int PP_SECURE_KEYEXCHANGE_PIN() {
        return (int)47L;
    }
    public static int PP_SECURE_SIGNATURE_PIN() {
        return (int)48L;
    }
    public static int PP_DISMISS_PIN_UI_SEC() {
        return (int)49L;
    }
    public static int PROV_RSA_FULL() {
        return (int)1L;
    }
    public static int PROV_RSA_SIG() {
        return (int)2L;
    }
    public static int PROV_DSS() {
        return (int)3L;
    }
    public static int PROV_FORTEZZA() {
        return (int)4L;
    }
    public static int PROV_MS_EXCHANGE() {
        return (int)5L;
    }
    public static int PROV_SSL() {
        return (int)6L;
    }
    public static int PROV_RSA_SCHANNEL() {
        return (int)12L;
    }
    public static int PROV_DSS_DH() {
        return (int)13L;
    }
    public static int PROV_EC_ECDSA_SIG() {
        return (int)14L;
    }
    public static int PROV_EC_ECNRA_SIG() {
        return (int)15L;
    }
    public static int PROV_EC_ECDSA_FULL() {
        return (int)16L;
    }
    public static int PROV_EC_ECNRA_FULL() {
        return (int)17L;
    }
    public static int PROV_DH_SCHANNEL() {
        return (int)18L;
    }
    public static int PROV_SPYRUS_LYNKS() {
        return (int)20L;
    }
    public static int PROV_RNG() {
        return (int)21L;
    }
    public static int PROV_INTEL_SEC() {
        return (int)22L;
    }
    public static int PROV_REPLACE_OWF() {
        return (int)23L;
    }
    public static int PROV_RSA_AES() {
        return (int)24L;
    }
    public static int MAXUIDLEN() {
        return (int)64L;
    }
    public static int cPRIV_KEY_CACHE_MAX_ITEMS_DEFAULT() {
        return (int)20L;
    }
    public static int cPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS_DEFAULT() {
        return (int)86400L;
    }
    public static int CUR_BLOB_VERSION() {
        return (int)2L;
    }
    public static int SCHANNEL_MAC_KEY() {
        return (int)0L;
    }
    public static int SCHANNEL_ENC_KEY() {
        return (int)1L;
    }
    public static int INTERNATIONAL_USAGE() {
        return (int)1L;
    }
    public static int CERT_RDN_ANY_TYPE() {
        return (int)0L;
    }
    public static int CERT_RDN_ENCODED_BLOB() {
        return (int)1L;
    }
    public static int CERT_RDN_OCTET_STRING() {
        return (int)2L;
    }
    public static int CERT_RDN_NUMERIC_STRING() {
        return (int)3L;
    }
    public static int CERT_RDN_PRINTABLE_STRING() {
        return (int)4L;
    }
    public static int CERT_RDN_TELETEX_STRING() {
        return (int)5L;
    }
    public static int CERT_RDN_T61_STRING() {
        return (int)5L;
    }
    public static int CERT_RDN_VIDEOTEX_STRING() {
        return (int)6L;
    }
    public static int CERT_RDN_IA5_STRING() {
        return (int)7L;
    }
    public static int CERT_RDN_GRAPHIC_STRING() {
        return (int)8L;
    }
    public static int CERT_RDN_VISIBLE_STRING() {
        return (int)9L;
    }
    public static int CERT_RDN_ISO646_STRING() {
        return (int)9L;
    }
    public static int CERT_RDN_GENERAL_STRING() {
        return (int)10L;
    }
    public static int CERT_RDN_UNIVERSAL_STRING() {
        return (int)11L;
    }
    public static int CERT_RDN_INT4_STRING() {
        return (int)11L;
    }
    public static int CERT_RDN_BMP_STRING() {
        return (int)12L;
    }
    public static int CERT_RDN_UNICODE_STRING() {
        return (int)12L;
    }
    public static int CERT_RDN_UTF8_STRING() {
        return (int)13L;
    }
    public static int CERT_RDN_TYPE_MASK() {
        return (int)255L;
    }
    public static int CERT_RDN_ENABLE_UTF8_UNICODE_FLAG() {
        return (int)536870912L;
    }
    public static int CERT_RDN_FORCE_UTF8_UNICODE_FLAG() {
        return (int)268435456L;
    }
    public static int CERT_RDN_DISABLE_CHECK_TYPE_FLAG() {
        return (int)1073741824L;
    }
    public static int CERT_RDN_DISABLE_IE4_UTF8_FLAG() {
        return (int)16777216L;
    }
    public static int CERT_RDN_ENABLE_PUNYCODE_FLAG() {
        return (int)33554432L;
    }
    public static int CRYPT_ECC_PRIVATE_KEY_INFO_v1() {
        return (int)1L;
    }
    public static int CERT_V1() {
        return (int)0L;
    }
    public static int CERT_V2() {
        return (int)1L;
    }
    public static int CERT_V3() {
        return (int)2L;
    }
    public static int CERT_INFO_VERSION_FLAG() {
        return (int)1L;
    }
    public static int CERT_INFO_SERIAL_NUMBER_FLAG() {
        return (int)2L;
    }
    public static int CERT_INFO_SIGNATURE_ALGORITHM_FLAG() {
        return (int)3L;
    }
    public static int CERT_INFO_ISSUER_FLAG() {
        return (int)4L;
    }
    public static int CERT_INFO_NOT_BEFORE_FLAG() {
        return (int)5L;
    }
    public static int CERT_INFO_NOT_AFTER_FLAG() {
        return (int)6L;
    }
    public static int CERT_INFO_SUBJECT_FLAG() {
        return (int)7L;
    }
    public static int CERT_INFO_SUBJECT_PUBLIC_KEY_INFO_FLAG() {
        return (int)8L;
    }
    public static int CERT_INFO_ISSUER_UNIQUE_ID_FLAG() {
        return (int)9L;
    }
    public static int CERT_INFO_SUBJECT_UNIQUE_ID_FLAG() {
        return (int)10L;
    }
    public static int CERT_INFO_EXTENSION_FLAG() {
        return (int)11L;
    }
    public static int CRL_V1() {
        return (int)0L;
    }
    public static int CRL_V2() {
        return (int)1L;
    }
    public static int CERT_BUNDLE_CERTIFICATE() {
        return (int)0L;
    }
    public static int CERT_BUNDLE_CRL() {
        return (int)1L;
    }
    public static int CERT_REQUEST_V1() {
        return (int)0L;
    }
    public static int CERT_KEYGEN_REQUEST_V1() {
        return (int)0L;
    }
    public static int CTL_V1() {
        return (int)0L;
    }
    public static int CERT_ENCODING_TYPE_MASK() {
        return (int)65535L;
    }
    public static int CRYPT_ASN_ENCODING() {
        return (int)1L;
    }
    public static int CRYPT_NDR_ENCODING() {
        return (int)2L;
    }
    public static int X509_ASN_ENCODING() {
        return (int)1L;
    }
    public static int X509_NDR_ENCODING() {
        return (int)2L;
    }
    public static int PKCS_7_ASN_ENCODING() {
        return (int)65536L;
    }
    public static int PKCS_7_NDR_ENCODING() {
        return (int)131072L;
    }
    public static int CRYPT_FORMAT_STR_MULTI_LINE() {
        return (int)1L;
    }
    public static int CRYPT_FORMAT_STR_NO_HEX() {
        return (int)16L;
    }
    public static int CRYPT_FORMAT_SIMPLE() {
        return (int)1L;
    }
    public static int CRYPT_FORMAT_X509() {
        return (int)2L;
    }
    public static int CRYPT_FORMAT_OID() {
        return (int)4L;
    }
    public static int CRYPT_FORMAT_RDN_SEMICOLON() {
        return (int)256L;
    }
    public static int CRYPT_FORMAT_RDN_CRLF() {
        return (int)512L;
    }
    public static int CRYPT_FORMAT_RDN_UNQUOTE() {
        return (int)1024L;
    }
    public static int CRYPT_FORMAT_RDN_REVERSE() {
        return (int)2048L;
    }
    public static int CRYPT_FORMAT_COMMA() {
        return (int)4096L;
    }
    public static int CRYPT_ENCODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG() {
        return (int)8L;
    }
    public static int CRYPT_ENCODE_ALLOC_FLAG() {
        return (int)32768L;
    }
    public static int CRYPT_SORTED_CTL_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG() {
        return (int)65536L;
    }
    public static int CRYPT_ENCODE_ENABLE_PUNYCODE_FLAG() {
        return (int)131072L;
    }
    public static int CRYPT_ENCODE_ENABLE_UTF8PERCENT_FLAG() {
        return (int)262144L;
    }
    public static int CRYPT_DECODE_NOCOPY_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_DECODE_TO_BE_SIGNED_FLAG() {
        return (int)2L;
    }
    public static int CRYPT_DECODE_SHARE_OID_STRING_FLAG() {
        return (int)4L;
    }
    public static int CRYPT_DECODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG() {
        return (int)8L;
    }
    public static int CRYPT_DECODE_ALLOC_FLAG() {
        return (int)32768L;
    }
    public static int CRYPT_DECODE_ENABLE_PUNYCODE_FLAG() {
        return (int)33554432L;
    }
    public static int CRYPT_DECODE_ENABLE_UTF8PERCENT_FLAG() {
        return (int)67108864L;
    }
    public static int CRYPT_ENCODE_DECODE_NONE() {
        return (int)0L;
    }
    public static int SITE_PIN_RULES_ALL_SUBDOMAINS_FLAG() {
        return (int)1L;
    }
    public static int CERT_ROOT_PROGRAM_FLAG_ORG() {
        return (int)128L;
    }
    public static int CERT_ROOT_PROGRAM_FLAG_LSC() {
        return (int)64L;
    }
    public static int CERT_ROOT_PROGRAM_FLAG_SUBJECT_LOGO() {
        return (int)32L;
    }
    public static int CERT_ROOT_PROGRAM_FLAG_OU() {
        return (int)16L;
    }
    public static int CERT_ROOT_PROGRAM_FLAG_ADDRESS() {
        return (int)8L;
    }
    public static int CERT_UNICODE_RDN_ERR_INDEX_MASK() {
        return (int)1023L;
    }
    public static int CERT_UNICODE_RDN_ERR_INDEX_SHIFT() {
        return (int)22L;
    }
    public static int CERT_UNICODE_ATTR_ERR_INDEX_MASK() {
        return (int)63L;
    }
    public static int CERT_UNICODE_ATTR_ERR_INDEX_SHIFT() {
        return (int)16L;
    }
    public static int CERT_UNICODE_VALUE_ERR_INDEX_MASK() {
        return (int)65535L;
    }
    public static int CERT_UNICODE_VALUE_ERR_INDEX_SHIFT() {
        return (int)0L;
    }
    public static int CERT_DIGITAL_SIGNATURE_KEY_USAGE() {
        return (int)128L;
    }
    public static int CERT_NON_REPUDIATION_KEY_USAGE() {
        return (int)64L;
    }
    public static int CERT_KEY_ENCIPHERMENT_KEY_USAGE() {
        return (int)32L;
    }
    public static int CERT_DATA_ENCIPHERMENT_KEY_USAGE() {
        return (int)16L;
    }
    public static int CERT_KEY_AGREEMENT_KEY_USAGE() {
        return (int)8L;
    }
    public static int CERT_KEY_CERT_SIGN_KEY_USAGE() {
        return (int)4L;
    }
    public static int CERT_OFFLINE_CRL_SIGN_KEY_USAGE() {
        return (int)2L;
    }
    public static int CERT_CRL_SIGN_KEY_USAGE() {
        return (int)2L;
    }
    public static int CERT_ENCIPHER_ONLY_KEY_USAGE() {
        return (int)1L;
    }
    public static int CERT_DECIPHER_ONLY_KEY_USAGE() {
        return (int)128L;
    }
    public static int CERT_ALT_NAME_OTHER_NAME() {
        return (int)1L;
    }
    public static int CERT_ALT_NAME_RFC822_NAME() {
        return (int)2L;
    }
    public static int CERT_ALT_NAME_DNS_NAME() {
        return (int)3L;
    }
    public static int CERT_ALT_NAME_X400_ADDRESS() {
        return (int)4L;
    }
    public static int CERT_ALT_NAME_DIRECTORY_NAME() {
        return (int)5L;
    }
    public static int CERT_ALT_NAME_EDI_PARTY_NAME() {
        return (int)6L;
    }
    public static int CERT_ALT_NAME_URL() {
        return (int)7L;
    }
    public static int CERT_ALT_NAME_IP_ADDRESS() {
        return (int)8L;
    }
    public static int CERT_ALT_NAME_REGISTERED_ID() {
        return (int)9L;
    }
    public static int CERT_ALT_NAME_ENTRY_ERR_INDEX_MASK() {
        return (int)255L;
    }
    public static int CERT_ALT_NAME_ENTRY_ERR_INDEX_SHIFT() {
        return (int)16L;
    }
    public static int CERT_ALT_NAME_VALUE_ERR_INDEX_MASK() {
        return (int)65535L;
    }
    public static int CERT_ALT_NAME_VALUE_ERR_INDEX_SHIFT() {
        return (int)0L;
    }
    public static int CERT_CA_SUBJECT_FLAG() {
        return (int)128L;
    }
    public static int CERT_END_ENTITY_SUBJECT_FLAG() {
        return (int)64L;
    }
    public static int CRL_REASON_UNSPECIFIED() {
        return (int)0L;
    }
    public static int CRL_REASON_KEY_COMPROMISE() {
        return (int)1L;
    }
    public static int CRL_REASON_CA_COMPROMISE() {
        return (int)2L;
    }
    public static int CRL_REASON_AFFILIATION_CHANGED() {
        return (int)3L;
    }
    public static int CRL_REASON_SUPERSEDED() {
        return (int)4L;
    }
    public static int CRL_REASON_CESSATION_OF_OPERATION() {
        return (int)5L;
    }
    public static int CRL_REASON_CERTIFICATE_HOLD() {
        return (int)6L;
    }
    public static int CRL_REASON_REMOVE_FROM_CRL() {
        return (int)8L;
    }
    public static int CRL_REASON_PRIVILEGE_WITHDRAWN() {
        return (int)9L;
    }
    public static int CRL_REASON_AA_COMPROMISE() {
        return (int)10L;
    }
    public static int CRL_DIST_POINT_NO_NAME() {
        return (int)0L;
    }
    public static int CRL_DIST_POINT_FULL_NAME() {
        return (int)1L;
    }
    public static int CRL_DIST_POINT_ISSUER_RDN_NAME() {
        return (int)2L;
    }
    public static int CRL_REASON_UNUSED_FLAG() {
        return (int)128L;
    }
    public static int CRL_REASON_KEY_COMPROMISE_FLAG() {
        return (int)64L;
    }
    public static int CRL_REASON_CA_COMPROMISE_FLAG() {
        return (int)32L;
    }
    public static int CRL_REASON_AFFILIATION_CHANGED_FLAG() {
        return (int)16L;
    }
    public static int CRL_REASON_SUPERSEDED_FLAG() {
        return (int)8L;
    }
    public static int CRL_REASON_CESSATION_OF_OPERATION_FLAG() {
        return (int)4L;
    }
    public static int CRL_REASON_CERTIFICATE_HOLD_FLAG() {
        return (int)2L;
    }
    public static int CRL_REASON_PRIVILEGE_WITHDRAWN_FLAG() {
        return (int)1L;
    }
    public static int CRL_REASON_AA_COMPROMISE_FLAG() {
        return (int)128L;
    }
    public static int CRL_DIST_POINT_ERR_INDEX_MASK() {
        return (int)127L;
    }
    public static int CRL_DIST_POINT_ERR_INDEX_SHIFT() {
        return (int)24L;
    }
    public static int CROSS_CERT_DIST_POINT_ERR_INDEX_MASK() {
        return (int)255L;
    }
    public static int CROSS_CERT_DIST_POINT_ERR_INDEX_SHIFT() {
        return (int)24L;
    }
    public static int SORTED_CTL_EXT_HASHED_SUBJECT_IDENTIFIER_FLAG() {
        return (int)1L;
    }
    public static int CERT_DSS_R_LEN() {
        return (int)20L;
    }
    public static int CERT_DSS_S_LEN() {
        return (int)20L;
    }
    public static int CRYPT_X942_COUNTER_BYTE_LENGTH() {
        return (int)4L;
    }
    public static int CRYPT_X942_KEY_LENGTH_BYTE_LENGTH() {
        return (int)4L;
    }
    public static int CRYPT_ECC_CMS_SHARED_INFO_SUPPPUBINFO_BYTE_LENGTH() {
        return (int)4L;
    }
    public static int CRYPT_RC2_40BIT_VERSION() {
        return (int)160L;
    }
    public static int CRYPT_RC2_56BIT_VERSION() {
        return (int)52L;
    }
    public static int CRYPT_RC2_64BIT_VERSION() {
        return (int)120L;
    }
    public static int CRYPT_RC2_128BIT_VERSION() {
        return (int)58L;
    }
    public static int PKCS_RSA_SSA_PSS_TRAILER_FIELD_BC() {
        return (int)1L;
    }
    public static int NETSCAPE_SSL_CLIENT_AUTH_CERT_TYPE() {
        return (int)128L;
    }
    public static int NETSCAPE_SSL_SERVER_AUTH_CERT_TYPE() {
        return (int)64L;
    }
    public static int NETSCAPE_SMIME_CERT_TYPE() {
        return (int)32L;
    }
    public static int NETSCAPE_SIGN_CERT_TYPE() {
        return (int)16L;
    }
    public static int NETSCAPE_SSL_CA_CERT_TYPE() {
        return (int)4L;
    }
    public static int NETSCAPE_SMIME_CA_CERT_TYPE() {
        return (int)2L;
    }
    public static int NETSCAPE_SIGN_CA_CERT_TYPE() {
        return (int)1L;
    }
    public static int CMC_TAGGED_CERT_REQUEST_CHOICE() {
        return (int)1L;
    }
    public static int CMC_OTHER_INFO_NO_CHOICE() {
        return (int)0L;
    }
    public static int CMC_OTHER_INFO_FAIL_CHOICE() {
        return (int)1L;
    }
    public static int CMC_OTHER_INFO_PEND_CHOICE() {
        return (int)2L;
    }
    public static int CMC_STATUS_SUCCESS() {
        return (int)0L;
    }
    public static int CMC_STATUS_FAILED() {
        return (int)2L;
    }
    public static int CMC_STATUS_PENDING() {
        return (int)3L;
    }
    public static int CMC_STATUS_NO_SUPPORT() {
        return (int)4L;
    }
    public static int CMC_STATUS_CONFIRM_REQUIRED() {
        return (int)5L;
    }
    public static int CMC_FAIL_BAD_ALG() {
        return (int)0L;
    }
    public static int CMC_FAIL_BAD_MESSAGE_CHECK() {
        return (int)1L;
    }
    public static int CMC_FAIL_BAD_REQUEST() {
        return (int)2L;
    }
    public static int CMC_FAIL_BAD_TIME() {
        return (int)3L;
    }
    public static int CMC_FAIL_BAD_CERT_ID() {
        return (int)4L;
    }
    public static int CMC_FAIL_UNSUPORTED_EXT() {
        return (int)5L;
    }
    public static int CMC_FAIL_MUST_ARCHIVE_KEYS() {
        return (int)6L;
    }
    public static int CMC_FAIL_BAD_IDENTITY() {
        return (int)7L;
    }
    public static int CMC_FAIL_POP_REQUIRED() {
        return (int)8L;
    }
    public static int CMC_FAIL_POP_FAILED() {
        return (int)9L;
    }
    public static int CMC_FAIL_NO_KEY_REUSE() {
        return (int)10L;
    }
    public static int CMC_FAIL_INTERNAL_CA_ERROR() {
        return (int)11L;
    }
    public static int CMC_FAIL_TRY_LATER() {
        return (int)12L;
    }
    public static int CERT_LOGOTYPE_GRAY_SCALE_IMAGE_INFO_CHOICE() {
        return (int)1L;
    }
    public static int CERT_LOGOTYPE_COLOR_IMAGE_INFO_CHOICE() {
        return (int)2L;
    }
    public static int CERT_LOGOTYPE_NO_IMAGE_RESOLUTION_CHOICE() {
        return (int)0L;
    }
    public static int CERT_LOGOTYPE_BITS_IMAGE_RESOLUTION_CHOICE() {
        return (int)1L;
    }
    public static int CERT_LOGOTYPE_TABLE_SIZE_IMAGE_RESOLUTION_CHOICE() {
        return (int)2L;
    }
    public static int CERT_LOGOTYPE_DIRECT_INFO_CHOICE() {
        return (int)1L;
    }
    public static int CERT_LOGOTYPE_INDIRECT_INFO_CHOICE() {
        return (int)2L;
    }
    public static int CERT_BIOMETRIC_PREDEFINED_DATA_CHOICE() {
        return (int)1L;
    }
    public static int CERT_BIOMETRIC_OID_DATA_CHOICE() {
        return (int)2L;
    }
    public static int CERT_BIOMETRIC_PICTURE_TYPE() {
        return (int)0L;
    }
    public static int CERT_BIOMETRIC_SIGNATURE_TYPE() {
        return (int)1L;
    }
    public static int OCSP_REQUEST_V1() {
        return (int)0L;
    }
    public static int OCSP_SUCCESSFUL_RESPONSE() {
        return (int)0L;
    }
    public static int OCSP_MALFORMED_REQUEST_RESPONSE() {
        return (int)1L;
    }
    public static int OCSP_INTERNAL_ERROR_RESPONSE() {
        return (int)2L;
    }
    public static int OCSP_TRY_LATER_RESPONSE() {
        return (int)3L;
    }
    public static int OCSP_SIG_REQUIRED_RESPONSE() {
        return (int)5L;
    }
    public static int OCSP_UNAUTHORIZED_RESPONSE() {
        return (int)6L;
    }
    public static int OCSP_BASIC_GOOD_CERT_STATUS() {
        return (int)0L;
    }
    public static int OCSP_BASIC_REVOKED_CERT_STATUS() {
        return (int)1L;
    }
    public static int OCSP_BASIC_UNKNOWN_CERT_STATUS() {
        return (int)2L;
    }
    public static int OCSP_BASIC_RESPONSE_V1() {
        return (int)0L;
    }
    public static int OCSP_BASIC_BY_NAME_RESPONDER_ID() {
        return (int)1L;
    }
    public static int OCSP_BASIC_BY_KEY_RESPONDER_ID() {
        return (int)2L;
    }
    public static int CRYPT_INSTALL_OID_FUNC_BEFORE_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_GET_INSTALLED_OID_FUNC_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_REGISTER_FIRST_INDEX() {
        return (int)0L;
    }
    public static int CRYPT_HASH_ALG_OID_GROUP_ID() {
        return (int)1L;
    }
    public static int CRYPT_ENCRYPT_ALG_OID_GROUP_ID() {
        return (int)2L;
    }
    public static int CRYPT_PUBKEY_ALG_OID_GROUP_ID() {
        return (int)3L;
    }
    public static int CRYPT_SIGN_ALG_OID_GROUP_ID() {
        return (int)4L;
    }
    public static int CRYPT_RDN_ATTR_OID_GROUP_ID() {
        return (int)5L;
    }
    public static int CRYPT_EXT_OR_ATTR_OID_GROUP_ID() {
        return (int)6L;
    }
    public static int CRYPT_ENHKEY_USAGE_OID_GROUP_ID() {
        return (int)7L;
    }
    public static int CRYPT_POLICY_OID_GROUP_ID() {
        return (int)8L;
    }
    public static int CRYPT_TEMPLATE_OID_GROUP_ID() {
        return (int)9L;
    }
    public static int CRYPT_KDF_OID_GROUP_ID() {
        return (int)10L;
    }
    public static int CRYPT_LAST_OID_GROUP_ID() {
        return (int)10L;
    }
    public static int CRYPT_OID_INHIBIT_SIGNATURE_FORMAT_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_OID_USE_PUBKEY_PARA_FOR_PKCS7_FLAG() {
        return (int)2L;
    }
    public static int CRYPT_OID_NO_NULL_ALGORITHM_PARA_FLAG() {
        return (int)4L;
    }
    public static int CRYPT_OID_PUBKEY_ENCRYPT_ONLY_FLAG() {
        return (int)1073741824L;
    }
    public static int CRYPT_OID_USE_CURVE_NAME_FOR_ENCODE_FLAG() {
        return (int)536870912L;
    }
    public static int CRYPT_OID_USE_CURVE_PARAMETERS_FOR_ENCODE_FLAG() {
        return (int)268435456L;
    }
    public static int CRYPT_OID_INFO_OID_KEY() {
        return (int)1L;
    }
    public static int CRYPT_OID_INFO_NAME_KEY() {
        return (int)2L;
    }
    public static int CRYPT_OID_INFO_ALGID_KEY() {
        return (int)3L;
    }
    public static int CRYPT_OID_INFO_SIGN_KEY() {
        return (int)4L;
    }
    public static int CRYPT_OID_INFO_CNG_ALGID_KEY() {
        return (int)5L;
    }
    public static int CRYPT_OID_INFO_CNG_SIGN_KEY() {
        return (int)6L;
    }
    public static int CRYPT_OID_INFO_PUBKEY_ENCRYPT_KEY_FLAG() {
        return (int)1073741824L;
    }
    public static int CRYPT_OID_INFO_OID_GROUP_BIT_LEN_MASK() {
        return (int)268369920L;
    }
    public static int CRYPT_OID_INFO_OID_GROUP_BIT_LEN_SHIFT() {
        return (int)16L;
    }
    public static int CRYPT_INSTALL_OID_INFO_BEFORE_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_LOCALIZED_NAME_ENCODING_TYPE() {
        return (int)0L;
    }
    public static int CERT_STRONG_SIGN_SERIALIZED_INFO_CHOICE() {
        return (int)1L;
    }
    public static int CERT_STRONG_SIGN_OID_INFO_CHOICE() {
        return (int)2L;
    }
    public static int CERT_STRONG_SIGN_ENABLE_CRL_CHECK() {
        return (int)1L;
    }
    public static int CERT_STRONG_SIGN_ENABLE_OCSP_CHECK() {
        return (int)2L;
    }
    public static int CMSG_DATA() {
        return (int)1L;
    }
}



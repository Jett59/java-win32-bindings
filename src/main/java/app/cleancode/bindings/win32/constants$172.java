// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$172 {

    static final FunctionDescriptor OpenPrivateNamespaceW$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle OpenPrivateNamespaceW$MH = RuntimeHelper.downcallHandle(
        "OpenPrivateNamespaceW",
        constants$172.OpenPrivateNamespaceW$FUNC
    );
    static final FunctionDescriptor ClosePrivateNamespace$FUNC = FunctionDescriptor.of(Constants$root.C_CHAR$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle ClosePrivateNamespace$MH = RuntimeHelper.downcallHandle(
        "ClosePrivateNamespace",
        constants$172.ClosePrivateNamespace$FUNC
    );
    static final FunctionDescriptor CreateBoundaryDescriptorW$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle CreateBoundaryDescriptorW$MH = RuntimeHelper.downcallHandle(
        "CreateBoundaryDescriptorW",
        constants$172.CreateBoundaryDescriptorW$FUNC
    );
    static final FunctionDescriptor AddSIDToBoundaryDescriptor$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle AddSIDToBoundaryDescriptor$MH = RuntimeHelper.downcallHandle(
        "AddSIDToBoundaryDescriptor",
        constants$172.AddSIDToBoundaryDescriptor$FUNC
    );
    static final FunctionDescriptor DeleteBoundaryDescriptor$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle DeleteBoundaryDescriptor$MH = RuntimeHelper.downcallHandle(
        "DeleteBoundaryDescriptor",
        constants$172.DeleteBoundaryDescriptor$FUNC
    );
    static final FunctionDescriptor GetNumaHighestNodeNumber$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetNumaHighestNodeNumber$MH = RuntimeHelper.downcallHandle(
        "GetNumaHighestNodeNumber",
        constants$172.GetNumaHighestNodeNumber$FUNC
    );
}



// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$339 {

    static final FunctionDescriptor BlockInput$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle BlockInput$MH = RuntimeHelper.downcallHandle(
        "BlockInput",
        constants$339.BlockInput$FUNC
    );
    static final FunctionDescriptor SetProcessDPIAware$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle SetProcessDPIAware$MH = RuntimeHelper.downcallHandle(
        "SetProcessDPIAware",
        constants$339.SetProcessDPIAware$FUNC
    );
    static final FunctionDescriptor IsProcessDPIAware$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle IsProcessDPIAware$MH = RuntimeHelper.downcallHandle(
        "IsProcessDPIAware",
        constants$339.IsProcessDPIAware$FUNC
    );
    static final FunctionDescriptor SetThreadDpiAwarenessContext$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SetThreadDpiAwarenessContext$MH = RuntimeHelper.downcallHandle(
        "SetThreadDpiAwarenessContext",
        constants$339.SetThreadDpiAwarenessContext$FUNC
    );
    static final FunctionDescriptor GetThreadDpiAwarenessContext$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle GetThreadDpiAwarenessContext$MH = RuntimeHelper.downcallHandle(
        "GetThreadDpiAwarenessContext",
        constants$339.GetThreadDpiAwarenessContext$FUNC
    );
    static final FunctionDescriptor GetWindowDpiAwarenessContext$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetWindowDpiAwarenessContext$MH = RuntimeHelper.downcallHandle(
        "GetWindowDpiAwarenessContext",
        constants$339.GetWindowDpiAwarenessContext$FUNC
    );
}



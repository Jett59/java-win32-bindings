// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$140 {

    static final FunctionDescriptor MapUserPhysicalPages$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle MapUserPhysicalPages$MH = RuntimeHelper.downcallHandle(
        "MapUserPhysicalPages",
        constants$140.MapUserPhysicalPages$FUNC
    );
    static final FunctionDescriptor AllocateUserPhysicalPagesNuma$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle AllocateUserPhysicalPagesNuma$MH = RuntimeHelper.downcallHandle(
        "AllocateUserPhysicalPagesNuma",
        constants$140.AllocateUserPhysicalPagesNuma$FUNC
    );
    static final FunctionDescriptor VirtualAllocExNuma$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle VirtualAllocExNuma$MH = RuntimeHelper.downcallHandle(
        "VirtualAllocExNuma",
        constants$140.VirtualAllocExNuma$FUNC
    );
    static final FunctionDescriptor GetMemoryErrorHandlingCapabilities$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetMemoryErrorHandlingCapabilities$MH = RuntimeHelper.downcallHandle(
        "GetMemoryErrorHandlingCapabilities",
        constants$140.GetMemoryErrorHandlingCapabilities$FUNC
    );
    static final FunctionDescriptor BAD_MEMORY_CALLBACK_ROUTINE$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle BAD_MEMORY_CALLBACK_ROUTINE$MH = RuntimeHelper.downcallHandle(
        constants$140.BAD_MEMORY_CALLBACK_ROUTINE$FUNC
    );
}



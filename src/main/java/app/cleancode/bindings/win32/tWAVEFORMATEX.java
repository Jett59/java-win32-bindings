// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class tWAVEFORMATEX {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_SHORT$LAYOUT.withName("wFormatTag"),
        Constants$root.C_SHORT$LAYOUT.withName("nChannels"),
        Constants$root.C_LONG$LAYOUT.withName("nSamplesPerSec"),
        Constants$root.C_LONG$LAYOUT.withName("nAvgBytesPerSec"),
        Constants$root.C_SHORT$LAYOUT.withName("nBlockAlign"),
        Constants$root.C_SHORT$LAYOUT.withName("wBitsPerSample"),
        Constants$root.C_SHORT$LAYOUT.withName("cbSize")
    ).withName("tWAVEFORMATEX");
    public static MemoryLayout $LAYOUT() {
        return tWAVEFORMATEX.$struct$LAYOUT;
    }
    static final VarHandle wFormatTag$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("wFormatTag"));
    public static VarHandle wFormatTag$VH() {
        return tWAVEFORMATEX.wFormatTag$VH;
    }
    public static short wFormatTag$get(MemorySegment seg) {
        return (short)tWAVEFORMATEX.wFormatTag$VH.get(seg);
    }
    public static void wFormatTag$set( MemorySegment seg, short x) {
        tWAVEFORMATEX.wFormatTag$VH.set(seg, x);
    }
    public static short wFormatTag$get(MemorySegment seg, long index) {
        return (short)tWAVEFORMATEX.wFormatTag$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void wFormatTag$set(MemorySegment seg, long index, short x) {
        tWAVEFORMATEX.wFormatTag$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle nChannels$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("nChannels"));
    public static VarHandle nChannels$VH() {
        return tWAVEFORMATEX.nChannels$VH;
    }
    public static short nChannels$get(MemorySegment seg) {
        return (short)tWAVEFORMATEX.nChannels$VH.get(seg);
    }
    public static void nChannels$set( MemorySegment seg, short x) {
        tWAVEFORMATEX.nChannels$VH.set(seg, x);
    }
    public static short nChannels$get(MemorySegment seg, long index) {
        return (short)tWAVEFORMATEX.nChannels$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void nChannels$set(MemorySegment seg, long index, short x) {
        tWAVEFORMATEX.nChannels$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle nSamplesPerSec$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("nSamplesPerSec"));
    public static VarHandle nSamplesPerSec$VH() {
        return tWAVEFORMATEX.nSamplesPerSec$VH;
    }
    public static int nSamplesPerSec$get(MemorySegment seg) {
        return (int)tWAVEFORMATEX.nSamplesPerSec$VH.get(seg);
    }
    public static void nSamplesPerSec$set( MemorySegment seg, int x) {
        tWAVEFORMATEX.nSamplesPerSec$VH.set(seg, x);
    }
    public static int nSamplesPerSec$get(MemorySegment seg, long index) {
        return (int)tWAVEFORMATEX.nSamplesPerSec$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void nSamplesPerSec$set(MemorySegment seg, long index, int x) {
        tWAVEFORMATEX.nSamplesPerSec$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle nAvgBytesPerSec$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("nAvgBytesPerSec"));
    public static VarHandle nAvgBytesPerSec$VH() {
        return tWAVEFORMATEX.nAvgBytesPerSec$VH;
    }
    public static int nAvgBytesPerSec$get(MemorySegment seg) {
        return (int)tWAVEFORMATEX.nAvgBytesPerSec$VH.get(seg);
    }
    public static void nAvgBytesPerSec$set( MemorySegment seg, int x) {
        tWAVEFORMATEX.nAvgBytesPerSec$VH.set(seg, x);
    }
    public static int nAvgBytesPerSec$get(MemorySegment seg, long index) {
        return (int)tWAVEFORMATEX.nAvgBytesPerSec$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void nAvgBytesPerSec$set(MemorySegment seg, long index, int x) {
        tWAVEFORMATEX.nAvgBytesPerSec$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle nBlockAlign$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("nBlockAlign"));
    public static VarHandle nBlockAlign$VH() {
        return tWAVEFORMATEX.nBlockAlign$VH;
    }
    public static short nBlockAlign$get(MemorySegment seg) {
        return (short)tWAVEFORMATEX.nBlockAlign$VH.get(seg);
    }
    public static void nBlockAlign$set( MemorySegment seg, short x) {
        tWAVEFORMATEX.nBlockAlign$VH.set(seg, x);
    }
    public static short nBlockAlign$get(MemorySegment seg, long index) {
        return (short)tWAVEFORMATEX.nBlockAlign$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void nBlockAlign$set(MemorySegment seg, long index, short x) {
        tWAVEFORMATEX.nBlockAlign$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle wBitsPerSample$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("wBitsPerSample"));
    public static VarHandle wBitsPerSample$VH() {
        return tWAVEFORMATEX.wBitsPerSample$VH;
    }
    public static short wBitsPerSample$get(MemorySegment seg) {
        return (short)tWAVEFORMATEX.wBitsPerSample$VH.get(seg);
    }
    public static void wBitsPerSample$set( MemorySegment seg, short x) {
        tWAVEFORMATEX.wBitsPerSample$VH.set(seg, x);
    }
    public static short wBitsPerSample$get(MemorySegment seg, long index) {
        return (short)tWAVEFORMATEX.wBitsPerSample$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void wBitsPerSample$set(MemorySegment seg, long index, short x) {
        tWAVEFORMATEX.wBitsPerSample$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cbSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbSize"));
    public static VarHandle cbSize$VH() {
        return tWAVEFORMATEX.cbSize$VH;
    }
    public static short cbSize$get(MemorySegment seg) {
        return (short)tWAVEFORMATEX.cbSize$VH.get(seg);
    }
    public static void cbSize$set( MemorySegment seg, short x) {
        tWAVEFORMATEX.cbSize$VH.set(seg, x);
    }
    public static short cbSize$get(MemorySegment seg, long index) {
        return (short)tWAVEFORMATEX.cbSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, short x) {
        tWAVEFORMATEX.cbSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}



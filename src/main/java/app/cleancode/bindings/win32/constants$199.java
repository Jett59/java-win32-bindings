// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$199 {

    static final FunctionDescriptor lstrcmpiA$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle lstrcmpiA$MH = RuntimeHelper.downcallHandle(
        "lstrcmpiA",
        constants$199.lstrcmpiA$FUNC
    );
    static final FunctionDescriptor lstrcmpiW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle lstrcmpiW$MH = RuntimeHelper.downcallHandle(
        "lstrcmpiW",
        constants$199.lstrcmpiW$FUNC
    );
    static final FunctionDescriptor lstrcpynA$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle lstrcpynA$MH = RuntimeHelper.downcallHandle(
        "lstrcpynA",
        constants$199.lstrcpynA$FUNC
    );
    static final FunctionDescriptor lstrcpynW$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle lstrcpynW$MH = RuntimeHelper.downcallHandle(
        "lstrcpynW",
        constants$199.lstrcpynW$FUNC
    );
    static final FunctionDescriptor lstrcpyA$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle lstrcpyA$MH = RuntimeHelper.downcallHandle(
        "lstrcpyA",
        constants$199.lstrcpyA$FUNC
    );
    static final FunctionDescriptor lstrcpyW$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle lstrcpyW$MH = RuntimeHelper.downcallHandle(
        "lstrcpyW",
        constants$199.lstrcpyW$FUNC
    );
}



// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$60 {

    static final FunctionDescriptor RtlOsDeploymentState$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle RtlOsDeploymentState$MH = RuntimeHelper.downcallHandle(
        "RtlOsDeploymentState",
        constants$60.RtlOsDeploymentState$FUNC
    );
    static final FunctionDescriptor RtlGetNonVolatileToken$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RtlGetNonVolatileToken$MH = RuntimeHelper.downcallHandle(
        "RtlGetNonVolatileToken",
        constants$60.RtlGetNonVolatileToken$FUNC
    );
    static final FunctionDescriptor RtlFreeNonVolatileToken$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RtlFreeNonVolatileToken$MH = RuntimeHelper.downcallHandle(
        "RtlFreeNonVolatileToken",
        constants$60.RtlFreeNonVolatileToken$FUNC
    );
    static final FunctionDescriptor RtlFlushNonVolatileMemory$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle RtlFlushNonVolatileMemory$MH = RuntimeHelper.downcallHandle(
        "RtlFlushNonVolatileMemory",
        constants$60.RtlFlushNonVolatileMemory$FUNC
    );
    static final FunctionDescriptor RtlDrainNonVolatileFlush$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RtlDrainNonVolatileFlush$MH = RuntimeHelper.downcallHandle(
        "RtlDrainNonVolatileFlush",
        constants$60.RtlDrainNonVolatileFlush$FUNC
    );
    static final FunctionDescriptor RtlWriteNonVolatileMemory$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle RtlWriteNonVolatileMemory$MH = RuntimeHelper.downcallHandle(
        "RtlWriteNonVolatileMemory",
        constants$60.RtlWriteNonVolatileMemory$FUNC
    );
}



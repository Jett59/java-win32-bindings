// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class WINDOWS_27 extends WINDOWS_26 {

    public static int FSCTL_MOVE_FILE() {
        return (int)589940L;
    }
    public static int FSCTL_IS_VOLUME_DIRTY() {
        return (int)589944L;
    }
    public static int FSCTL_ALLOW_EXTENDED_DASD_IO() {
        return (int)589955L;
    }
    public static int FSCTL_FIND_FILES_BY_SID() {
        return (int)589967L;
    }
    public static int FSCTL_SET_OBJECT_ID() {
        return (int)589976L;
    }
    public static int FSCTL_GET_OBJECT_ID() {
        return (int)589980L;
    }
    public static int FSCTL_DELETE_OBJECT_ID() {
        return (int)589984L;
    }
    public static int FSCTL_SET_REPARSE_POINT() {
        return (int)589988L;
    }
    public static int FSCTL_GET_REPARSE_POINT() {
        return (int)589992L;
    }
    public static int FSCTL_DELETE_REPARSE_POINT() {
        return (int)589996L;
    }
    public static int FSCTL_ENUM_USN_DATA() {
        return (int)590003L;
    }
    public static int FSCTL_SECURITY_ID_CHECK() {
        return (int)606391L;
    }
    public static int FSCTL_READ_USN_JOURNAL() {
        return (int)590011L;
    }
    public static int FSCTL_SET_OBJECT_ID_EXTENDED() {
        return (int)590012L;
    }
    public static int FSCTL_CREATE_OR_GET_OBJECT_ID() {
        return (int)590016L;
    }
    public static int FSCTL_SET_SPARSE() {
        return (int)590020L;
    }
    public static int FSCTL_SET_ZERO_DATA() {
        return (int)622792L;
    }
    public static int FSCTL_QUERY_ALLOCATED_RANGES() {
        return (int)606415L;
    }
    public static int FSCTL_ENABLE_UPGRADE() {
        return (int)622800L;
    }
    public static int FSCTL_SET_ENCRYPTION() {
        return (int)590039L;
    }
    public static int FSCTL_ENCRYPTION_FSCTL_IO() {
        return (int)590043L;
    }
    public static int FSCTL_WRITE_RAW_ENCRYPTED() {
        return (int)590047L;
    }
    public static int FSCTL_READ_RAW_ENCRYPTED() {
        return (int)590051L;
    }
    public static int FSCTL_CREATE_USN_JOURNAL() {
        return (int)590055L;
    }
    public static int FSCTL_READ_FILE_USN_DATA() {
        return (int)590059L;
    }
    public static int FSCTL_WRITE_USN_CLOSE_RECORD() {
        return (int)590063L;
    }
    public static int FSCTL_EXTEND_VOLUME() {
        return (int)590064L;
    }
    public static int FSCTL_QUERY_USN_JOURNAL() {
        return (int)590068L;
    }
    public static int FSCTL_DELETE_USN_JOURNAL() {
        return (int)590072L;
    }
    public static int FSCTL_MARK_HANDLE() {
        return (int)590076L;
    }
    public static int FSCTL_SIS_COPYFILE() {
        return (int)590080L;
    }
    public static int FSCTL_SIS_LINK_FILES() {
        return (int)639236L;
    }
    public static int FSCTL_RECALL_FILE() {
        return (int)590103L;
    }
    public static int FSCTL_READ_FROM_PLEX() {
        return (int)606494L;
    }
    public static int FSCTL_FILE_PREFETCH() {
        return (int)590112L;
    }
    public static int FSCTL_MAKE_MEDIA_COMPATIBLE() {
        return (int)622896L;
    }
    public static int FSCTL_SET_DEFECT_MANAGEMENT() {
        return (int)622900L;
    }
    public static int FSCTL_QUERY_SPARING_INFO() {
        return (int)590136L;
    }
    public static int FSCTL_QUERY_ON_DISK_VOLUME_INFO() {
        return (int)590140L;
    }
    public static int FSCTL_SET_VOLUME_COMPRESSION_STATE() {
        return (int)590144L;
    }
    public static int FSCTL_TXFS_MODIFY_RM() {
        return (int)622916L;
    }
    public static int FSCTL_TXFS_QUERY_RM_INFORMATION() {
        return (int)606536L;
    }
    public static int FSCTL_TXFS_ROLLFORWARD_REDO() {
        return (int)622928L;
    }
    public static int FSCTL_TXFS_ROLLFORWARD_UNDO() {
        return (int)622932L;
    }
    public static int FSCTL_TXFS_START_RM() {
        return (int)622936L;
    }
    public static int FSCTL_TXFS_SHUTDOWN_RM() {
        return (int)622940L;
    }
    public static int FSCTL_TXFS_READ_BACKUP_INFORMATION() {
        return (int)606560L;
    }
    public static int FSCTL_TXFS_WRITE_BACKUP_INFORMATION() {
        return (int)622948L;
    }
    public static int FSCTL_TXFS_CREATE_SECONDARY_RM() {
        return (int)622952L;
    }
    public static int FSCTL_TXFS_GET_METADATA_INFO() {
        return (int)606572L;
    }
    public static int FSCTL_TXFS_GET_TRANSACTED_VERSION() {
        return (int)606576L;
    }
    public static int FSCTL_TXFS_SAVEPOINT_INFORMATION() {
        return (int)622968L;
    }
    public static int FSCTL_TXFS_CREATE_MINIVERSION() {
        return (int)622972L;
    }
    public static int FSCTL_TXFS_TRANSACTION_ACTIVE() {
        return (int)606604L;
    }
    public static int FSCTL_SET_ZERO_ON_DEALLOCATION() {
        return (int)590228L;
    }
    public static int FSCTL_SET_REPAIR() {
        return (int)590232L;
    }
    public static int FSCTL_GET_REPAIR() {
        return (int)590236L;
    }
    public static int FSCTL_WAIT_FOR_REPAIR() {
        return (int)590240L;
    }
    public static int FSCTL_INITIATE_REPAIR() {
        return (int)590248L;
    }
    public static int FSCTL_CSC_INTERNAL() {
        return (int)590255L;
    }
    public static int FSCTL_SHRINK_VOLUME() {
        return (int)590256L;
    }
    public static int FSCTL_SET_SHORT_NAME_BEHAVIOR() {
        return (int)590260L;
    }
    public static int FSCTL_DFSR_SET_GHOST_HANDLE_STATE() {
        return (int)590264L;
    }
    public static int FSCTL_TXFS_LIST_TRANSACTION_LOCKED_FILES() {
        return (int)606688L;
    }
    public static int FSCTL_TXFS_LIST_TRANSACTIONS() {
        return (int)606692L;
    }
    public static int FSCTL_QUERY_PAGEFILE_ENCRYPTION() {
        return (int)590312L;
    }
    public static int FSCTL_RESET_VOLUME_ALLOCATION_HINTS() {
        return (int)590316L;
    }
    public static int FSCTL_QUERY_DEPENDENT_VOLUME() {
        return (int)590320L;
    }
    public static int FSCTL_SD_GLOBAL_CHANGE() {
        return (int)590324L;
    }
    public static int FSCTL_TXFS_READ_BACKUP_INFORMATION2() {
        return (int)590328L;
    }
    public static int FSCTL_LOOKUP_STREAM_FROM_CLUSTER() {
        return (int)590332L;
    }
    public static int FSCTL_TXFS_WRITE_BACKUP_INFORMATION2() {
        return (int)590336L;
    }
    public static int FSCTL_FILE_TYPE_NOTIFICATION() {
        return (int)590340L;
    }
    public static int FSCTL_FILE_LEVEL_TRIM() {
        return (int)623112L;
    }
    public static int FSCTL_GET_BOOT_AREA_INFO() {
        return (int)590384L;
    }
    public static int FSCTL_GET_RETRIEVAL_POINTER_BASE() {
        return (int)590388L;
    }
    public static int FSCTL_SET_PERSISTENT_VOLUME_STATE() {
        return (int)590392L;
    }
    public static int FSCTL_QUERY_PERSISTENT_VOLUME_STATE() {
        return (int)590396L;
    }
    public static int FSCTL_REQUEST_OPLOCK() {
        return (int)590400L;
    }
    public static int FSCTL_CSV_TUNNEL_REQUEST() {
        return (int)590404L;
    }
    public static int FSCTL_IS_CSV_FILE() {
        return (int)590408L;
    }
    public static int FSCTL_QUERY_FILE_SYSTEM_RECOGNITION() {
        return (int)590412L;
    }
    public static int FSCTL_CSV_GET_VOLUME_PATH_NAME() {
        return (int)590416L;
    }
    public static int FSCTL_CSV_GET_VOLUME_NAME_FOR_VOLUME_MOUNT_POINT() {
        return (int)590420L;
    }
    public static int FSCTL_CSV_GET_VOLUME_PATH_NAMES_FOR_VOLUME_NAME() {
        return (int)590424L;
    }
    public static int FSCTL_IS_FILE_ON_CSV_VOLUME() {
        return (int)590428L;
    }
    public static int FSCTL_CORRUPTION_HANDLING() {
        return (int)590432L;
    }
    public static int FSCTL_OFFLOAD_READ() {
        return (int)606820L;
    }
    public static int FSCTL_OFFLOAD_WRITE() {
        return (int)623208L;
    }
    public static int FSCTL_CSV_INTERNAL() {
        return (int)590444L;
    }
    public static int FSCTL_SET_PURGE_FAILURE_MODE() {
        return (int)590448L;
    }
    public static int FSCTL_QUERY_FILE_LAYOUT() {
        return (int)590455L;
    }
    public static int FSCTL_IS_VOLUME_OWNED_BYCSVFS() {
        return (int)590456L;
    }
    public static int FSCTL_GET_INTEGRITY_INFORMATION() {
        return (int)590460L;
    }
    public static int FSCTL_SET_INTEGRITY_INFORMATION() {
        return (int)639616L;
    }
    public static int FSCTL_QUERY_FILE_REGIONS() {
        return (int)590468L;
    }
    public static int FSCTL_RKF_INTERNAL() {
        return (int)590511L;
    }
    public static int FSCTL_SCRUB_DATA() {
        return (int)590512L;
    }
    public static int FSCTL_REPAIR_COPIES() {
        return (int)639668L;
    }
    public static int FSCTL_DISABLE_LOCAL_BUFFERING() {
        return (int)590520L;
    }
    public static int FSCTL_CSV_MGMT_LOCK() {
        return (int)590524L;
    }
    public static int FSCTL_CSV_QUERY_DOWN_LEVEL_FILE_SYSTEM_CHARACTERISTICS() {
        return (int)590528L;
    }
    public static int FSCTL_ADVANCE_FILE_ID() {
        return (int)590532L;
    }
    public static int FSCTL_CSV_SYNC_TUNNEL_REQUEST() {
        return (int)590536L;
    }
    public static int FSCTL_CSV_QUERY_VETO_FILE_DIRECT_IO() {
        return (int)590540L;
    }
    public static int FSCTL_WRITE_USN_REASON() {
        return (int)590544L;
    }
    public static int FSCTL_CSV_CONTROL() {
        return (int)590548L;
    }
    public static int FSCTL_GET_REFS_VOLUME_DATA() {
        return (int)590552L;
    }
    public static int FSCTL_CSV_H_BREAKING_SYNC_TUNNEL_REQUEST() {
        return (int)590564L;
    }
    public static int FSCTL_QUERY_STORAGE_CLASSES() {
        return (int)590572L;
    }
    public static int FSCTL_QUERY_REGION_INFO() {
        return (int)590576L;
    }
    public static int FSCTL_USN_TRACK_MODIFIED_RANGES() {
        return (int)590580L;
    }
    public static int FSCTL_QUERY_SHARED_VIRTUAL_DISK_SUPPORT() {
        return (int)590592L;
    }
    public static int FSCTL_SVHDX_SYNC_TUNNEL_REQUEST() {
        return (int)590596L;
    }
    public static int FSCTL_SVHDX_SET_INITIATOR_INFORMATION() {
        return (int)590600L;
    }
    public static int FSCTL_SET_EXTERNAL_BACKING() {
        return (int)590604L;
    }
    public static int FSCTL_GET_EXTERNAL_BACKING() {
        return (int)590608L;
    }
    public static int FSCTL_DELETE_EXTERNAL_BACKING() {
        return (int)590612L;
    }
    public static int FSCTL_ENUM_EXTERNAL_BACKING() {
        return (int)590616L;
    }
    public static int FSCTL_ENUM_OVERLAY() {
        return (int)590623L;
    }
    public static int FSCTL_ADD_OVERLAY() {
        return (int)623408L;
    }
    public static int FSCTL_REMOVE_OVERLAY() {
        return (int)623412L;
    }
    public static int FSCTL_UPDATE_OVERLAY() {
        return (int)623416L;
    }
    public static int FSCTL_SHUFFLE_FILE() {
        return (int)639808L;
    }
    public static int FSCTL_DUPLICATE_EXTENTS_TO_FILE() {
        return (int)623428L;
    }
    public static int FSCTL_SPARSE_OVERALLOCATE() {
        return (int)590668L;
    }
    public static int FSCTL_STORAGE_QOS_CONTROL() {
        return (int)590672L;
    }
    public static int FSCTL_INITIATE_FILE_METADATA_OPTIMIZATION() {
        return (int)590684L;
    }
    public static int FSCTL_QUERY_FILE_METADATA_OPTIMIZATION() {
        return (int)590688L;
    }
    public static int FSCTL_SVHDX_ASYNC_TUNNEL_REQUEST() {
        return (int)590692L;
    }
    public static int FSCTL_GET_WOF_VERSION() {
        return (int)590696L;
    }
    public static int FSCTL_HCS_SYNC_TUNNEL_REQUEST() {
        return (int)590700L;
    }
    public static int FSCTL_HCS_ASYNC_TUNNEL_REQUEST() {
        return (int)590704L;
    }
    public static int FSCTL_QUERY_EXTENT_READ_CACHE_INFO() {
        return (int)590711L;
    }
    public static int FSCTL_QUERY_REFS_VOLUME_COUNTER_INFO() {
        return (int)590715L;
    }
    public static int FSCTL_CLEAN_VOLUME_METADATA() {
        return (int)590716L;
    }
    public static int FSCTL_SET_INTEGRITY_INFORMATION_EX() {
        return (int)590720L;
    }
    public static int FSCTL_SUSPEND_OVERLAY() {
        return (int)590724L;
    }
    public static int FSCTL_VIRTUAL_STORAGE_QUERY_PROPERTY() {
        return (int)590728L;
    }
    public static int FSCTL_FILESYSTEM_GET_STATISTICS_EX() {
        return (int)590732L;
    }
    public static int FSCTL_QUERY_VOLUME_CONTAINER_STATE() {
        return (int)590736L;
    }
    public static int FSCTL_SET_LAYER_ROOT() {
        return (int)590740L;
    }
    public static int FSCTL_QUERY_DIRECT_ACCESS_EXTENTS() {
        return (int)590747L;
    }
    public static int FSCTL_NOTIFY_STORAGE_SPACE_ALLOCATION() {
        return (int)590748L;
    }
    public static int FSCTL_SSDI_STORAGE_REQUEST() {
        return (int)590752L;
    }
    public static int FSCTL_QUERY_DIRECT_IMAGE_ORIGINAL_BASE() {
        return (int)590756L;
    }
    public static int FSCTL_READ_UNPRIVILEGED_USN_JOURNAL() {
        return (int)590763L;
    }
    public static int FSCTL_GHOST_FILE_EXTENTS() {
        return (int)623532L;
    }
    public static int FSCTL_QUERY_GHOSTED_FILE_EXTENTS() {
        return (int)590768L;
    }
    public static int FSCTL_UNMAP_SPACE() {
        return (int)590772L;
    }
    public static int FSCTL_HCS_SYNC_NO_WRITE_TUNNEL_REQUEST() {
        return (int)590776L;
    }
    public static int FSCTL_STREAMS_QUERY_PARAMETERS() {
        return (int)590788L;
    }
    public static int FSCTL_STREAMS_ASSOCIATE_ID() {
        return (int)590792L;
    }
    public static int FSCTL_STREAMS_QUERY_ID() {
        return (int)590796L;
    }
    public static int FSCTL_GET_RETRIEVAL_POINTERS_AND_REFCOUNT() {
        return (int)590803L;
    }
    public static int FSCTL_QUERY_VOLUME_NUMA_INFO() {
        return (int)590804L;
    }
    public static int FSCTL_REFS_DEALLOCATE_RANGES() {
        return (int)590808L;
    }
    public static int FSCTL_QUERY_REFS_SMR_VOLUME_INFO() {
        return (int)590812L;
    }
    public static int FSCTL_SET_REFS_SMR_VOLUME_GC_PARAMETERS() {
        return (int)590816L;
    }
    public static int FSCTL_SET_REFS_FILE_STRICTLY_SEQUENTIAL() {
        return (int)590820L;
    }
    public static int FSCTL_DUPLICATE_EXTENTS_TO_FILE_EX() {
        return (int)623592L;
    }
    public static int FSCTL_QUERY_BAD_RANGES() {
        return (int)590828L;
    }
    public static int FSCTL_SET_DAX_ALLOC_ALIGNMENT_HINT() {
        return (int)590832L;
    }
    public static int FSCTL_DELETE_CORRUPTED_REFS_CONTAINER() {
        return (int)590836L;
    }
    public static int FSCTL_SCRUB_UNDISCOVERABLE_ID() {
        return (int)590840L;
    }
    public static int FSCTL_NOTIFY_DATA_CHANGE() {
        return (int)590844L;
    }
    public static int FSCTL_START_VIRTUALIZATION_INSTANCE_EX() {
        return (int)590848L;
    }
    public static int FSCTL_ENCRYPTION_KEY_CONTROL() {
        return (int)590852L;
    }
    public static int FSCTL_VIRTUAL_STORAGE_SET_BEHAVIOR() {
        return (int)590856L;
    }
    public static int FSCTL_SET_REPARSE_POINT_EX() {
        return (int)590860L;
    }
    public static int FSCTL_REARRANGE_FILE() {
        return (int)640032L;
    }
    public static int FSCTL_VIRTUAL_STORAGE_PASSTHROUGH() {
        return (int)590884L;
    }
    public static int FSCTL_GET_RETRIEVAL_POINTER_COUNT() {
        return (int)590891L;
    }
    public static int FSCTL_ENABLE_PER_IO_FLAGS() {
        return (int)590892L;
    }
    public static int USN_PAGE_SIZE() {
        return (int)4096L;
    }
    public static int USN_REASON_DATA_OVERWRITE() {
        return (int)1L;
    }
    public static int USN_REASON_DATA_EXTEND() {
        return (int)2L;
    }
    public static int USN_REASON_DATA_TRUNCATION() {
        return (int)4L;
    }
    public static int USN_REASON_NAMED_DATA_OVERWRITE() {
        return (int)16L;
    }
    public static int USN_REASON_NAMED_DATA_EXTEND() {
        return (int)32L;
    }
    public static int USN_REASON_NAMED_DATA_TRUNCATION() {
        return (int)64L;
    }
    public static int USN_REASON_FILE_CREATE() {
        return (int)256L;
    }
    public static int USN_REASON_FILE_DELETE() {
        return (int)512L;
    }
    public static int USN_REASON_EA_CHANGE() {
        return (int)1024L;
    }
    public static int USN_REASON_SECURITY_CHANGE() {
        return (int)2048L;
    }
    public static int USN_REASON_RENAME_OLD_NAME() {
        return (int)4096L;
    }
    public static int USN_REASON_RENAME_NEW_NAME() {
        return (int)8192L;
    }
    public static int USN_REASON_INDEXABLE_CHANGE() {
        return (int)16384L;
    }
    public static int USN_REASON_BASIC_INFO_CHANGE() {
        return (int)32768L;
    }
    public static int USN_REASON_HARD_LINK_CHANGE() {
        return (int)65536L;
    }
    public static int USN_REASON_COMPRESSION_CHANGE() {
        return (int)131072L;
    }
    public static int USN_REASON_ENCRYPTION_CHANGE() {
        return (int)262144L;
    }
    public static int USN_REASON_OBJECT_ID_CHANGE() {
        return (int)524288L;
    }
    public static int USN_REASON_REPARSE_POINT_CHANGE() {
        return (int)1048576L;
    }
    public static int USN_REASON_STREAM_CHANGE() {
        return (int)2097152L;
    }
    public static int USN_REASON_TRANSACTED_CHANGE() {
        return (int)4194304L;
    }
    public static int USN_REASON_INTEGRITY_CHANGE() {
        return (int)8388608L;
    }
    public static int USN_REASON_DESIRED_STORAGE_CLASS_CHANGE() {
        return (int)16777216L;
    }
    public static int USN_REASON_CLOSE() {
        return (int)2147483648L;
    }
    public static int USN_DELETE_FLAG_DELETE() {
        return (int)1L;
    }
    public static int USN_DELETE_FLAG_NOTIFY() {
        return (int)2L;
    }
    public static int USN_DELETE_VALID_FLAGS() {
        return (int)3L;
    }
    public static int USN_SOURCE_DATA_MANAGEMENT() {
        return (int)1L;
    }
    public static int USN_SOURCE_AUXILIARY_DATA() {
        return (int)2L;
    }
    public static int USN_SOURCE_REPLICATION_MANAGEMENT() {
        return (int)4L;
    }
    public static int USN_SOURCE_CLIENT_REPLICATION_MANAGEMENT() {
        return (int)8L;
    }
    public static int USN_SOURCE_VALID_FLAGS() {
        return (int)15L;
    }
    public static int MARK_HANDLE_PROTECT_CLUSTERS() {
        return (int)1L;
    }
    public static int MARK_HANDLE_TXF_SYSTEM_LOG() {
        return (int)4L;
    }
    public static int MARK_HANDLE_NOT_TXF_SYSTEM_LOG() {
        return (int)8L;
    }
    public static int MARK_HANDLE_REALTIME() {
        return (int)32L;
    }
    public static int MARK_HANDLE_NOT_REALTIME() {
        return (int)64L;
    }
    public static int MARK_HANDLE_FILTER_METADATA() {
        return (int)512L;
    }
    public static int MARK_HANDLE_CLOUD_SYNC() {
        return (int)2048L;
    }
    public static int MARK_HANDLE_READ_COPY() {
        return (int)128L;
    }
    public static int MARK_HANDLE_NOT_READ_COPY() {
        return (int)256L;
    }
    public static int MARK_HANDLE_RETURN_PURGE_FAILURE() {
        return (int)1024L;
    }
    public static int MARK_HANDLE_DISABLE_FILE_METADATA_OPTIMIZATION() {
        return (int)4096L;
    }
    public static int MARK_HANDLE_ENABLE_USN_SOURCE_ON_PAGING_IO() {
        return (int)8192L;
    }
    public static int MARK_HANDLE_SKIP_COHERENCY_SYNC_DISALLOW_WRITES() {
        return (int)16384L;
    }
    public static int MARK_HANDLE_ENABLE_CPU_CACHE() {
        return (int)268435456L;
    }
    public static int VOLUME_IS_DIRTY() {
        return (int)1L;
    }
    public static int VOLUME_UPGRADE_SCHEDULED() {
        return (int)2L;
    }
    public static int VOLUME_SESSION_OPEN() {
        return (int)4L;
    }
    public static int FILE_ZERO_DATA_INFORMATION_FLAG_PRESERVE_CACHED_DATA() {
        return (int)1L;
    }
    public static int ENCRYPTION_FORMAT_DEFAULT() {
        return (int)1L;
    }
    public static int SET_REPAIR_ENABLED() {
        return (int)1L;
    }
    public static int SET_REPAIR_WARN_ABOUT_DATA_LOSS() {
        return (int)8L;
    }
    public static int SET_REPAIR_DISABLED_AND_BUGCHECK_ON_CORRUPT() {
        return (int)16L;
    }
    public static int SET_REPAIR_VALID_MASK() {
        return (int)25L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_FILE_RECORD_NOT_IN_USE() {
        return (int)1L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_FILE_RECORD_REUSED() {
        return (int)2L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_FILE_RECORD_NOT_EXIST() {
        return (int)4L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_FILE_RECORD_NOT_BASE_RECORD() {
        return (int)8L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_SYSTEM_FILE() {
        return (int)16L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_NOT_IMPLEMENTED() {
        return (int)32L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_UNABLE_TO_REPAIR() {
        return (int)64L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_REPAIR_DISABLED() {
        return (int)128L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_RECURSIVELY_CORRUPTED() {
        return (int)256L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_ORPHAN_GENERATED() {
        return (int)512L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_REPAIRED() {
        return (int)1024L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_NOTHING_WRONG() {
        return (int)2048L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_ATTRIBUTE_NOT_FOUND() {
        return (int)4096L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_POTENTIAL_CROSSLINK() {
        return (int)8192L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_STALE_INFORMATION() {
        return (int)16384L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_CLUSTERS_ALREADY_IN_USE() {
        return (int)32768L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_LCN_NOT_EXIST() {
        return (int)65536L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_INVALID_RUN_LENGTH() {
        return (int)131072L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_FILE_RECORD_NOT_ORPHAN() {
        return (int)262144L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_FILE_RECORD_IS_BASE_RECORD() {
        return (int)524288L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_INVALID_ARRAY_LENGTH_COUNT() {
        return (int)1048576L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_SID_VALID() {
        return (int)2097152L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_SID_MISMATCH() {
        return (int)4194304L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_INVALID_PARENT() {
        return (int)8388608L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_PARENT_FILE_RECORD_NOT_IN_USE() {
        return (int)16777216L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_PARENT_FILE_RECORD_REUSED() {
        return (int)33554432L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_PARENT_FILE_RECORD_NOT_EXIST() {
        return (int)67108864L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_PARENT_FILE_RECORD_NOT_BASE_RECORD() {
        return (int)134217728L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_PARENT_FILE_RECORD_NOT_INDEX() {
        return (int)268435456L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_VALID_INDEX_ENTRY() {
        return (int)536870912L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_OUT_OF_GENERIC_NAMES() {
        return (int)1073741824L;
    }
    public static int FILE_INITIATE_REPAIR_HINT1_OUT_OF_RESOURCE() {
        return (int)2147483648L;
    }
    public static long FILE_INITIATE_REPAIR_HINT1_INVALID_LCN() {
        return 4294967296L;
    }
    public static long FILE_INITIATE_REPAIR_HINT1_INVALID_VCN() {
        return 8589934592L;
    }
    public static long FILE_INITIATE_REPAIR_HINT1_NAME_CONFLICT() {
        return 17179869184L;
    }
    public static long FILE_INITIATE_REPAIR_HINT1_ORPHAN() {
        return 34359738368L;
    }
    public static long FILE_INITIATE_REPAIR_HINT1_ATTRIBUTE_TOO_SMALL() {
        return 68719476736L;
    }
    public static long FILE_INITIATE_REPAIR_HINT1_ATTRIBUTE_NON_RESIDENT() {
        return 137438953472L;
    }
    public static long FILE_INITIATE_REPAIR_HINT1_DENY_DEFRAG() {
        return 274877906944L;
    }
    public static long FILE_INITIATE_REPAIR_HINT1_PREVIOUS_PARENT_STILL_VALID() {
        return 549755813888L;
    }
    public static long FILE_INITIATE_REPAIR_HINT1_INDEX_ENTRY_MISMATCH() {
        return 1099511627776L;
    }
    public static long FILE_INITIATE_REPAIR_HINT1_INVALID_ORPHAN_RECOVERY_NAME() {
        return 2199023255552L;
    }
    public static long FILE_INITIATE_REPAIR_HINT1_MULTIPLE_FILE_NAME_ATTRIBUTES() {
        return 4398046511104L;
    }
    public static int TXFS_LOGGING_MODE_SIMPLE() {
        return (int)1L;
    }
    public static int TXFS_LOGGING_MODE_FULL() {
        return (int)2L;
    }
    public static int TXFS_MODIFY_RM_VALID_FLAGS() {
        return (int)261631L;
    }
    public static int TXFS_QUERY_RM_INFORMATION_VALID_FLAGS() {
        return (int)246192L;
    }
    public static int TXFS_ROLLFORWARD_REDO_VALID_FLAGS() {
        return (int)3L;
    }
    public static int TXFS_START_RM_VALID_FLAGS() {
        return (int)15999L;
    }
    public static int TXFS_TRANSACTED_VERSION_NONTRANSACTED() {
        return (int)4294967294L;
    }
    public static int TXFS_TRANSACTED_VERSION_UNCOMMITTED() {
        return (int)4294967295L;
    }
    public static int PERSISTENT_VOLUME_STATE_SHORT_NAME_CREATION_DISABLED() {
        return (int)1L;
    }
    public static int PERSISTENT_VOLUME_STATE_VOLUME_SCRUB_DISABLED() {
        return (int)2L;
    }
    public static int PERSISTENT_VOLUME_STATE_GLOBAL_METADATA_NO_SEEK_PENALTY() {
        return (int)4L;
    }
    public static int PERSISTENT_VOLUME_STATE_LOCAL_METADATA_NO_SEEK_PENALTY() {
        return (int)8L;
    }
    public static int PERSISTENT_VOLUME_STATE_NO_HEAT_GATHERING() {
        return (int)16L;
    }
    public static int PERSISTENT_VOLUME_STATE_CONTAINS_BACKING_WIM() {
        return (int)32L;
    }
    public static int PERSISTENT_VOLUME_STATE_BACKED_BY_WIM() {
        return (int)64L;
    }
    public static int PERSISTENT_VOLUME_STATE_NO_WRITE_AUTO_TIERING() {
        return (int)128L;
    }
    public static int PERSISTENT_VOLUME_STATE_TXF_DISABLED() {
        return (int)256L;
    }
    public static int PERSISTENT_VOLUME_STATE_REALLOCATE_ALL_DATA_WRITES() {
        return (int)512L;
    }
    public static int PERSISTENT_VOLUME_STATE_CHKDSK_RAN_ONCE() {
        return (int)1024L;
    }
    public static int PERSISTENT_VOLUME_STATE_MODIFIED_BY_CHKDSK() {
        return (int)2048L;
    }
    public static int PERSISTENT_VOLUME_STATE_DAX_FORMATTED() {
        return (int)4096L;
    }
    public static int OPLOCK_LEVEL_CACHE_READ() {
        return (int)1L;
    }
    public static int OPLOCK_LEVEL_CACHE_HANDLE() {
        return (int)2L;
    }
    public static int OPLOCK_LEVEL_CACHE_WRITE() {
        return (int)4L;
    }
    public static int REQUEST_OPLOCK_INPUT_FLAG_REQUEST() {
        return (int)1L;
    }
    public static int REQUEST_OPLOCK_INPUT_FLAG_ACK() {
        return (int)2L;
    }
    public static int REQUEST_OPLOCK_INPUT_FLAG_COMPLETE_ACK_ON_CLOSE() {
        return (int)4L;
    }
    public static int REQUEST_OPLOCK_OUTPUT_FLAG_ACK_REQUIRED() {
        return (int)1L;
    }
    public static int REQUEST_OPLOCK_OUTPUT_FLAG_MODES_PROVIDED() {
        return (int)2L;
    }
    public static int SD_GLOBAL_CHANGE_TYPE_QUERY_STATS() {
        return (int)65536L;
    }
    public static int SD_GLOBAL_CHANGE_TYPE_ENUM_SDS() {
        return (int)131072L;
    }
    public static int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_MASK() {
        return (int)4278190080L;
    }
    public static long CSV_NAMESPACE_INFO_V1() {
        return 24L;
    }
    public static int CSV_INVALID_DEVICE_NUMBER() {
        return (int)4294967295L;
    }
    public static int QUERY_FILE_LAYOUT_RESTART() {
        return (int)1L;
    }
    public static int QUERY_FILE_LAYOUT_INCLUDE_NAMES() {
        return (int)2L;
    }
    public static int QUERY_FILE_LAYOUT_INCLUDE_STREAMS() {
        return (int)4L;
    }
    public static int QUERY_FILE_LAYOUT_INCLUDE_EXTENTS() {
        return (int)8L;
    }
    public static int QUERY_FILE_LAYOUT_INCLUDE_EXTRA_INFO() {
        return (int)16L;
    }
    public static int QUERY_FILE_LAYOUT_INCLUDE_STREAMS_WITH_NO_CLUSTERS_ALLOCATED() {
        return (int)32L;
    }
    public static int QUERY_FILE_LAYOUT_INCLUDE_FULL_PATH_IN_NAMES() {
        return (int)64L;
    }
    public static int QUERY_FILE_LAYOUT_INCLUDE_STREAM_INFORMATION() {
        return (int)128L;
    }
    public static int QUERY_FILE_LAYOUT_INCLUDE_STREAM_INFORMATION_FOR_DSC_ATTRIBUTE() {
        return (int)256L;
    }
    public static int QUERY_FILE_LAYOUT_INCLUDE_STREAM_INFORMATION_FOR_TXF_ATTRIBUTE() {
        return (int)512L;
    }
    public static int QUERY_FILE_LAYOUT_INCLUDE_STREAM_INFORMATION_FOR_EFS_ATTRIBUTE() {
        return (int)1024L;
    }
    public static int QUERY_FILE_LAYOUT_INCLUDE_ONLY_FILES_WITH_SPECIFIC_ATTRIBUTES() {
        return (int)2048L;
    }
    public static int QUERY_FILE_LAYOUT_INCLUDE_FILES_WITH_DSC_ATTRIBUTE() {
        return (int)4096L;
    }
    public static int QUERY_FILE_LAYOUT_INCLUDE_STREAM_INFORMATION_FOR_DATA_ATTRIBUTE() {
        return (int)8192L;
    }
    public static int QUERY_FILE_LAYOUT_INCLUDE_STREAM_INFORMATION_FOR_REPARSE_ATTRIBUTE() {
        return (int)16384L;
    }
    public static int QUERY_FILE_LAYOUT_INCLUDE_STREAM_INFORMATION_FOR_EA_ATTRIBUTE() {
        return (int)32768L;
    }
    public static int QUERY_FILE_LAYOUT_SINGLE_INSTANCED() {
        return (int)1L;
    }
    public static int FILE_LAYOUT_NAME_ENTRY_PRIMARY() {
        return (int)1L;
    }
    public static int FILE_LAYOUT_NAME_ENTRY_DOS() {
        return (int)2L;
    }
    public static int STREAM_LAYOUT_ENTRY_IMMOVABLE() {
        return (int)1L;
    }
    public static int STREAM_LAYOUT_ENTRY_PINNED() {
        return (int)2L;
    }
    public static int STREAM_LAYOUT_ENTRY_RESIDENT() {
        return (int)4L;
    }
    public static int STREAM_LAYOUT_ENTRY_NO_CLUSTERS_ALLOCATED() {
        return (int)8L;
    }
    public static int STREAM_LAYOUT_ENTRY_HAS_INFORMATION() {
        return (int)16L;
    }
    public static int STREAM_EXTENT_ENTRY_AS_RETRIEVAL_POINTERS() {
        return (int)1L;
    }
    public static int STREAM_EXTENT_ENTRY_ALL_EXTENTS() {
        return (int)2L;
    }
    public static int CHECKSUM_TYPE_UNCHANGED() {
        return (int)-1L;
    }
    public static int CHECKSUM_TYPE_NONE() {
        return (int)0L;
    }
    public static int CHECKSUM_TYPE_CRC32() {
        return (int)1L;
    }
    public static int CHECKSUM_TYPE_CRC64() {
        return (int)2L;
    }
    public static int CHECKSUM_TYPE_ECC() {
        return (int)3L;
    }
    public static int CHECKSUM_TYPE_FIRST_UNUSED_TYPE() {
        return (int)4L;
    }
    public static int FSCTL_INTEGRITY_FLAG_CHECKSUM_ENFORCEMENT_OFF() {
        return (int)1L;
    }
    public static int OFFLOAD_READ_FLAG_ALL_ZERO_BEYOND_CURRENT_RANGE() {
        return (int)1L;
    }
    public static int FILE_REGION_USAGE_QUERY_ALIGNMENT() {
        return (int)24L;
    }
    public static int VALID_WRITE_USN_REASON_MASK() {
        return (int)2147483649L;
    }
    public static int FILE_STORAGE_TIER_NAME_LENGTH() {
        return (int)256L;
    }
    public static int FILE_STORAGE_TIER_DESCRIPTION_LENGTH() {
        return (int)512L;
    }
    public static int FILE_STORAGE_TIER_FLAG_NO_SEEK_PENALTY() {
        return (int)131072L;
    }
    public static int FILE_STORAGE_TIER_FLAG_WRITE_BACK_CACHE() {
        return (int)2097152L;
    }
    public static int FILE_STORAGE_TIER_FLAG_READ_CACHE() {
        return (int)4194304L;
    }
    public static int FILE_STORAGE_TIER_FLAG_PARITY() {
        return (int)8388608L;
    }
    public static int FILE_STORAGE_TIER_FLAG_SMR() {
        return (int)16777216L;
    }
    public static int QUERY_STORAGE_CLASSES_FLAGS_MEASURE_WRITE() {
        return (int)2147483648L;
    }
    public static long FSCTL_QUERY_STORAGE_CLASSES_OUTPUT_VERSION() {
        return 1088L;
    }
    public static int QUERY_FILE_LAYOUT_REPARSE_DATA_INVALID() {
        return (int)1L;
    }
    public static int QUERY_FILE_LAYOUT_REPARSE_TAG_INVALID() {
        return (int)2L;
    }
    public static long FSCTL_QUERY_REGION_INFO_INPUT_VERSION() {
        return 32L;
    }
    public static long FSCTL_QUERY_REGION_INFO_OUTPUT_VERSION() {
        return 64L;
    }
    public static int STREAMS_INVALID_ID() {
        return (int)0L;
    }
    public static int STREAMS_MAX_ID() {
        return (int)65535L;
    }
    public static int STREAMS_ASSOCIATE_ID_CLEAR() {
        return (int)1L;
    }
    public static int STREAMS_ASSOCIATE_ID_SET() {
        return (int)2L;
    }
    public static int DAX_ALLOC_ALIGNMENT_FLAG_MANDATORY() {
        return (int)1L;
    }
    public static int DAX_ALLOC_ALIGNMENT_FLAG_FALLBACK_SPECIFIED() {
        return (int)2L;
    }
    public static int WOF_CURRENT_VERSION() {
        return (int)1L;
    }
    public static int WOF_PROVIDER_WIM() {
        return (int)1L;
    }
    public static int WOF_PROVIDER_FILE() {
        return (int)2L;
    }
    public static int WOF_PROVIDER_CLOUD() {
        return (int)3L;
    }
    public static int WIM_PROVIDER_CURRENT_VERSION() {
        return (int)1L;
    }
    public static int WIM_PROVIDER_EXTERNAL_FLAG_NOT_ACTIVE() {
        return (int)1L;
    }
    public static int WIM_PROVIDER_EXTERNAL_FLAG_SUSPENDED() {
        return (int)2L;
    }
    public static int WIM_BOOT_OS_WIM() {
        return (int)1L;
    }
    public static int WIM_BOOT_NOT_OS_WIM() {
        return (int)0L;
    }
    public static int FILE_PROVIDER_CURRENT_VERSION() {
        return (int)1L;
    }
    public static int FILE_PROVIDER_SINGLE_FILE() {
        return (int)1L;
    }
    public static int FILE_PROVIDER_COMPRESSION_XPRESS4K() {
        return (int)0L;
    }
    public static int FILE_PROVIDER_COMPRESSION_LZX() {
        return (int)1L;
    }
    public static int FILE_PROVIDER_COMPRESSION_XPRESS8K() {
        return (int)2L;
    }
    public static int FILE_PROVIDER_COMPRESSION_XPRESS16K() {
        return (int)3L;
    }
    public static int FILE_PROVIDER_COMPRESSION_MAXIMUM() {
        return (int)4L;
    }
    public static int FILE_PROVIDER_FLAG_COMPRESS_ON_WRITE() {
        return (int)1L;
    }
    public static int CONTAINER_VOLUME_STATE_HOSTING_CONTAINER() {
        return (int)1L;
    }
    public static int CONTAINER_ROOT_INFO_FLAG_SCRATCH_ROOT() {
        return (int)1L;
    }
    public static int CONTAINER_ROOT_INFO_FLAG_LAYER_ROOT() {
        return (int)2L;
    }
    public static int CONTAINER_ROOT_INFO_FLAG_VIRTUALIZATION_ROOT() {
        return (int)4L;
    }
    public static int CONTAINER_ROOT_INFO_FLAG_VIRTUALIZATION_TARGET_ROOT() {
        return (int)8L;
    }
    public static int CONTAINER_ROOT_INFO_FLAG_VIRTUALIZATION_EXCEPTION_ROOT() {
        return (int)16L;
    }
    public static int CONTAINER_ROOT_INFO_FLAG_BIND_ROOT() {
        return (int)32L;
    }
    public static int CONTAINER_ROOT_INFO_FLAG_BIND_TARGET_ROOT() {
        return (int)64L;
    }
    public static int CONTAINER_ROOT_INFO_FLAG_BIND_EXCEPTION_ROOT() {
        return (int)128L;
    }
    public static int CONTAINER_ROOT_INFO_FLAG_BIND_DO_NOT_MAP_NAME() {
        return (int)256L;
    }
    public static int CONTAINER_ROOT_INFO_VALID_FLAGS() {
        return (int)511L;
    }
    public static int IOCTL_VOLUME_GET_VOLUME_DISK_EXTENTS() {
        return (int)5636096L;
    }
    public static int IOCTL_VOLUME_ONLINE() {
        return (int)5685256L;
    }
    public static int IOCTL_VOLUME_OFFLINE() {
        return (int)5685260L;
    }
    public static int IOCTL_VOLUME_IS_CLUSTERED() {
        return (int)5636144L;
    }
    public static int IOCTL_VOLUME_GET_GPT_ATTRIBUTES() {
        return (int)5636152L;
    }
    public static int IRP_EXT_TRACK_OFFSET_HEADER_VALIDATION_VALUE() {
        return (int)21583L;
    }
    public static int SCARD_PROTOCOL_Tx() {
        return (int)3L;
    }
    public static int SCARD_PROTOCOL_DEFAULT() {
        return (int)2147483648L;
    }
    public static int IOCTL_SMARTCARD_POWER() {
        return (int)3211268L;
    }
    public static int IOCTL_SMARTCARD_GET_ATTRIBUTE() {
        return (int)3211272L;
    }
    public static int IOCTL_SMARTCARD_SET_ATTRIBUTE() {
        return (int)3211276L;
    }
    public static int IOCTL_SMARTCARD_CONFISCATE() {
        return (int)3211280L;
    }
    public static int IOCTL_SMARTCARD_TRANSMIT() {
        return (int)3211284L;
    }
    public static int IOCTL_SMARTCARD_EJECT() {
        return (int)3211288L;
    }
    public static int IOCTL_SMARTCARD_SWALLOW() {
        return (int)3211292L;
    }
    public static int IOCTL_SMARTCARD_IS_PRESENT() {
        return (int)3211304L;
    }
    public static int IOCTL_SMARTCARD_IS_ABSENT() {
        return (int)3211308L;
    }
    public static int IOCTL_SMARTCARD_SET_PROTOCOL() {
        return (int)3211312L;
    }
    public static int IOCTL_SMARTCARD_GET_STATE() {
        return (int)3211320L;
    }
    public static int IOCTL_SMARTCARD_GET_LAST_ERROR() {
        return (int)3211324L;
    }
    public static int IOCTL_SMARTCARD_GET_PERF_CNTR() {
        return (int)3211328L;
    }
    public static int IOCTL_SMARTCARD_GET_FEATURE_REQUEST() {
        return (int)3224864L;
    }
    public static int SCARD_ATTR_VENDOR_NAME() {
        return (int)65792L;
    }
    public static int SCARD_ATTR_VENDOR_IFD_TYPE() {
        return (int)65793L;
    }
    public static int SCARD_ATTR_VENDOR_IFD_VERSION() {
        return (int)65794L;
    }
    public static int SCARD_ATTR_VENDOR_IFD_SERIAL_NO() {
        return (int)65795L;
    }
    public static int SCARD_ATTR_CHANNEL_ID() {
        return (int)131344L;
    }
    public static int SCARD_ATTR_PROTOCOL_TYPES() {
        return (int)196896L;
    }
    public static int SCARD_ATTR_DEFAULT_CLK() {
        return (int)196897L;
    }
    public static int SCARD_ATTR_MAX_CLK() {
        return (int)196898L;
    }
    public static int SCARD_ATTR_DEFAULT_DATA_RATE() {
        return (int)196899L;
    }
    public static int SCARD_ATTR_MAX_DATA_RATE() {
        return (int)196900L;
    }
    public static int SCARD_ATTR_MAX_IFSD() {
        return (int)196901L;
    }
    public static int SCARD_ATTR_POWER_MGMT_SUPPORT() {
        return (int)262449L;
    }
    public static int SCARD_ATTR_USER_TO_CARD_AUTH_DEVICE() {
        return (int)328000L;
    }
    public static int SCARD_ATTR_USER_AUTH_INPUT_DEVICE() {
        return (int)328002L;
    }
    public static int SCARD_ATTR_CHARACTERISTICS() {
        return (int)393552L;
    }
    public static int SCARD_ATTR_CURRENT_PROTOCOL_TYPE() {
        return (int)524801L;
    }
    public static int SCARD_ATTR_CURRENT_CLK() {
        return (int)524802L;
    }
    public static int SCARD_ATTR_CURRENT_F() {
        return (int)524803L;
    }
    public static int SCARD_ATTR_CURRENT_D() {
        return (int)524804L;
    }
    public static int SCARD_ATTR_CURRENT_N() {
        return (int)524805L;
    }
    public static int SCARD_ATTR_CURRENT_W() {
        return (int)524806L;
    }
    public static int SCARD_ATTR_CURRENT_IFSC() {
        return (int)524807L;
    }
    public static int SCARD_ATTR_CURRENT_IFSD() {
        return (int)524808L;
    }
    public static int SCARD_ATTR_CURRENT_BWT() {
        return (int)524809L;
    }
    public static int SCARD_ATTR_CURRENT_CWT() {
        return (int)524810L;
    }
    public static int SCARD_ATTR_CURRENT_EBC_ENCODING() {
        return (int)524811L;
    }
    public static int SCARD_ATTR_EXTENDED_BWT() {
        return (int)524812L;
    }
    public static int SCARD_ATTR_ICC_PRESENCE() {
        return (int)590592L;
    }
    public static int SCARD_ATTR_ICC_INTERFACE_STATUS() {
        return (int)590593L;
    }
    public static int SCARD_ATTR_CURRENT_IO_STATE() {
        return (int)590594L;
    }
    public static int SCARD_ATTR_ATR_STRING() {
        return (int)590595L;
    }
    public static int SCARD_ATTR_ICC_TYPE_PER_ATR() {
        return (int)590596L;
    }
    public static int SCARD_ATTR_ESC_RESET() {
        return (int)499712L;
    }
    public static int SCARD_ATTR_ESC_CANCEL() {
        return (int)499715L;
    }
    public static int SCARD_ATTR_ESC_AUTHREQUEST() {
        return (int)499717L;
    }
    public static int SCARD_ATTR_MAXINPUT() {
        return (int)499719L;
    }
    public static int SCARD_ATTR_VENDOR_SPECIFIC_INFO() {
        return (int)499720L;
    }
    public static int SCARD_ATTR_DEVICE_UNIT() {
        return (int)2147418113L;
    }
    public static int SCARD_ATTR_DEVICE_IN_USE() {
        return (int)2147418114L;
    }
    public static int SCARD_ATTR_DEVICE_FRIENDLY_NAME_A() {
        return (int)2147418115L;
    }
    public static int SCARD_ATTR_DEVICE_SYSTEM_NAME_A() {
        return (int)2147418116L;
    }
    public static int SCARD_ATTR_DEVICE_FRIENDLY_NAME_W() {
        return (int)2147418117L;
    }
    public static int SCARD_ATTR_DEVICE_SYSTEM_NAME_W() {
        return (int)2147418118L;
    }
    public static int SCARD_ATTR_SUPRESS_T1_IFS_REQUEST() {
        return (int)2147418119L;
    }
    public static int SCARD_PERF_NUM_TRANSMISSIONS() {
        return (int)2147352577L;
    }
    public static int SCARD_PERF_BYTES_TRANSMITTED() {
        return (int)2147352578L;
    }
    public static int SCARD_PERF_TRANSMISSION_TIME() {
        return (int)2147352579L;
    }
    public static int SCARD_ATTR_DEVICE_FRIENDLY_NAME() {
        return (int)2147418115L;
    }
    public static int SCARD_ATTR_DEVICE_SYSTEM_NAME() {
        return (int)2147418116L;
    }
    public static int SCARD_AUTOALLOCATE() {
        return (int)4294967295L;
    }
    public static MemorySegment SCARD_ALL_READERS() {
        return constants$740.SCARD_ALL_READERS$SEGMENT;
    }
    public static MemorySegment SCARD_DEFAULT_READERS() {
        return constants$740.SCARD_DEFAULT_READERS$SEGMENT;
    }
    public static MemorySegment SCARD_LOCAL_READERS() {
        return constants$741.SCARD_LOCAL_READERS$SEGMENT;
    }
    public static MemorySegment SCARD_SYSTEM_READERS() {
        return constants$741.SCARD_SYSTEM_READERS$SEGMENT;
    }
    public static int SCARD_READER_SEL_AUTH_PACKAGE() {
        return (int)4294966667L;
    }
    public static int DSPRINT_PENDING() {
        return (int)2147483648L;
    }
    public static int MAX_FORM_KEYWORD_LENGTH() {
        return (int)64L;
    }
    public static int NORMAL_PRINT() {
        return (int)0L;
    }
    public static int REVERSE_PRINT() {
        return (int)1L;
    }
    public static int PPCAPS_RIGHT_THEN_DOWN() {
        return (int)1L;
    }
    public static int PPCAPS_DOWN_THEN_RIGHT() {
        return (int)2L;
    }
    public static int PPCAPS_LEFT_THEN_DOWN() {
        return (int)4L;
    }
    public static int PPCAPS_DOWN_THEN_LEFT() {
        return (int)8L;
    }
    public static int PPCAPS_BORDER_PRINT() {
        return (int)1L;
    }
    public static int PPCAPS_BOOKLET_EDGE() {
        return (int)1L;
    }
    public static int PPCAPS_REVERSE_PAGES_FOR_REVERSE_DUPLEX() {
        return (int)1L;
    }
    public static int PPCAPS_DONT_SEND_EXTRA_PAGES_FOR_DUPLEX() {
        return (int)2L;
    }
    public static int PPCAPS_SQUARE_SCALING() {
        return (int)1L;
    }
    public static MemorySegment BIDI_ACTION_ENUM_SCHEMA() {
        return constants$741.BIDI_ACTION_ENUM_SCHEMA$SEGMENT;
    }
    public static MemorySegment BIDI_ACTION_GET() {
        return constants$741.BIDI_ACTION_GET$SEGMENT;
    }
    public static MemorySegment BIDI_ACTION_SET() {
        return constants$741.BIDI_ACTION_SET$SEGMENT;
    }
    public static MemorySegment BIDI_ACTION_GET_ALL() {
        return constants$741.BIDI_ACTION_GET_ALL$SEGMENT;
    }
    public static MemorySegment BIDI_ACTION_GET_WITH_ARGUMENT() {
        return constants$742.BIDI_ACTION_GET_WITH_ARGUMENT$SEGMENT;
    }
    public static int ERROR_BIDI_NOT_SUPPORTED() {
        return (int)50L;
    }
    public static int ERROR_BIDI_STATUS_WARNING() {
        return (int)13001L;
    }
    public static int ERROR_BIDI_SCHEMA_READ_ONLY() {
        return (int)13002L;
    }
    public static int ERROR_BIDI_SERVER_OFFLINE() {
        return (int)13003L;
    }
    public static int ERROR_BIDI_DEVICE_OFFLINE() {
        return (int)13004L;
    }
    public static int ERROR_BIDI_SCHEMA_NOT_SUPPORTED() {
        return (int)13005L;
    }
    public static int ERROR_BIDI_SET_DIFFERENT_TYPE() {
        return (int)13006L;
    }
    public static int ERROR_BIDI_SET_MULTIPLE_SCHEMAPATH() {
        return (int)13007L;
    }
    public static int ERROR_BIDI_SET_INVALID_SCHEMAPATH() {
        return (int)13008L;
    }
    public static int ERROR_BIDI_SET_UNKNOWN_FAILURE() {
        return (int)13009L;
    }
    public static int ERROR_BIDI_SCHEMA_WRITE_ONLY() {
        return (int)13010L;
    }
    public static int ERROR_BIDI_GET_REQUIRES_ARGUMENT() {
        return (int)13011L;
    }
    public static int ERROR_BIDI_GET_ARGUMENT_NOT_SUPPORTED() {
        return (int)13012L;
    }
    public static int ERROR_BIDI_GET_MISSING_ARGUMENT() {
        return (int)13013L;
    }
    public static int ERROR_BIDI_DEVICE_CONFIG_UNCHANGED() {
        return (int)13014L;
    }
    public static int ERROR_BIDI_NO_LOCALIZED_RESOURCES() {
        return (int)13015L;
    }
    public static int ERROR_BIDI_NO_BIDI_SCHEMA_EXTENSIONS() {
        return (int)13016L;
    }
    public static int ERROR_BIDI_UNSUPPORTED_CLIENT_LANGUAGE() {
        return (int)13017L;
    }
    public static int ERROR_BIDI_UNSUPPORTED_RESOURCE_FORMAT() {
        return (int)13018L;
    }
    public static int PRINTER_CHANGE_TIMEOUT() {
        return (int)2147483648L;
    }
    public static int PRINTER_ERROR_INFORMATION() {
        return (int)2147483648L;
    }
    public static MemorySegment SPLREG_DEFAULT_SPOOL_DIRECTORY() {
        return constants$742.SPLREG_DEFAULT_SPOOL_DIRECTORY$SEGMENT;
    }
    public static MemorySegment SPLREG_PORT_THREAD_PRIORITY_DEFAULT() {
        return constants$742.SPLREG_PORT_THREAD_PRIORITY_DEFAULT$SEGMENT;
    }
    public static MemorySegment SPLREG_PORT_THREAD_PRIORITY() {
        return constants$742.SPLREG_PORT_THREAD_PRIORITY$SEGMENT;
    }
    public static MemorySegment SPLREG_SCHEDULER_THREAD_PRIORITY_DEFAULT() {
        return constants$742.SPLREG_SCHEDULER_THREAD_PRIORITY_DEFAULT$SEGMENT;
    }
    public static MemorySegment SPLREG_SCHEDULER_THREAD_PRIORITY() {
        return constants$742.SPLREG_SCHEDULER_THREAD_PRIORITY$SEGMENT;
    }
    public static MemorySegment SPLREG_BEEP_ENABLED() {
        return constants$743.SPLREG_BEEP_ENABLED$SEGMENT;
    }
    public static MemorySegment SPLREG_NET_POPUP() {
        return constants$743.SPLREG_NET_POPUP$SEGMENT;
    }
    public static MemorySegment SPLREG_RETRY_POPUP() {
        return constants$743.SPLREG_RETRY_POPUP$SEGMENT;
    }
    public static MemorySegment SPLREG_NET_POPUP_TO_COMPUTER() {
        return constants$743.SPLREG_NET_POPUP_TO_COMPUTER$SEGMENT;
    }
    public static MemorySegment SPLREG_EVENT_LOG() {
        return constants$743.SPLREG_EVENT_LOG$SEGMENT;
    }
    public static MemorySegment SPLREG_MAJOR_VERSION() {
        return constants$743.SPLREG_MAJOR_VERSION$SEGMENT;
    }
    public static MemorySegment SPLREG_MINOR_VERSION() {
        return constants$744.SPLREG_MINOR_VERSION$SEGMENT;
    }
    public static MemorySegment SPLREG_ARCHITECTURE() {
        return constants$744.SPLREG_ARCHITECTURE$SEGMENT;
    }
    public static MemorySegment SPLREG_OS_VERSION() {
        return constants$744.SPLREG_OS_VERSION$SEGMENT;
    }
    public static MemorySegment SPLREG_OS_VERSIONEX() {
        return constants$744.SPLREG_OS_VERSIONEX$SEGMENT;
    }
    public static MemorySegment SPLREG_DS_PRESENT() {
        return constants$744.SPLREG_DS_PRESENT$SEGMENT;
    }
    public static MemorySegment SPLREG_DS_PRESENT_FOR_USER() {
        return constants$744.SPLREG_DS_PRESENT_FOR_USER$SEGMENT;
    }
    public static MemorySegment SPLREG_REMOTE_FAX() {
        return constants$745.SPLREG_REMOTE_FAX$SEGMENT;
    }
    public static MemorySegment SPLREG_RESTART_JOB_ON_POOL_ERROR() {
        return constants$745.SPLREG_RESTART_JOB_ON_POOL_ERROR$SEGMENT;
    }
    public static MemorySegment SPLREG_RESTART_JOB_ON_POOL_ENABLED() {
        return constants$745.SPLREG_RESTART_JOB_ON_POOL_ENABLED$SEGMENT;
    }
    public static MemorySegment SPLREG_DNS_MACHINE_NAME() {
        return constants$745.SPLREG_DNS_MACHINE_NAME$SEGMENT;
    }
    public static MemorySegment SPLREG_ALLOW_USER_MANAGEFORMS() {
        return constants$745.SPLREG_ALLOW_USER_MANAGEFORMS$SEGMENT;
    }
    public static MemorySegment SPLREG_WEBSHAREMGMT() {
        return constants$745.SPLREG_WEBSHAREMGMT$SEGMENT;
    }
    public static short SPLREG_PRINT_DRIVER_ISOLATION_GROUPS_SEPARATOR() {
        return (short)92L;
    }
    public static MemorySegment SPLREG_PRINT_DRIVER_ISOLATION_GROUPS() {
        return constants$746.SPLREG_PRINT_DRIVER_ISOLATION_GROUPS$SEGMENT;
    }
    public static MemorySegment SPLREG_PRINT_DRIVER_ISOLATION_TIME_BEFORE_RECYCLE() {
        return constants$746.SPLREG_PRINT_DRIVER_ISOLATION_TIME_BEFORE_RECYCLE$SEGMENT;
    }
    public static MemorySegment SPLREG_PRINT_DRIVER_ISOLATION_MAX_OBJECTS_BEFORE_RECYCLE() {
        return constants$746.SPLREG_PRINT_DRIVER_ISOLATION_MAX_OBJECTS_BEFORE_RECYCLE$SEGMENT;
    }
    public static MemorySegment SPLREG_PRINT_DRIVER_ISOLATION_IDLE_TIMEOUT() {
        return constants$746.SPLREG_PRINT_DRIVER_ISOLATION_IDLE_TIMEOUT$SEGMENT;
    }
    public static MemorySegment SPLREG_PRINT_DRIVER_ISOLATION_EXECUTION_POLICY() {
        return constants$746.SPLREG_PRINT_DRIVER_ISOLATION_EXECUTION_POLICY$SEGMENT;
    }
    public static MemorySegment SPLREG_PRINT_DRIVER_ISOLATION_OVERRIDE_POLICY() {
        return constants$746.SPLREG_PRINT_DRIVER_ISOLATION_OVERRIDE_POLICY$SEGMENT;
    }
    public static MemorySegment SPLREG_PRINT_QUEUE_V4_DRIVER_DIRECTORY() {
        return constants$747.SPLREG_PRINT_QUEUE_V4_DRIVER_DIRECTORY$SEGMENT;
    }
    public static int SERVER_ALL_ACCESS() {
        return (int)983043L;
    }
    public static int SERVER_READ() {
        return (int)131074L;
    }
    public static int SERVER_WRITE() {
        return (int)131075L;
    }
    public static int SERVER_EXECUTE() {
        return (int)131074L;
    }
    public static int PRINTER_ALL_ACCESS() {
        return (int)983052L;
    }
    public static int PRINTER_READ() {
        return (int)131080L;
    }
    public static int PRINTER_WRITE() {
        return (int)131080L;
    }
    public static int PRINTER_EXECUTE() {
        return (int)131080L;
    }
    public static int JOB_ALL_ACCESS() {
        return (int)983088L;
    }
    public static int JOB_READ() {
        return (int)131104L;
    }
    public static int JOB_WRITE() {
        return (int)131088L;
    }
    public static int JOB_EXECUTE() {
        return (int)131088L;
    }
    public static MemorySegment SPLDS_SPOOLER_KEY() {
        return constants$747.SPLDS_SPOOLER_KEY$SEGMENT;
    }
    public static MemorySegment SPLDS_DRIVER_KEY() {
        return constants$747.SPLDS_DRIVER_KEY$SEGMENT;
    }
    public static MemorySegment SPLDS_USER_KEY() {
        return constants$747.SPLDS_USER_KEY$SEGMENT;
    }
    public static MemorySegment SPLDS_ASSET_NUMBER() {
        return constants$747.SPLDS_ASSET_NUMBER$SEGMENT;
    }
    public static MemorySegment SPLDS_BYTES_PER_MINUTE() {
        return constants$747.SPLDS_BYTES_PER_MINUTE$SEGMENT;
    }
    public static MemorySegment SPLDS_DESCRIPTION() {
        return constants$748.SPLDS_DESCRIPTION$SEGMENT;
    }
    public static MemorySegment SPLDS_DRIVER_NAME() {
        return constants$748.SPLDS_DRIVER_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_DRIVER_VERSION() {
        return constants$748.SPLDS_DRIVER_VERSION$SEGMENT;
    }
    public static MemorySegment SPLDS_LOCATION() {
        return constants$748.SPLDS_LOCATION$SEGMENT;
    }
    public static MemorySegment SPLDS_PORT_NAME() {
        return constants$748.SPLDS_PORT_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_ATTRIBUTES() {
        return constants$748.SPLDS_PRINT_ATTRIBUTES$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_BIN_NAMES() {
        return constants$749.SPLDS_PRINT_BIN_NAMES$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_COLLATE() {
        return constants$749.SPLDS_PRINT_COLLATE$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_COLOR() {
        return constants$749.SPLDS_PRINT_COLOR$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_DUPLEX_SUPPORTED() {
        return constants$749.SPLDS_PRINT_DUPLEX_SUPPORTED$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_END_TIME() {
        return constants$749.SPLDS_PRINT_END_TIME$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINTER_CLASS() {
        return constants$749.SPLDS_PRINTER_CLASS$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINTER_NAME() {
        return constants$750.SPLDS_PRINTER_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_KEEP_PRINTED_JOBS() {
        return constants$750.SPLDS_PRINT_KEEP_PRINTED_JOBS$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_LANGUAGE() {
        return constants$750.SPLDS_PRINT_LANGUAGE$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MAC_ADDRESS() {
        return constants$750.SPLDS_PRINT_MAC_ADDRESS$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MAX_X_EXTENT() {
        return constants$750.SPLDS_PRINT_MAX_X_EXTENT$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MAX_Y_EXTENT() {
        return constants$750.SPLDS_PRINT_MAX_Y_EXTENT$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MAX_RESOLUTION_SUPPORTED() {
        return constants$751.SPLDS_PRINT_MAX_RESOLUTION_SUPPORTED$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MEDIA_READY() {
        return constants$751.SPLDS_PRINT_MEDIA_READY$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MEDIA_SUPPORTED() {
        return constants$751.SPLDS_PRINT_MEDIA_SUPPORTED$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MEMORY() {
        return constants$751.SPLDS_PRINT_MEMORY$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MIN_X_EXTENT() {
        return constants$751.SPLDS_PRINT_MIN_X_EXTENT$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MIN_Y_EXTENT() {
        return constants$751.SPLDS_PRINT_MIN_Y_EXTENT$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_NETWORK_ADDRESS() {
        return constants$752.SPLDS_PRINT_NETWORK_ADDRESS$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_NOTIFY() {
        return constants$752.SPLDS_PRINT_NOTIFY$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_NUMBER_UP() {
        return constants$752.SPLDS_PRINT_NUMBER_UP$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_ORIENTATIONS_SUPPORTED() {
        return constants$752.SPLDS_PRINT_ORIENTATIONS_SUPPORTED$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_OWNER() {
        return constants$752.SPLDS_PRINT_OWNER$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_PAGES_PER_MINUTE() {
        return constants$752.SPLDS_PRINT_PAGES_PER_MINUTE$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_RATE() {
        return constants$753.SPLDS_PRINT_RATE$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_RATE_UNIT() {
        return constants$753.SPLDS_PRINT_RATE_UNIT$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_SEPARATOR_FILE() {
        return constants$753.SPLDS_PRINT_SEPARATOR_FILE$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_SHARE_NAME() {
        return constants$753.SPLDS_PRINT_SHARE_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_SPOOLING() {
        return constants$753.SPLDS_PRINT_SPOOLING$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_STAPLING_SUPPORTED() {
        return constants$753.SPLDS_PRINT_STAPLING_SUPPORTED$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_START_TIME() {
        return constants$754.SPLDS_PRINT_START_TIME$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_STATUS() {
        return constants$754.SPLDS_PRINT_STATUS$SEGMENT;
    }
    public static MemorySegment SPLDS_PRIORITY() {
        return constants$754.SPLDS_PRIORITY$SEGMENT;
    }
    public static MemorySegment SPLDS_SERVER_NAME() {
        return constants$754.SPLDS_SERVER_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_SHORT_SERVER_NAME() {
        return constants$754.SPLDS_SHORT_SERVER_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_UNC_NAME() {
        return constants$754.SPLDS_UNC_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_URL() {
        return constants$755.SPLDS_URL$SEGMENT;
    }
    public static MemorySegment SPLDS_FLAGS() {
        return constants$755.SPLDS_FLAGS$SEGMENT;
    }
    public static MemorySegment SPLDS_VERSION_NUMBER() {
        return constants$755.SPLDS_VERSION_NUMBER$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINTER_NAME_ALIASES() {
        return constants$755.SPLDS_PRINTER_NAME_ALIASES$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINTER_LOCATIONS() {
        return constants$755.SPLDS_PRINTER_LOCATIONS$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINTER_MODEL() {
        return constants$755.SPLDS_PRINTER_MODEL$SEGMENT;
    }
    public static MemorySegment MS_PRINT_JOB_OUTPUT_FILE() {
        return constants$756.MS_PRINT_JOB_OUTPUT_FILE$SEGMENT;
    }
    public static MemorySegment SERVICES_ACTIVE_DATABASEW() {
        return constants$756.SERVICES_ACTIVE_DATABASEW$SEGMENT;
    }
    public static MemorySegment SERVICES_FAILED_DATABASEW() {
        return constants$756.SERVICES_FAILED_DATABASEW$SEGMENT;
    }
    public static MemorySegment SERVICES_ACTIVE_DATABASEA() {
        return constants$756.SERVICES_ACTIVE_DATABASEA$SEGMENT;
    }
    public static MemorySegment SERVICES_FAILED_DATABASEA() {
        return constants$756.SERVICES_FAILED_DATABASEA$SEGMENT;
    }
    public static short SC_GROUP_IDENTIFIERW() {
        return (short)43L;
    }
    public static int SC_GROUP_IDENTIFIERA() {
        return (int)43L;
    }
    public static MemorySegment SERVICES_ACTIVE_DATABASE() {
        return constants$756.SERVICES_ACTIVE_DATABASE$SEGMENT;
    }
    public static MemorySegment SERVICES_FAILED_DATABASE() {
        return constants$757.SERVICES_FAILED_DATABASE$SEGMENT;
    }
    public static int SC_GROUP_IDENTIFIER() {
        return (int)43L;
    }
    public static int SERVICE_NO_CHANGE() {
        return (int)4294967295L;
    }
    public static int SERVICE_STATE_ALL() {
        return (int)3L;
    }
    public static int SC_MANAGER_ALL_ACCESS() {
        return (int)983103L;
    }
    public static int SERVICE_ALL_ACCESS() {
        return (int)983551L;
    }
    public static int SERVICE_NOTIFY_STATUS_CHANGE() {
        return (int)2L;
    }
    public static int SERVICE_STOP_REASON_FLAG_MAX() {
        return (int)2147483648L;
    }
    public static int SERVICE_SID_TYPE_RESTRICTED() {
        return (int)3L;
    }
    public static MemorySegment SERVICE_TRIGGER_STARTED_ARGUMENT() {
        return constants$757.SERVICE_TRIGGER_STARTED_ARGUMENT$SEGMENT;
    }
    public static MemorySegment SC_AGGREGATE_STORAGE_KEY() {
        return constants$757.SC_AGGREGATE_STORAGE_KEY$SEGMENT;
    }
}



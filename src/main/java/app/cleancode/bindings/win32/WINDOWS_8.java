// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class WINDOWS_8 extends WINDOWS_7 {

    public static int CMSG_SIGNED() {
        return (int)2L;
    }
    public static int CMSG_ENVELOPED() {
        return (int)3L;
    }
    public static int CMSG_SIGNED_AND_ENVELOPED() {
        return (int)4L;
    }
    public static int CMSG_HASHED() {
        return (int)5L;
    }
    public static int CMSG_ENCRYPTED() {
        return (int)6L;
    }
    public static int CERT_ID_ISSUER_SERIAL_NUMBER() {
        return (int)1L;
    }
    public static int CERT_ID_KEY_IDENTIFIER() {
        return (int)2L;
    }
    public static int CERT_ID_SHA1_HASH() {
        return (int)3L;
    }
    public static int CMSG_KEY_AGREE_EPHEMERAL_KEY_CHOICE() {
        return (int)1L;
    }
    public static int CMSG_KEY_AGREE_STATIC_KEY_CHOICE() {
        return (int)2L;
    }
    public static int CMSG_MAIL_LIST_HANDLE_KEY_CHOICE() {
        return (int)1L;
    }
    public static int CMSG_KEY_TRANS_RECIPIENT() {
        return (int)1L;
    }
    public static int CMSG_KEY_AGREE_RECIPIENT() {
        return (int)2L;
    }
    public static int CMSG_MAIL_LIST_RECIPIENT() {
        return (int)3L;
    }
    public static int CMSG_RC4_NO_SALT_FLAG() {
        return (int)1073741824L;
    }
    public static int CMSG_BARE_CONTENT_FLAG() {
        return (int)1L;
    }
    public static int CMSG_LENGTH_ONLY_FLAG() {
        return (int)2L;
    }
    public static int CMSG_DETACHED_FLAG() {
        return (int)4L;
    }
    public static int CMSG_AUTHENTICATED_ATTRIBUTES_FLAG() {
        return (int)8L;
    }
    public static int CMSG_CONTENTS_OCTETS_FLAG() {
        return (int)16L;
    }
    public static int CMSG_MAX_LENGTH_FLAG() {
        return (int)32L;
    }
    public static int CMSG_CMS_ENCAPSULATED_CONTENT_FLAG() {
        return (int)64L;
    }
    public static int CMSG_SIGNED_DATA_NO_SIGN_FLAG() {
        return (int)128L;
    }
    public static int CMSG_CRYPT_RELEASE_CONTEXT_FLAG() {
        return (int)32768L;
    }
    public static int CMSG_TYPE_PARAM() {
        return (int)1L;
    }
    public static int CMSG_CONTENT_PARAM() {
        return (int)2L;
    }
    public static int CMSG_BARE_CONTENT_PARAM() {
        return (int)3L;
    }
    public static int CMSG_INNER_CONTENT_TYPE_PARAM() {
        return (int)4L;
    }
    public static int CMSG_SIGNER_COUNT_PARAM() {
        return (int)5L;
    }
    public static int CMSG_SIGNER_INFO_PARAM() {
        return (int)6L;
    }
    public static int CMSG_SIGNER_CERT_INFO_PARAM() {
        return (int)7L;
    }
    public static int CMSG_SIGNER_HASH_ALGORITHM_PARAM() {
        return (int)8L;
    }
    public static int CMSG_SIGNER_AUTH_ATTR_PARAM() {
        return (int)9L;
    }
    public static int CMSG_SIGNER_UNAUTH_ATTR_PARAM() {
        return (int)10L;
    }
    public static int CMSG_CERT_COUNT_PARAM() {
        return (int)11L;
    }
    public static int CMSG_CERT_PARAM() {
        return (int)12L;
    }
    public static int CMSG_CRL_COUNT_PARAM() {
        return (int)13L;
    }
    public static int CMSG_CRL_PARAM() {
        return (int)14L;
    }
    public static int CMSG_ENVELOPE_ALGORITHM_PARAM() {
        return (int)15L;
    }
    public static int CMSG_RECIPIENT_COUNT_PARAM() {
        return (int)17L;
    }
    public static int CMSG_RECIPIENT_INDEX_PARAM() {
        return (int)18L;
    }
    public static int CMSG_RECIPIENT_INFO_PARAM() {
        return (int)19L;
    }
    public static int CMSG_HASH_ALGORITHM_PARAM() {
        return (int)20L;
    }
    public static int CMSG_HASH_DATA_PARAM() {
        return (int)21L;
    }
    public static int CMSG_COMPUTED_HASH_PARAM() {
        return (int)22L;
    }
    public static int CMSG_ENCRYPT_PARAM() {
        return (int)26L;
    }
    public static int CMSG_ENCRYPTED_DIGEST() {
        return (int)27L;
    }
    public static int CMSG_ENCODED_SIGNER() {
        return (int)28L;
    }
    public static int CMSG_ENCODED_MESSAGE() {
        return (int)29L;
    }
    public static int CMSG_VERSION_PARAM() {
        return (int)30L;
    }
    public static int CMSG_ATTR_CERT_COUNT_PARAM() {
        return (int)31L;
    }
    public static int CMSG_ATTR_CERT_PARAM() {
        return (int)32L;
    }
    public static int CMSG_CMS_RECIPIENT_COUNT_PARAM() {
        return (int)33L;
    }
    public static int CMSG_CMS_RECIPIENT_INDEX_PARAM() {
        return (int)34L;
    }
    public static int CMSG_CMS_RECIPIENT_ENCRYPTED_KEY_INDEX_PARAM() {
        return (int)35L;
    }
    public static int CMSG_CMS_RECIPIENT_INFO_PARAM() {
        return (int)36L;
    }
    public static int CMSG_UNPROTECTED_ATTR_PARAM() {
        return (int)37L;
    }
    public static int CMSG_SIGNER_CERT_ID_PARAM() {
        return (int)38L;
    }
    public static int CMSG_CMS_SIGNER_INFO_PARAM() {
        return (int)39L;
    }
    public static int CMSG_SIGNED_DATA_V1() {
        return (int)1L;
    }
    public static int CMSG_SIGNED_DATA_V3() {
        return (int)3L;
    }
    public static int CMSG_SIGNER_INFO_V1() {
        return (int)1L;
    }
    public static int CMSG_SIGNER_INFO_V3() {
        return (int)3L;
    }
    public static int CMSG_HASHED_DATA_V0() {
        return (int)0L;
    }
    public static int CMSG_HASHED_DATA_V2() {
        return (int)2L;
    }
    public static int CMSG_ENVELOPED_DATA_V0() {
        return (int)0L;
    }
    public static int CMSG_ENVELOPED_DATA_V2() {
        return (int)2L;
    }
    public static int CMSG_KEY_AGREE_ORIGINATOR_CERT() {
        return (int)1L;
    }
    public static int CMSG_KEY_AGREE_ORIGINATOR_PUBLIC_KEY() {
        return (int)2L;
    }
    public static int CMSG_ENVELOPED_RECIPIENT_V0() {
        return (int)0L;
    }
    public static int CMSG_ENVELOPED_RECIPIENT_V2() {
        return (int)2L;
    }
    public static int CMSG_ENVELOPED_RECIPIENT_V3() {
        return (int)3L;
    }
    public static int CMSG_ENVELOPED_RECIPIENT_V4() {
        return (int)4L;
    }
    public static int CMSG_CTRL_VERIFY_SIGNATURE() {
        return (int)1L;
    }
    public static int CMSG_CTRL_DECRYPT() {
        return (int)2L;
    }
    public static int CMSG_CTRL_VERIFY_HASH() {
        return (int)5L;
    }
    public static int CMSG_CTRL_ADD_SIGNER() {
        return (int)6L;
    }
    public static int CMSG_CTRL_DEL_SIGNER() {
        return (int)7L;
    }
    public static int CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR() {
        return (int)8L;
    }
    public static int CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR() {
        return (int)9L;
    }
    public static int CMSG_CTRL_ADD_CERT() {
        return (int)10L;
    }
    public static int CMSG_CTRL_DEL_CERT() {
        return (int)11L;
    }
    public static int CMSG_CTRL_ADD_CRL() {
        return (int)12L;
    }
    public static int CMSG_CTRL_DEL_CRL() {
        return (int)13L;
    }
    public static int CMSG_CTRL_ADD_ATTR_CERT() {
        return (int)14L;
    }
    public static int CMSG_CTRL_DEL_ATTR_CERT() {
        return (int)15L;
    }
    public static int CMSG_CTRL_KEY_TRANS_DECRYPT() {
        return (int)16L;
    }
    public static int CMSG_CTRL_KEY_AGREE_DECRYPT() {
        return (int)17L;
    }
    public static int CMSG_CTRL_MAIL_LIST_DECRYPT() {
        return (int)18L;
    }
    public static int CMSG_CTRL_VERIFY_SIGNATURE_EX() {
        return (int)19L;
    }
    public static int CMSG_CTRL_ADD_CMS_SIGNER_INFO() {
        return (int)20L;
    }
    public static int CMSG_CTRL_ENABLE_STRONG_SIGNATURE() {
        return (int)21L;
    }
    public static int CMSG_VERIFY_SIGNER_PUBKEY() {
        return (int)1L;
    }
    public static int CMSG_VERIFY_SIGNER_CERT() {
        return (int)2L;
    }
    public static int CMSG_VERIFY_SIGNER_CHAIN() {
        return (int)3L;
    }
    public static int CMSG_VERIFY_SIGNER_NULL() {
        return (int)4L;
    }
    public static int CMSG_VERIFY_COUNTER_SIGN_ENABLE_STRONG_FLAG() {
        return (int)1L;
    }
    public static int CMSG_CONTENT_ENCRYPT_PAD_ENCODED_LEN_FLAG() {
        return (int)1L;
    }
    public static int CMSG_CONTENT_ENCRYPT_FREE_PARA_FLAG() {
        return (int)1L;
    }
    public static int CMSG_CONTENT_ENCRYPT_FREE_OBJID_FLAG() {
        return (int)2L;
    }
    public static int CMSG_CONTENT_ENCRYPT_RELEASE_CONTEXT_FLAG() {
        return (int)32768L;
    }
    public static int CMSG_KEY_TRANS_ENCRYPT_FREE_PARA_FLAG() {
        return (int)1L;
    }
    public static int CMSG_KEY_TRANS_ENCRYPT_FREE_OBJID_FLAG() {
        return (int)2L;
    }
    public static int CMSG_KEY_AGREE_ENCRYPT_FREE_PARA_FLAG() {
        return (int)1L;
    }
    public static int CMSG_KEY_AGREE_ENCRYPT_FREE_MATERIAL_FLAG() {
        return (int)2L;
    }
    public static int CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_ALG_FLAG() {
        return (int)4L;
    }
    public static int CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_PARA_FLAG() {
        return (int)8L;
    }
    public static int CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_BITS_FLAG() {
        return (int)16L;
    }
    public static int CMSG_KEY_AGREE_ENCRYPT_FREE_OBJID_FLAG() {
        return (int)32L;
    }
    public static int CMSG_MAIL_LIST_ENCRYPT_FREE_PARA_FLAG() {
        return (int)1L;
    }
    public static int CMSG_MAIL_LIST_ENCRYPT_FREE_OBJID_FLAG() {
        return (int)2L;
    }
    public static int CERT_KEY_PROV_HANDLE_PROP_ID() {
        return (int)1L;
    }
    public static int CERT_KEY_PROV_INFO_PROP_ID() {
        return (int)2L;
    }
    public static int CERT_SHA1_HASH_PROP_ID() {
        return (int)3L;
    }
    public static int CERT_MD5_HASH_PROP_ID() {
        return (int)4L;
    }
    public static int CERT_KEY_CONTEXT_PROP_ID() {
        return (int)5L;
    }
    public static int CERT_KEY_SPEC_PROP_ID() {
        return (int)6L;
    }
    public static int CERT_IE30_RESERVED_PROP_ID() {
        return (int)7L;
    }
    public static int CERT_PUBKEY_HASH_RESERVED_PROP_ID() {
        return (int)8L;
    }
    public static int CERT_ENHKEY_USAGE_PROP_ID() {
        return (int)9L;
    }
    public static int CERT_NEXT_UPDATE_LOCATION_PROP_ID() {
        return (int)10L;
    }
    public static int CERT_FRIENDLY_NAME_PROP_ID() {
        return (int)11L;
    }
    public static int CERT_PVK_FILE_PROP_ID() {
        return (int)12L;
    }
    public static int CERT_DESCRIPTION_PROP_ID() {
        return (int)13L;
    }
    public static int CERT_ACCESS_STATE_PROP_ID() {
        return (int)14L;
    }
    public static int CERT_SIGNATURE_HASH_PROP_ID() {
        return (int)15L;
    }
    public static int CERT_SMART_CARD_DATA_PROP_ID() {
        return (int)16L;
    }
    public static int CERT_EFS_PROP_ID() {
        return (int)17L;
    }
    public static int CERT_FORTEZZA_DATA_PROP_ID() {
        return (int)18L;
    }
    public static int CERT_ARCHIVED_PROP_ID() {
        return (int)19L;
    }
    public static int CERT_KEY_IDENTIFIER_PROP_ID() {
        return (int)20L;
    }
    public static int CERT_AUTO_ENROLL_PROP_ID() {
        return (int)21L;
    }
    public static int CERT_PUBKEY_ALG_PARA_PROP_ID() {
        return (int)22L;
    }
    public static int CERT_CROSS_CERT_DIST_POINTS_PROP_ID() {
        return (int)23L;
    }
    public static int CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID() {
        return (int)24L;
    }
    public static int CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID() {
        return (int)25L;
    }
    public static int CERT_ENROLLMENT_PROP_ID() {
        return (int)26L;
    }
    public static int CERT_DATE_STAMP_PROP_ID() {
        return (int)27L;
    }
    public static int CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID() {
        return (int)28L;
    }
    public static int CERT_SUBJECT_NAME_MD5_HASH_PROP_ID() {
        return (int)29L;
    }
    public static int CERT_EXTENDED_ERROR_INFO_PROP_ID() {
        return (int)30L;
    }
    public static int CERT_RENEWAL_PROP_ID() {
        return (int)64L;
    }
    public static int CERT_ARCHIVED_KEY_HASH_PROP_ID() {
        return (int)65L;
    }
    public static int CERT_AUTO_ENROLL_RETRY_PROP_ID() {
        return (int)66L;
    }
    public static int CERT_AIA_URL_RETRIEVED_PROP_ID() {
        return (int)67L;
    }
    public static int CERT_AUTHORITY_INFO_ACCESS_PROP_ID() {
        return (int)68L;
    }
    public static int CERT_BACKED_UP_PROP_ID() {
        return (int)69L;
    }
    public static int CERT_OCSP_RESPONSE_PROP_ID() {
        return (int)70L;
    }
    public static int CERT_REQUEST_ORIGINATOR_PROP_ID() {
        return (int)71L;
    }
    public static int CERT_SOURCE_LOCATION_PROP_ID() {
        return (int)72L;
    }
    public static int CERT_SOURCE_URL_PROP_ID() {
        return (int)73L;
    }
    public static int CERT_NEW_KEY_PROP_ID() {
        return (int)74L;
    }
    public static int CERT_OCSP_CACHE_PREFIX_PROP_ID() {
        return (int)75L;
    }
    public static int CERT_SMART_CARD_ROOT_INFO_PROP_ID() {
        return (int)76L;
    }
    public static int CERT_NO_AUTO_EXPIRE_CHECK_PROP_ID() {
        return (int)77L;
    }
    public static int CERT_NCRYPT_KEY_HANDLE_PROP_ID() {
        return (int)78L;
    }
    public static int CERT_HCRYPTPROV_OR_NCRYPT_KEY_HANDLE_PROP_ID() {
        return (int)79L;
    }
    public static int CERT_SUBJECT_INFO_ACCESS_PROP_ID() {
        return (int)80L;
    }
    public static int CERT_CA_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID() {
        return (int)81L;
    }
    public static int CERT_CA_DISABLE_CRL_PROP_ID() {
        return (int)82L;
    }
    public static int CERT_ROOT_PROGRAM_CERT_POLICIES_PROP_ID() {
        return (int)83L;
    }
    public static int CERT_ROOT_PROGRAM_NAME_CONSTRAINTS_PROP_ID() {
        return (int)84L;
    }
    public static int CERT_SUBJECT_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID() {
        return (int)85L;
    }
    public static int CERT_SUBJECT_DISABLE_CRL_PROP_ID() {
        return (int)86L;
    }
    public static int CERT_CEP_PROP_ID() {
        return (int)87L;
    }
    public static int CERT_SIGN_HASH_CNG_ALG_PROP_ID() {
        return (int)89L;
    }
    public static int CERT_SCARD_PIN_ID_PROP_ID() {
        return (int)90L;
    }
    public static int CERT_SCARD_PIN_INFO_PROP_ID() {
        return (int)91L;
    }
    public static int CERT_SUBJECT_PUB_KEY_BIT_LENGTH_PROP_ID() {
        return (int)92L;
    }
    public static int CERT_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID() {
        return (int)93L;
    }
    public static int CERT_ISSUER_PUB_KEY_BIT_LENGTH_PROP_ID() {
        return (int)94L;
    }
    public static int CERT_ISSUER_CHAIN_SIGN_HASH_CNG_ALG_PROP_ID() {
        return (int)95L;
    }
    public static int CERT_ISSUER_CHAIN_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID() {
        return (int)96L;
    }
    public static int CERT_NO_EXPIRE_NOTIFICATION_PROP_ID() {
        return (int)97L;
    }
    public static int CERT_AUTH_ROOT_SHA256_HASH_PROP_ID() {
        return (int)98L;
    }
    public static int CERT_NCRYPT_KEY_HANDLE_TRANSFER_PROP_ID() {
        return (int)99L;
    }
    public static int CERT_HCRYPTPROV_TRANSFER_PROP_ID() {
        return (int)100L;
    }
    public static int CERT_SMART_CARD_READER_PROP_ID() {
        return (int)101L;
    }
    public static int CERT_SEND_AS_TRUSTED_ISSUER_PROP_ID() {
        return (int)102L;
    }
    public static int CERT_KEY_REPAIR_ATTEMPTED_PROP_ID() {
        return (int)103L;
    }
    public static int CERT_DISALLOWED_FILETIME_PROP_ID() {
        return (int)104L;
    }
    public static int CERT_ROOT_PROGRAM_CHAIN_POLICIES_PROP_ID() {
        return (int)105L;
    }
    public static int CERT_SMART_CARD_READER_NON_REMOVABLE_PROP_ID() {
        return (int)106L;
    }
    public static int CERT_SHA256_HASH_PROP_ID() {
        return (int)107L;
    }
    public static int CERT_SCEP_SERVER_CERTS_PROP_ID() {
        return (int)108L;
    }
    public static int CERT_SCEP_RA_SIGNATURE_CERT_PROP_ID() {
        return (int)109L;
    }
    public static int CERT_SCEP_RA_ENCRYPTION_CERT_PROP_ID() {
        return (int)110L;
    }
    public static int CERT_SCEP_CA_CERT_PROP_ID() {
        return (int)111L;
    }
    public static int CERT_SCEP_SIGNER_CERT_PROP_ID() {
        return (int)112L;
    }
    public static int CERT_SCEP_NONCE_PROP_ID() {
        return (int)113L;
    }
    public static int CERT_SCEP_ENCRYPT_HASH_CNG_ALG_PROP_ID() {
        return (int)114L;
    }
    public static int CERT_SCEP_FLAGS_PROP_ID() {
        return (int)115L;
    }
    public static int CERT_SCEP_GUID_PROP_ID() {
        return (int)116L;
    }
    public static int CERT_SERIALIZABLE_KEY_CONTEXT_PROP_ID() {
        return (int)117L;
    }
    public static int CERT_ISOLATED_KEY_PROP_ID() {
        return (int)118L;
    }
    public static int CERT_SERIAL_CHAIN_PROP_ID() {
        return (int)119L;
    }
    public static int CERT_KEY_CLASSIFICATION_PROP_ID() {
        return (int)120L;
    }
    public static int CERT_OCSP_MUST_STAPLE_PROP_ID() {
        return (int)121L;
    }
    public static int CERT_DISALLOWED_ENHKEY_USAGE_PROP_ID() {
        return (int)122L;
    }
    public static int CERT_NONCOMPLIANT_ROOT_URL_PROP_ID() {
        return (int)123L;
    }
    public static int CERT_PIN_SHA256_HASH_PROP_ID() {
        return (int)124L;
    }
    public static int CERT_CLR_DELETE_KEY_PROP_ID() {
        return (int)125L;
    }
    public static int CERT_NOT_BEFORE_FILETIME_PROP_ID() {
        return (int)126L;
    }
    public static int CERT_NOT_BEFORE_ENHKEY_USAGE_PROP_ID() {
        return (int)127L;
    }
    public static int CERT_FIRST_RESERVED_PROP_ID() {
        return (int)128L;
    }
    public static int CERT_LAST_RESERVED_PROP_ID() {
        return (int)32767L;
    }
    public static int CERT_FIRST_USER_PROP_ID() {
        return (int)32768L;
    }
    public static int CERT_LAST_USER_PROP_ID() {
        return (int)65535L;
    }
    public static int CERT_ACCESS_STATE_WRITE_PERSIST_FLAG() {
        return (int)1L;
    }
    public static int CERT_ACCESS_STATE_SYSTEM_STORE_FLAG() {
        return (int)2L;
    }
    public static int CERT_ACCESS_STATE_LM_SYSTEM_STORE_FLAG() {
        return (int)4L;
    }
    public static int CERT_ACCESS_STATE_GP_SYSTEM_STORE_FLAG() {
        return (int)8L;
    }
    public static int CERT_ACCESS_STATE_SHARED_USER_FLAG() {
        return (int)16L;
    }
    public static int CERT_SET_KEY_PROV_HANDLE_PROP_ID() {
        return (int)1L;
    }
    public static int CERT_SET_KEY_CONTEXT_PROP_ID() {
        return (int)1L;
    }
    public static int CERT_STORE_SIGNATURE_FLAG() {
        return (int)1L;
    }
    public static int CERT_STORE_TIME_VALIDITY_FLAG() {
        return (int)2L;
    }
    public static int CERT_STORE_REVOCATION_FLAG() {
        return (int)4L;
    }
    public static int CERT_STORE_NO_CRL_FLAG() {
        return (int)65536L;
    }
    public static int CERT_STORE_NO_ISSUER_FLAG() {
        return (int)131072L;
    }
    public static int CERT_STORE_BASE_CRL_FLAG() {
        return (int)256L;
    }
    public static int CERT_STORE_DELTA_CRL_FLAG() {
        return (int)512L;
    }
    public static int CERT_STORE_NO_CRYPT_RELEASE_FLAG() {
        return (int)1L;
    }
    public static int CERT_STORE_SET_LOCALIZED_NAME_FLAG() {
        return (int)2L;
    }
    public static int CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG() {
        return (int)4L;
    }
    public static int CERT_STORE_DELETE_FLAG() {
        return (int)16L;
    }
    public static int CERT_STORE_UNSAFE_PHYSICAL_FLAG() {
        return (int)32L;
    }
    public static int CERT_STORE_SHARE_STORE_FLAG() {
        return (int)64L;
    }
    public static int CERT_STORE_SHARE_CONTEXT_FLAG() {
        return (int)128L;
    }
    public static int CERT_STORE_MANIFOLD_FLAG() {
        return (int)256L;
    }
    public static int CERT_STORE_ENUM_ARCHIVED_FLAG() {
        return (int)512L;
    }
    public static int CERT_STORE_UPDATE_KEYID_FLAG() {
        return (int)1024L;
    }
    public static int CERT_STORE_BACKUP_RESTORE_FLAG() {
        return (int)2048L;
    }
    public static int CERT_STORE_READONLY_FLAG() {
        return (int)32768L;
    }
    public static int CERT_STORE_OPEN_EXISTING_FLAG() {
        return (int)16384L;
    }
    public static int CERT_STORE_CREATE_NEW_FLAG() {
        return (int)8192L;
    }
    public static int CERT_STORE_MAXIMUM_ALLOWED_FLAG() {
        return (int)4096L;
    }
    public static int CERT_SYSTEM_STORE_UNPROTECTED_FLAG() {
        return (int)1073741824L;
    }
    public static int CERT_SYSTEM_STORE_DEFER_READ_FLAG() {
        return (int)536870912L;
    }
    public static int CERT_SYSTEM_STORE_LOCATION_MASK() {
        return (int)16711680L;
    }
    public static int CERT_SYSTEM_STORE_LOCATION_SHIFT() {
        return (int)16L;
    }
    public static int CERT_SYSTEM_STORE_CURRENT_USER_ID() {
        return (int)1L;
    }
    public static int CERT_SYSTEM_STORE_LOCAL_MACHINE_ID() {
        return (int)2L;
    }
    public static int CERT_SYSTEM_STORE_CURRENT_SERVICE_ID() {
        return (int)4L;
    }
    public static int CERT_SYSTEM_STORE_SERVICES_ID() {
        return (int)5L;
    }
    public static int CERT_SYSTEM_STORE_USERS_ID() {
        return (int)6L;
    }
    public static int CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY_ID() {
        return (int)7L;
    }
    public static int CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY_ID() {
        return (int)8L;
    }
    public static int CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE_ID() {
        return (int)9L;
    }
    public static int CERT_SYSTEM_STORE_LOCAL_MACHINE_WCOS_ID() {
        return (int)10L;
    }
    public static int CERT_PROT_ROOT_DISABLE_CURRENT_USER_FLAG() {
        return (int)1L;
    }
    public static int CERT_PROT_ROOT_INHIBIT_ADD_AT_INIT_FLAG() {
        return (int)2L;
    }
    public static int CERT_PROT_ROOT_INHIBIT_PURGE_LM_FLAG() {
        return (int)4L;
    }
    public static int CERT_PROT_ROOT_DISABLE_LM_AUTH_FLAG() {
        return (int)8L;
    }
    public static int CERT_PROT_ROOT_ONLY_LM_GPT_FLAG() {
        return (int)8L;
    }
    public static int CERT_PROT_ROOT_DISABLE_NT_AUTH_REQUIRED_FLAG() {
        return (int)16L;
    }
    public static int CERT_PROT_ROOT_DISABLE_NOT_DEFINED_NAME_CONSTRAINT_FLAG() {
        return (int)32L;
    }
    public static int CERT_PROT_ROOT_DISABLE_PEER_TRUST() {
        return (int)65536L;
    }
    public static int CERT_TRUST_PUB_ALLOW_TRUST_MASK() {
        return (int)3L;
    }
    public static int CERT_TRUST_PUB_ALLOW_END_USER_TRUST() {
        return (int)0L;
    }
    public static int CERT_TRUST_PUB_ALLOW_MACHINE_ADMIN_TRUST() {
        return (int)1L;
    }
    public static int CERT_TRUST_PUB_ALLOW_ENTERPRISE_ADMIN_TRUST() {
        return (int)2L;
    }
    public static int CERT_TRUST_PUB_CHECK_PUBLISHER_REV_FLAG() {
        return (int)256L;
    }
    public static int CERT_TRUST_PUB_CHECK_TIMESTAMP_REV_FLAG() {
        return (int)512L;
    }
    public static int CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_UNTRUSTED_ROOT_LOGGING_FLAG() {
        return (int)1L;
    }
    public static int CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_PARTIAL_CHAIN_LOGGING_FLAG() {
        return (int)2L;
    }
    public static int CERT_AUTO_UPDATE_DISABLE_RANDOM_QUERY_STRING_FLAG() {
        return (int)4L;
    }
    public static int CERT_REGISTRY_STORE_REMOTE_FLAG() {
        return (int)65536L;
    }
    public static int CERT_REGISTRY_STORE_SERIALIZED_FLAG() {
        return (int)131072L;
    }
    public static int CERT_REGISTRY_STORE_LM_GPT_FLAG() {
        return (int)16777216L;
    }
    public static int CERT_REGISTRY_STORE_ROAMING_FLAG() {
        return (int)262144L;
    }
    public static int CERT_REGISTRY_STORE_MY_IE_DIRTY_FLAG() {
        return (int)524288L;
    }
    public static int CERT_REGISTRY_STORE_EXTERNAL_FLAG() {
        return (int)1048576L;
    }
    public static int CERT_FILE_STORE_COMMIT_ENABLE_FLAG() {
        return (int)65536L;
    }
    public static int CERT_LDAP_STORE_SIGN_FLAG() {
        return (int)65536L;
    }
    public static int CERT_LDAP_STORE_AREC_EXCLUSIVE_FLAG() {
        return (int)131072L;
    }
    public static int CERT_LDAP_STORE_OPENED_FLAG() {
        return (int)262144L;
    }
    public static int CERT_LDAP_STORE_UNBIND_FLAG() {
        return (int)524288L;
    }
    public static int CERT_STORE_PROV_EXTERNAL_FLAG() {
        return (int)1L;
    }
    public static int CERT_STORE_PROV_DELETED_FLAG() {
        return (int)2L;
    }
    public static int CERT_STORE_PROV_NO_PERSIST_FLAG() {
        return (int)4L;
    }
    public static int CERT_STORE_PROV_SYSTEM_STORE_FLAG() {
        return (int)8L;
    }
    public static int CERT_STORE_PROV_LM_SYSTEM_STORE_FLAG() {
        return (int)16L;
    }
    public static int CERT_STORE_PROV_GP_SYSTEM_STORE_FLAG() {
        return (int)32L;
    }
    public static int CERT_STORE_PROV_SHARED_USER_FLAG() {
        return (int)64L;
    }
    public static int CERT_STORE_PROV_CLOSE_FUNC() {
        return (int)0L;
    }
    public static int CERT_STORE_PROV_READ_CERT_FUNC() {
        return (int)1L;
    }
    public static int CERT_STORE_PROV_WRITE_CERT_FUNC() {
        return (int)2L;
    }
    public static int CERT_STORE_PROV_DELETE_CERT_FUNC() {
        return (int)3L;
    }
    public static int CERT_STORE_PROV_SET_CERT_PROPERTY_FUNC() {
        return (int)4L;
    }
    public static int CERT_STORE_PROV_READ_CRL_FUNC() {
        return (int)5L;
    }
    public static int CERT_STORE_PROV_WRITE_CRL_FUNC() {
        return (int)6L;
    }
    public static int CERT_STORE_PROV_DELETE_CRL_FUNC() {
        return (int)7L;
    }
    public static int CERT_STORE_PROV_SET_CRL_PROPERTY_FUNC() {
        return (int)8L;
    }
    public static int CERT_STORE_PROV_READ_CTL_FUNC() {
        return (int)9L;
    }
    public static int CERT_STORE_PROV_WRITE_CTL_FUNC() {
        return (int)10L;
    }
    public static int CERT_STORE_PROV_DELETE_CTL_FUNC() {
        return (int)11L;
    }
    public static int CERT_STORE_PROV_SET_CTL_PROPERTY_FUNC() {
        return (int)12L;
    }
    public static int CERT_STORE_PROV_CONTROL_FUNC() {
        return (int)13L;
    }
    public static int CERT_STORE_PROV_FIND_CERT_FUNC() {
        return (int)14L;
    }
    public static int CERT_STORE_PROV_FREE_FIND_CERT_FUNC() {
        return (int)15L;
    }
    public static int CERT_STORE_PROV_GET_CERT_PROPERTY_FUNC() {
        return (int)16L;
    }
    public static int CERT_STORE_PROV_FIND_CRL_FUNC() {
        return (int)17L;
    }
    public static int CERT_STORE_PROV_FREE_FIND_CRL_FUNC() {
        return (int)18L;
    }
    public static int CERT_STORE_PROV_GET_CRL_PROPERTY_FUNC() {
        return (int)19L;
    }
    public static int CERT_STORE_PROV_FIND_CTL_FUNC() {
        return (int)20L;
    }
    public static int CERT_STORE_PROV_FREE_FIND_CTL_FUNC() {
        return (int)21L;
    }
    public static int CERT_STORE_PROV_GET_CTL_PROPERTY_FUNC() {
        return (int)22L;
    }
    public static int CERT_STORE_PROV_WRITE_ADD_FLAG() {
        return (int)1L;
    }
    public static int CERT_STORE_SAVE_AS_STORE() {
        return (int)1L;
    }
    public static int CERT_STORE_SAVE_AS_PKCS7() {
        return (int)2L;
    }
    public static int CERT_STORE_SAVE_AS_PKCS12() {
        return (int)3L;
    }
    public static int CERT_STORE_SAVE_TO_FILE() {
        return (int)1L;
    }
    public static int CERT_STORE_SAVE_TO_MEMORY() {
        return (int)2L;
    }
    public static int CERT_STORE_SAVE_TO_FILENAME_A() {
        return (int)3L;
    }
    public static int CERT_STORE_SAVE_TO_FILENAME_W() {
        return (int)4L;
    }
    public static int CERT_CLOSE_STORE_FORCE_FLAG() {
        return (int)1L;
    }
    public static int CERT_CLOSE_STORE_CHECK_FLAG() {
        return (int)2L;
    }
    public static int CERT_COMPARE_MASK() {
        return (int)65535L;
    }
    public static int CERT_COMPARE_SHIFT() {
        return (int)16L;
    }
    public static int CERT_COMPARE_ANY() {
        return (int)0L;
    }
    public static int CERT_COMPARE_SHA1_HASH() {
        return (int)1L;
    }
    public static int CERT_COMPARE_NAME() {
        return (int)2L;
    }
    public static int CERT_COMPARE_ATTR() {
        return (int)3L;
    }
    public static int CERT_COMPARE_MD5_HASH() {
        return (int)4L;
    }
    public static int CERT_COMPARE_PROPERTY() {
        return (int)5L;
    }
    public static int CERT_COMPARE_PUBLIC_KEY() {
        return (int)6L;
    }
    public static int CERT_COMPARE_NAME_STR_A() {
        return (int)7L;
    }
    public static int CERT_COMPARE_NAME_STR_W() {
        return (int)8L;
    }
    public static int CERT_COMPARE_KEY_SPEC() {
        return (int)9L;
    }
    public static int CERT_COMPARE_ENHKEY_USAGE() {
        return (int)10L;
    }
    public static int CERT_COMPARE_SUBJECT_CERT() {
        return (int)11L;
    }
    public static int CERT_COMPARE_ISSUER_OF() {
        return (int)12L;
    }
    public static int CERT_COMPARE_EXISTING() {
        return (int)13L;
    }
    public static int CERT_COMPARE_SIGNATURE_HASH() {
        return (int)14L;
    }
    public static int CERT_COMPARE_KEY_IDENTIFIER() {
        return (int)15L;
    }
    public static int CERT_COMPARE_CERT_ID() {
        return (int)16L;
    }
    public static int CERT_COMPARE_CROSS_CERT_DIST_POINTS() {
        return (int)17L;
    }
    public static int CERT_COMPARE_PUBKEY_MD5_HASH() {
        return (int)18L;
    }
    public static int CERT_COMPARE_SUBJECT_INFO_ACCESS() {
        return (int)19L;
    }
    public static int CERT_COMPARE_HASH_STR() {
        return (int)20L;
    }
    public static int CERT_COMPARE_HAS_PRIVATE_KEY() {
        return (int)21L;
    }
    public static int CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG() {
        return (int)1L;
    }
    public static int CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG() {
        return (int)2L;
    }
    public static int CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG() {
        return (int)4L;
    }
    public static int CERT_FIND_NO_ENHKEY_USAGE_FLAG() {
        return (int)8L;
    }
    public static int CERT_FIND_OR_ENHKEY_USAGE_FLAG() {
        return (int)16L;
    }
    public static int CERT_FIND_VALID_ENHKEY_USAGE_FLAG() {
        return (int)32L;
    }
    public static int CERT_SET_PROPERTY_INHIBIT_PERSIST_FLAG() {
        return (int)1073741824L;
    }
    public static int CTL_ENTRY_FROM_PROP_CHAIN_FLAG() {
        return (int)1L;
    }
    public static int CRL_FIND_ANY() {
        return (int)0L;
    }
    public static int CRL_FIND_ISSUED_BY() {
        return (int)1L;
    }
    public static int CRL_FIND_EXISTING() {
        return (int)2L;
    }
    public static int CRL_FIND_ISSUED_FOR() {
        return (int)3L;
    }
    public static int CRL_FIND_ISSUED_BY_AKI_FLAG() {
        return (int)1L;
    }
    public static int CRL_FIND_ISSUED_BY_SIGNATURE_FLAG() {
        return (int)2L;
    }
    public static int CRL_FIND_ISSUED_BY_DELTA_FLAG() {
        return (int)4L;
    }
    public static int CRL_FIND_ISSUED_BY_BASE_FLAG() {
        return (int)8L;
    }
    public static int CRL_FIND_ISSUED_FOR_SET_STRONG_PROPERTIES_FLAG() {
        return (int)16L;
    }
    public static int CERT_STORE_ADD_NEW() {
        return (int)1L;
    }
    public static int CERT_STORE_ADD_USE_EXISTING() {
        return (int)2L;
    }
    public static int CERT_STORE_ADD_REPLACE_EXISTING() {
        return (int)3L;
    }
    public static int CERT_STORE_ADD_ALWAYS() {
        return (int)4L;
    }
    public static int CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES() {
        return (int)5L;
    }
    public static int CERT_STORE_ADD_NEWER() {
        return (int)6L;
    }
    public static int CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES() {
        return (int)7L;
    }
    public static int CERT_STORE_CERTIFICATE_CONTEXT() {
        return (int)1L;
    }
    public static int CERT_STORE_CRL_CONTEXT() {
        return (int)2L;
    }
    public static int CERT_STORE_CTL_CONTEXT() {
        return (int)3L;
    }
    public static int CTL_ANY_SUBJECT_TYPE() {
        return (int)1L;
    }
    public static int CTL_CERT_SUBJECT_TYPE() {
        return (int)2L;
    }
    public static int CTL_FIND_ANY() {
        return (int)0L;
    }
    public static int CTL_FIND_SHA1_HASH() {
        return (int)1L;
    }
    public static int CTL_FIND_MD5_HASH() {
        return (int)2L;
    }
    public static int CTL_FIND_USAGE() {
        return (int)3L;
    }
    public static int CTL_FIND_SUBJECT() {
        return (int)4L;
    }
    public static int CTL_FIND_EXISTING() {
        return (int)5L;
    }
    public static int CTL_FIND_SAME_USAGE_FLAG() {
        return (int)1L;
    }
    public static int CERT_STORE_CTRL_RESYNC() {
        return (int)1L;
    }
    public static int CERT_STORE_CTRL_NOTIFY_CHANGE() {
        return (int)2L;
    }
    public static int CERT_STORE_CTRL_COMMIT() {
        return (int)3L;
    }
    public static int CERT_STORE_CTRL_AUTO_RESYNC() {
        return (int)4L;
    }
    public static int CERT_STORE_CTRL_CANCEL_NOTIFY() {
        return (int)5L;
    }
    public static int CERT_STORE_CTRL_INHIBIT_DUPLICATE_HANDLE_FLAG() {
        return (int)1L;
    }
    public static int CERT_STORE_CTRL_COMMIT_FORCE_FLAG() {
        return (int)1L;
    }
    public static int CERT_STORE_CTRL_COMMIT_CLEAR_FLAG() {
        return (int)2L;
    }
    public static int CERT_STORE_LOCALIZED_NAME_PROP_ID() {
        return (int)4096L;
    }
    public static int CERT_CREATE_CONTEXT_NOCOPY_FLAG() {
        return (int)1L;
    }
    public static int CERT_CREATE_CONTEXT_SORTED_FLAG() {
        return (int)2L;
    }
    public static int CERT_CREATE_CONTEXT_NO_HCRYPTMSG_FLAG() {
        return (int)4L;
    }
    public static int CERT_CREATE_CONTEXT_NO_ENTRY_FLAG() {
        return (int)8L;
    }
    public static int CERT_PHYSICAL_STORE_ADD_ENABLE_FLAG() {
        return (int)1L;
    }
    public static int CERT_PHYSICAL_STORE_OPEN_DISABLE_FLAG() {
        return (int)2L;
    }
    public static int CERT_PHYSICAL_STORE_REMOTE_OPEN_DISABLE_FLAG() {
        return (int)4L;
    }
    public static int CERT_PHYSICAL_STORE_INSERT_COMPUTER_NAME_ENABLE_FLAG() {
        return (int)8L;
    }
    public static int CERT_PHYSICAL_STORE_PREDEFINED_ENUM_FLAG() {
        return (int)1L;
    }
    public static int CMSG_TRUSTED_SIGNER_FLAG() {
        return (int)1L;
    }
    public static int CMSG_SIGNER_ONLY_FLAG() {
        return (int)2L;
    }
    public static int CMSG_USE_SIGNER_INDEX_FLAG() {
        return (int)4L;
    }
    public static int CMSG_CMS_ENCAPSULATED_CTL_FLAG() {
        return (int)32768L;
    }
    public static int CMSG_ENCODE_SORTED_CTL_FLAG() {
        return (int)1L;
    }
    public static int CMSG_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG() {
        return (int)2L;
    }
    public static int CERT_VERIFY_INHIBIT_CTL_UPDATE_FLAG() {
        return (int)1L;
    }
    public static int CERT_VERIFY_TRUSTED_SIGNERS_FLAG() {
        return (int)2L;
    }
    public static int CERT_VERIFY_NO_TIME_CHECK_FLAG() {
        return (int)4L;
    }
    public static int CERT_VERIFY_ALLOW_MORE_USAGE_FLAG() {
        return (int)8L;
    }
    public static int CERT_VERIFY_UPDATED_CTL_FLAG() {
        return (int)1L;
    }
    public static int CERT_CONTEXT_REVOCATION_TYPE() {
        return (int)1L;
    }
    public static int CERT_VERIFY_REV_CHAIN_FLAG() {
        return (int)1L;
    }
    public static int CERT_VERIFY_CACHE_ONLY_BASED_REVOCATION() {
        return (int)2L;
    }
    public static int CERT_VERIFY_REV_ACCUMULATIVE_TIMEOUT_FLAG() {
        return (int)4L;
    }
    public static int CERT_VERIFY_REV_SERVER_OCSP_FLAG() {
        return (int)8L;
    }
    public static int CERT_VERIFY_REV_NO_OCSP_FAILOVER_TO_CRL_FLAG() {
        return (int)16L;
    }
    public static int CERT_VERIFY_REV_SERVER_OCSP_WIRE_ONLY_FLAG() {
        return (int)32L;
    }
    public static int CERT_UNICODE_IS_RDN_ATTRS_FLAG() {
        return (int)1L;
    }
    public static int CERT_CASE_INSENSITIVE_IS_RDN_ATTRS_FLAG() {
        return (int)2L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_SUBJECT_BLOB() {
        return (int)1L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_SUBJECT_CERT() {
        return (int)2L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_SUBJECT_CRL() {
        return (int)3L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_SUBJECT_OCSP_BASIC_SIGNED_RESPONSE() {
        return (int)4L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_ISSUER_PUBKEY() {
        return (int)1L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_ISSUER_CERT() {
        return (int)2L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_ISSUER_CHAIN() {
        return (int)3L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_ISSUER_NULL() {
        return (int)4L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_DISABLE_MD2_MD4_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_SET_STRONG_PROPERTIES_FLAG() {
        return (int)2L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_RETURN_STRONG_PROPERTIES_FLAG() {
        return (int)4L;
    }
    public static int CRYPT_VERIFY_CERT_SIGN_CHECK_WEAK_HASH_FLAG() {
        return (int)8L;
    }
    public static int CRYPT_DEFAULT_CONTEXT_AUTO_RELEASE_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_DEFAULT_CONTEXT_PROCESS_FLAG() {
        return (int)2L;
    }
    public static int CRYPT_DEFAULT_CONTEXT_CERT_SIGN_OID() {
        return (int)1L;
    }
    public static int CRYPT_DEFAULT_CONTEXT_MULTI_CERT_SIGN_OID() {
        return (int)2L;
    }
    public static int CRYPT_ACQUIRE_CACHE_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_ACQUIRE_USE_PROV_INFO_FLAG() {
        return (int)2L;
    }
    public static int CRYPT_ACQUIRE_COMPARE_KEY_FLAG() {
        return (int)4L;
    }
    public static int CRYPT_ACQUIRE_NO_HEALING() {
        return (int)8L;
    }
    public static int CRYPT_ACQUIRE_SILENT_FLAG() {
        return (int)64L;
    }
    public static int CRYPT_ACQUIRE_WINDOW_HANDLE_FLAG() {
        return (int)128L;
    }
    public static int CRYPT_ACQUIRE_NCRYPT_KEY_FLAGS_MASK() {
        return (int)458752L;
    }
    public static int CRYPT_ACQUIRE_ALLOW_NCRYPT_KEY_FLAG() {
        return (int)65536L;
    }
    public static int CRYPT_ACQUIRE_PREFER_NCRYPT_KEY_FLAG() {
        return (int)131072L;
    }
    public static int CRYPT_ACQUIRE_ONLY_NCRYPT_KEY_FLAG() {
        return (int)262144L;
    }
    public static int CRYPT_FIND_USER_KEYSET_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_FIND_MACHINE_KEYSET_FLAG() {
        return (int)2L;
    }
    public static int CRYPT_FIND_SILENT_KEYSET_FLAG() {
        return (int)64L;
    }
    public static int CERT_SIMPLE_NAME_STR() {
        return (int)1L;
    }
    public static int CERT_OID_NAME_STR() {
        return (int)2L;
    }
    public static int CERT_X500_NAME_STR() {
        return (int)3L;
    }
    public static int CERT_XML_NAME_STR() {
        return (int)4L;
    }
    public static int CERT_NAME_STR_SEMICOLON_FLAG() {
        return (int)1073741824L;
    }
    public static int CERT_NAME_STR_NO_PLUS_FLAG() {
        return (int)536870912L;
    }
    public static int CERT_NAME_STR_NO_QUOTING_FLAG() {
        return (int)268435456L;
    }
    public static int CERT_NAME_STR_CRLF_FLAG() {
        return (int)134217728L;
    }
    public static int CERT_NAME_STR_COMMA_FLAG() {
        return (int)67108864L;
    }
    public static int CERT_NAME_STR_REVERSE_FLAG() {
        return (int)33554432L;
    }
    public static int CERT_NAME_STR_FORWARD_FLAG() {
        return (int)16777216L;
    }
    public static int CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG() {
        return (int)65536L;
    }
    public static int CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG() {
        return (int)131072L;
    }
    public static int CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG() {
        return (int)262144L;
    }
    public static int CERT_NAME_STR_FORCE_UTF8_DIR_STR_FLAG() {
        return (int)524288L;
    }
    public static int CERT_NAME_STR_DISABLE_UTF8_DIR_STR_FLAG() {
        return (int)1048576L;
    }
    public static int CERT_NAME_STR_ENABLE_PUNYCODE_FLAG() {
        return (int)2097152L;
    }
    public static int CERT_NAME_EMAIL_TYPE() {
        return (int)1L;
    }
    public static int CERT_NAME_RDN_TYPE() {
        return (int)2L;
    }
    public static int CERT_NAME_ATTR_TYPE() {
        return (int)3L;
    }
    public static int CERT_NAME_SIMPLE_DISPLAY_TYPE() {
        return (int)4L;
    }
    public static int CERT_NAME_FRIENDLY_DISPLAY_TYPE() {
        return (int)5L;
    }
    public static int CERT_NAME_DNS_TYPE() {
        return (int)6L;
    }
    public static int CERT_NAME_URL_TYPE() {
        return (int)7L;
    }
    public static int CERT_NAME_UPN_TYPE() {
        return (int)8L;
    }
    public static int CERT_NAME_ISSUER_FLAG() {
        return (int)1L;
    }
    public static int CERT_NAME_DISABLE_IE4_UTF8_FLAG() {
        return (int)65536L;
    }
    public static int CERT_NAME_SEARCH_ALL_NAMES_FLAG() {
        return (int)2L;
    }
    public static int CRYPT_MESSAGE_BARE_CONTENT_OUT_FLAG() {
        return (int)1L;
    }
    public static int CRYPT_MESSAGE_ENCAPSULATED_CONTENT_OUT_FLAG() {
        return (int)2L;
    }
    public static int CRYPT_MESSAGE_KEYID_SIGNER_FLAG() {
        return (int)4L;
    }
    public static int CRYPT_MESSAGE_SILENT_KEYSET_FLAG() {
        return (int)64L;
    }
    public static int CRYPT_MESSAGE_KEYID_RECIPIENT_FLAG() {
        return (int)4L;
    }
    public static int CERT_QUERY_OBJECT_FILE() {
        return (int)1L;
    }
    public static int CERT_QUERY_OBJECT_BLOB() {
        return (int)2L;
    }
    public static int CERT_QUERY_CONTENT_CERT() {
        return (int)1L;
    }
    public static int CERT_QUERY_CONTENT_CTL() {
        return (int)2L;
    }
    public static int CERT_QUERY_CONTENT_CRL() {
        return (int)3L;
    }
    public static int CERT_QUERY_CONTENT_SERIALIZED_STORE() {
        return (int)4L;
    }
    public static int CERT_QUERY_CONTENT_SERIALIZED_CERT() {
        return (int)5L;
    }
    public static int CERT_QUERY_CONTENT_SERIALIZED_CTL() {
        return (int)6L;
    }
    public static int CERT_QUERY_CONTENT_SERIALIZED_CRL() {
        return (int)7L;
    }
    public static int CERT_QUERY_CONTENT_PKCS7_SIGNED() {
        return (int)8L;
    }
    public static int CERT_QUERY_CONTENT_PKCS7_UNSIGNED() {
        return (int)9L;
    }
    public static int CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED() {
        return (int)10L;
    }
    public static int CERT_QUERY_CONTENT_PKCS10() {
        return (int)11L;
    }
    public static int CERT_QUERY_CONTENT_PFX() {
        return (int)12L;
    }
    public static int CERT_QUERY_CONTENT_CERT_PAIR() {
        return (int)13L;
    }
    public static int CERT_QUERY_CONTENT_PFX_AND_LOAD() {
        return (int)14L;
    }
    public static int CERT_QUERY_FORMAT_BINARY() {
        return (int)1L;
    }
    public static int CERT_QUERY_FORMAT_BASE64_ENCODED() {
        return (int)2L;
    }
    public static int CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED() {
        return (int)3L;
    }
    public static int CRYPT_RETRIEVE_MULTIPLE_OBJECTS() {
        return (int)1L;
    }
    public static int CRYPT_CACHE_ONLY_RETRIEVAL() {
        return (int)2L;
    }
    public static int CRYPT_WIRE_ONLY_RETRIEVAL() {
        return (int)4L;
    }
    public static int CRYPT_DONT_CACHE_RESULT() {
        return (int)8L;
    }
    public static int CRYPT_ASYNC_RETRIEVAL() {
        return (int)16L;
    }
    public static int CRYPT_STICKY_CACHE_RETRIEVAL() {
        return (int)4096L;
    }
    public static int CRYPT_LDAP_SCOPE_BASE_ONLY_RETRIEVAL() {
        return (int)8192L;
    }
    public static int CRYPT_OFFLINE_CHECK_RETRIEVAL() {
        return (int)16384L;
    }
    public static int CRYPT_LDAP_INSERT_ENTRY_ATTRIBUTE() {
        return (int)32768L;
    }
    public static int CRYPT_LDAP_SIGN_RETRIEVAL() {
        return (int)65536L;
    }
    public static int CRYPT_NO_AUTH_RETRIEVAL() {
        return (int)131072L;
    }
    public static int CRYPT_LDAP_AREC_EXCLUSIVE_RETRIEVAL() {
        return (int)262144L;
    }
    public static int CRYPT_AIA_RETRIEVAL() {
        return (int)524288L;
    }
    public static int CRYPT_HTTP_POST_RETRIEVAL() {
        return (int)1048576L;
    }
    public static int CRYPT_PROXY_CACHE_RETRIEVAL() {
        return (int)2097152L;
    }
    public static int CRYPT_NOT_MODIFIED_RETRIEVAL() {
        return (int)4194304L;
    }
    public static int CRYPT_ENABLE_SSL_REVOCATION_RETRIEVAL() {
        return (int)8388608L;
    }
    public static int CRYPT_RANDOM_QUERY_STRING_RETRIEVAL() {
        return (int)67108864L;
    }
    public static int CRYPT_ENABLE_FILE_RETRIEVAL() {
        return (int)134217728L;
    }
    public static int CRYPT_CREATE_NEW_FLUSH_ENTRY() {
        return (int)268435456L;
    }
    public static int CRYPT_VERIFY_CONTEXT_SIGNATURE() {
        return (int)32L;
    }
    public static int CRYPT_VERIFY_DATA_HASH() {
        return (int)64L;
    }
    public static int CRYPT_KEEP_TIME_VALID() {
        return (int)128L;
    }
    public static int CRYPT_DONT_VERIFY_SIGNATURE() {
        return (int)256L;
    }
    public static int CRYPT_DONT_CHECK_TIME_VALIDITY() {
        return (int)512L;
    }
    public static int CRYPT_CHECK_FRESHNESS_TIME_VALIDITY() {
        return (int)1024L;
    }
    public static int CRYPT_ACCUMULATIVE_TIMEOUT() {
        return (int)2048L;
    }
    public static int CRYPT_OCSP_ONLY_RETRIEVAL() {
        return (int)16777216L;
    }
    public static int CRYPT_NO_OCSP_FAILOVER_TO_CRL_RETRIEVAL() {
        return (int)33554432L;
    }
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_NONE() {
        return (int)0L;
    }
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_BLOB() {
        return (int)1L;
    }
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_CRL() {
        return (int)2L;
    }
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_OCSP() {
        return (int)3L;
    }
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_AUTOROOT_CAB() {
        return (int)5L;
    }
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_DISALLOWED_CERT_CAB() {
        return (int)6L;
    }
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_PIN_RULES_CAB() {
        return (int)7L;
    }
    public static int CRYPTNET_URL_CACHE_DEFAULT_FLUSH() {
        return (int)0L;
    }
    public static int CRYPTNET_URL_CACHE_RESPONSE_NONE() {
        return (int)0L;
    }
    public static int CRYPTNET_URL_CACHE_RESPONSE_HTTP() {
        return (int)1L;
    }
    public static int CRYPTNET_URL_CACHE_RESPONSE_VALIDATED() {
        return (int)32768L;
    }
    public static int CRYPT_RETRIEVE_MAX_ERROR_CONTENT_LENGTH() {
        return (int)4096L;
    }
    public static int CRYPT_GET_URL_FROM_PROPERTY() {
        return (int)1L;
    }
    public static int CRYPT_GET_URL_FROM_EXTENSION() {
        return (int)2L;
    }
    public static int CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE() {
        return (int)4L;
    }
    public static int CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE() {
        return (int)8L;
    }
    public static int CERT_CREATE_SELFSIGN_NO_SIGN() {
        return (int)1L;
    }
    public static int CERT_CREATE_SELFSIGN_NO_KEY_INFO() {
        return (int)2L;
    }
    public static int CRYPT_KEYID_MACHINE_FLAG() {
        return (int)32L;
    }
    public static int CRYPT_KEYID_ALLOC_FLAG() {
        return (int)32768L;
    }
    public static int CRYPT_KEYID_DELETE_FLAG() {
        return (int)16L;
    }
    public static int CRYPT_KEYID_SET_NEW_FLAG() {
        return (int)8192L;
    }
    public static int CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_DEFAULT() {
        return (int)5L;
    }
    public static int CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_DEFAULT() {
        return (int)3L;
    }
    public static int CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_DEFAULT() {
        return (int)100000L;
    }
    public static int CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_DEFAULT() {
        return (int)10L;
    }
    public static int CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DEFAULT() {
        return (int)5L;
    }
    public static int CERT_CHAIN_ENABLE_MD2_MD4_FLAG() {
        return (int)1L;
    }
    public static int CERT_CHAIN_ENABLE_WEAK_RSA_ROOT_FLAG() {
        return (int)2L;
    }
    public static int CERT_CHAIN_ENABLE_WEAK_LOGGING_FLAG() {
        return (int)4L;
    }
    public static int CERT_CHAIN_ENABLE_ONLY_WEAK_LOGGING_FLAG() {
        return (int)8L;
    }
    public static int CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DEFAULT() {
        return (int)1023L;
    }
    public static int CERT_CHAIN_DISABLE_ALL_EKU_WEAK_FLAG() {
        return (int)65536L;
    }
    public static int CERT_CHAIN_ENABLE_ALL_EKU_HYGIENE_FLAG() {
        return (int)131072L;
    }
    public static int CERT_CHAIN_DISABLE_OPT_IN_SERVER_AUTH_WEAK_FLAG() {
        return (int)262144L;
    }
    public static int CERT_CHAIN_DISABLE_SERVER_AUTH_WEAK_FLAG() {
        return (int)1048576L;
    }
    public static int CERT_CHAIN_ENABLE_SERVER_AUTH_HYGIENE_FLAG() {
        return (int)2097152L;
    }
    public static int CERT_CHAIN_DISABLE_CODE_SIGNING_WEAK_FLAG() {
        return (int)4194304L;
    }
    public static int CERT_CHAIN_DISABLE_MOTW_CODE_SIGNING_WEAK_FLAG() {
        return (int)8388608L;
    }
    public static int CERT_CHAIN_ENABLE_CODE_SIGNING_HYGIENE_FLAG() {
        return (int)16777216L;
    }
    public static int CERT_CHAIN_ENABLE_MOTW_CODE_SIGNING_HYGIENE_FLAG() {
        return (int)33554432L;
    }
    public static int CERT_CHAIN_DISABLE_TIMESTAMP_WEAK_FLAG() {
        return (int)67108864L;
    }
    public static int CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_WEAK_FLAG() {
        return (int)134217728L;
    }
    public static int CERT_CHAIN_ENABLE_TIMESTAMP_HYGIENE_FLAG() {
        return (int)268435456L;
    }
    public static int CERT_CHAIN_ENABLE_MOTW_TIMESTAMP_HYGIENE_FLAG() {
        return (int)536870912L;
    }
    public static int CERT_CHAIN_MOTW_IGNORE_AFTER_TIME_WEAK_FLAG() {
        return (int)1073741824L;
    }
    public static int CERT_CHAIN_DISABLE_FILE_HASH_WEAK_FLAG() {
        return (int)4096L;
    }
    public static int CERT_CHAIN_DISABLE_MOTW_FILE_HASH_WEAK_FLAG() {
        return (int)8192L;
    }
    public static int CERT_CHAIN_DISABLE_TIMESTAMP_HASH_WEAK_FLAG() {
        return (int)16384L;
    }
    public static int CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_HASH_WEAK_FLAG() {
        return (int)32768L;
    }
    public static int CERT_CHAIN_AUTO_CURRENT_USER() {
        return (int)1L;
    }
    public static int CERT_CHAIN_AUTO_LOCAL_MACHINE() {
        return (int)2L;
    }
    public static int CERT_CHAIN_AUTO_IMPERSONATED() {
        return (int)3L;
    }
    public static int CERT_CHAIN_AUTO_PROCESS_INFO() {
        return (int)4L;
    }
    public static int CERT_CHAIN_AUTO_PINRULE_INFO() {
        return (int)5L;
    }
    public static int CERT_CHAIN_AUTO_NETWORK_INFO() {
        return (int)6L;
    }
    public static int CERT_CHAIN_AUTO_SERIAL_LOCAL_MACHINE() {
        return (int)7L;
    }
    public static int CERT_CHAIN_AUTO_HPKP_RULE_INFO() {
        return (int)8L;
    }
    public static int CERT_CHAIN_AUTO_FLUSH_DISABLE_FLAG() {
        return (int)1L;
    }
    public static int CERT_CHAIN_AUTO_LOG_CREATE_FLAG() {
        return (int)2L;
    }
    public static int CERT_CHAIN_AUTO_LOG_FREE_FLAG() {
        return (int)4L;
    }
    public static int CERT_CHAIN_AUTO_LOG_FLUSH_FLAG() {
        return (int)8L;
    }
    public static int CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_DEFAULT() {
        return (int)5L;
    }
    public static int CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_DEFAULT() {
        return (int)500L;
    }
    public static int CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_DEFAULT() {
        return (int)10L;
    }
    public static int CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT() {
        return (int)20L;
    }
    public static int CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT() {
        return (int)10L;
    }
    public static int CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_DEFAULT() {
        return (int)60L;
    }
    public static int CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_DEFAULT() {
        return (int)50L;
    }
    public static int CERT_CHAIN_OPTION_DISABLE_AIA_URL_RETRIEVAL() {
        return (int)2L;
    }
    public static int CERT_CHAIN_OPTION_ENABLE_SIA_URL_RETRIEVAL() {
        return (int)4L;
    }
    public static int CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_DEFAULT() {
        return (int)12L;
    }
    public static int CERT_CHAIN_CACHE_END_CERT() {
        return (int)1L;
    }
    public static int CERT_CHAIN_THREAD_STORE_SYNC() {
        return (int)2L;
    }
    public static int CERT_CHAIN_CACHE_ONLY_URL_RETRIEVAL() {
        return (int)4L;
    }
    public static int CERT_CHAIN_USE_LOCAL_MACHINE_STORE() {
        return (int)8L;
    }
    public static int CERT_CHAIN_ENABLE_CACHE_AUTO_UPDATE() {
        return (int)16L;
    }
    public static int CERT_CHAIN_ENABLE_SHARE_STORE() {
        return (int)32L;
    }
    public static int CERT_CHAIN_EXCLUSIVE_ENABLE_CA_FLAG() {
        return (int)1L;
    }
    public static int CERT_TRUST_NO_ERROR() {
        return (int)0L;
    }
    public static int CERT_TRUST_IS_NOT_TIME_VALID() {
        return (int)1L;
    }
    public static int CERT_TRUST_IS_NOT_TIME_NESTED() {
        return (int)2L;
    }
    public static int CERT_TRUST_IS_REVOKED() {
        return (int)4L;
    }
    public static int CERT_TRUST_IS_NOT_SIGNATURE_VALID() {
        return (int)8L;
    }
    public static int CERT_TRUST_IS_NOT_VALID_FOR_USAGE() {
        return (int)16L;
    }
    public static int CERT_TRUST_IS_UNTRUSTED_ROOT() {
        return (int)32L;
    }
    public static int CERT_TRUST_REVOCATION_STATUS_UNKNOWN() {
        return (int)64L;
    }
    public static int CERT_TRUST_IS_CYCLIC() {
        return (int)128L;
    }
    public static int CERT_TRUST_INVALID_EXTENSION() {
        return (int)256L;
    }
    public static int CERT_TRUST_INVALID_POLICY_CONSTRAINTS() {
        return (int)512L;
    }
    public static int CERT_TRUST_INVALID_BASIC_CONSTRAINTS() {
        return (int)1024L;
    }
    public static int CERT_TRUST_INVALID_NAME_CONSTRAINTS() {
        return (int)2048L;
    }
    public static int CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT() {
        return (int)4096L;
    }
    public static int CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT() {
        return (int)8192L;
    }
    public static int CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT() {
        return (int)16384L;
    }
    public static int CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT() {
        return (int)32768L;
    }
    public static int CERT_TRUST_IS_OFFLINE_REVOCATION() {
        return (int)16777216L;
    }
    public static int CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY() {
        return (int)33554432L;
    }
    public static int CERT_TRUST_IS_EXPLICIT_DISTRUST() {
        return (int)67108864L;
    }
    public static int CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT() {
        return (int)134217728L;
    }
    public static int CERT_TRUST_HAS_WEAK_SIGNATURE() {
        return (int)1048576L;
    }
    public static int CERT_TRUST_HAS_WEAK_HYGIENE() {
        return (int)2097152L;
    }
    public static int CERT_TRUST_IS_PARTIAL_CHAIN() {
        return (int)65536L;
    }
    public static int CERT_TRUST_CTL_IS_NOT_TIME_VALID() {
        return (int)131072L;
    }
    public static int CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID() {
        return (int)262144L;
    }
    public static int CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE() {
        return (int)524288L;
    }
    public static int CERT_TRUST_HAS_EXACT_MATCH_ISSUER() {
        return (int)1L;
    }
    public static int CERT_TRUST_HAS_KEY_MATCH_ISSUER() {
        return (int)2L;
    }
    public static int CERT_TRUST_HAS_NAME_MATCH_ISSUER() {
        return (int)4L;
    }
    public static int CERT_TRUST_IS_SELF_SIGNED() {
        return (int)8L;
    }
    public static int CERT_TRUST_AUTO_UPDATE_CA_REVOCATION() {
        return (int)16L;
    }
    public static int CERT_TRUST_AUTO_UPDATE_END_REVOCATION() {
        return (int)32L;
    }
    public static int CERT_TRUST_NO_OCSP_FAILOVER_TO_CRL() {
        return (int)64L;
    }
    public static int CERT_TRUST_IS_KEY_ROLLOVER() {
        return (int)128L;
    }
    public static int CERT_TRUST_SSL_HANDSHAKE_OCSP() {
        return (int)262144L;
    }
    public static int CERT_TRUST_SSL_TIME_VALID_OCSP() {
        return (int)524288L;
    }
    public static int CERT_TRUST_SSL_RECONNECT_OCSP() {
        return (int)1048576L;
    }
    public static int CERT_TRUST_HAS_PREFERRED_ISSUER() {
        return (int)256L;
    }
    public static int CERT_TRUST_HAS_ISSUANCE_CHAIN_POLICY() {
        return (int)512L;
    }
    public static int CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS() {
        return (int)1024L;
    }
    public static int CERT_TRUST_IS_PEER_TRUSTED() {
        return (int)2048L;
    }
    public static int CERT_TRUST_HAS_CRL_VALIDITY_EXTENDED() {
        return (int)4096L;
    }
    public static int CERT_TRUST_IS_FROM_EXCLUSIVE_TRUST_STORE() {
        return (int)8192L;
    }
    public static int CERT_TRUST_IS_CA_TRUSTED() {
        return (int)16384L;
    }
    public static int CERT_TRUST_HAS_AUTO_UPDATE_WEAK_SIGNATURE() {
        return (int)32768L;
    }
    public static int CERT_TRUST_HAS_ALLOW_WEAK_SIGNATURE() {
        return (int)131072L;
    }
    public static int CERT_TRUST_IS_COMPLEX_CHAIN() {
        return (int)65536L;
    }
    public static int CERT_TRUST_SSL_TIME_VALID() {
        return (int)16777216L;
    }
    public static int CERT_TRUST_NO_TIME_CHECK() {
        return (int)33554432L;
    }
    public static int USAGE_MATCH_TYPE_AND() {
        return (int)0L;
    }
    public static int USAGE_MATCH_TYPE_OR() {
        return (int)1L;
    }
    public static int CERT_CHAIN_STRONG_SIGN_DISABLE_END_CHECK_FLAG() {
        return (int)1L;
    }
    public static int CERT_CHAIN_REVOCATION_CHECK_END_CERT() {
        return (int)268435456L;
    }
    public static int CERT_CHAIN_REVOCATION_CHECK_CHAIN() {
        return (int)536870912L;
    }
    public static int CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT() {
        return (int)1073741824L;
    }
    public static int CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT() {
        return (int)134217728L;
    }
    public static int CERT_CHAIN_REVOCATION_CHECK_OCSP_CERT() {
        return (int)67108864L;
    }
    public static int CERT_CHAIN_DISABLE_PASS1_QUALITY_FILTERING() {
        return (int)64L;
    }
    public static int CERT_CHAIN_RETURN_LOWER_QUALITY_CONTEXTS() {
        return (int)128L;
    }
    public static int CERT_CHAIN_DISABLE_AUTH_ROOT_AUTO_UPDATE() {
        return (int)256L;
    }
    public static int CERT_CHAIN_TIMESTAMP_TIME() {
        return (int)512L;
    }
    public static int CERT_CHAIN_ENABLE_PEER_TRUST() {
        return (int)1024L;
    }
    public static int CERT_CHAIN_DISABLE_MY_PEER_TRUST() {
        return (int)2048L;
    }
    public static int CERT_CHAIN_DISABLE_MD2_MD4() {
        return (int)4096L;
    }
    public static int CERT_CHAIN_DISABLE_AIA() {
        return (int)8192L;
    }
    public static int CERT_CHAIN_HAS_MOTW() {
        return (int)16384L;
    }
    public static int CERT_CHAIN_ONLY_ADDITIONAL_AND_AUTH_ROOT() {
        return (int)32768L;
    }
    public static int CERT_CHAIN_OPT_IN_WEAK_SIGNATURE() {
        return (int)65536L;
    }
    public static int CERT_CHAIN_FIND_BY_ISSUER() {
        return (int)1L;
    }
    public static int CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG() {
        return (int)1L;
    }
    public static int CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG() {
        return (int)2L;
    }
    public static int CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG() {
        return (int)4L;
    }
    public static int CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG() {
        return (int)8L;
    }
    public static int CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG() {
        return (int)16384L;
    }
    public static int CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG() {
        return (int)32768L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG() {
        return (int)1L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG() {
        return (int)2L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG() {
        return (int)4L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG() {
        return (int)8L;
    }
    public static int CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG() {
        return (int)16L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG() {
        return (int)32L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG() {
        return (int)64L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG() {
        return (int)128L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG() {
        return (int)256L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG() {
        return (int)512L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG() {
        return (int)1024L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG() {
        return (int)2048L;
    }
    public static int CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG() {
        return (int)32768L;
    }
    public static int CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG() {
        return (int)16384L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_NOT_SUPPORTED_CRITICAL_EXT_FLAG() {
        return (int)8192L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_PEER_TRUST_FLAG() {
        return (int)4096L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_WEAK_SIGNATURE_FLAG() {
        return (int)134217728L;
    }
    public static int AUTHTYPE_CLIENT() {
        return (int)1L;
    }
    public static int AUTHTYPE_SERVER() {
        return (int)2L;
    }
    public static int BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG() {
        return (int)1073741824L;
    }
    public static int MICROSOFT_ROOT_CERT_CHAIN_POLICY_ENABLE_TEST_ROOT_FLAG() {
        return (int)65536L;
    }
    public static int MICROSOFT_ROOT_CERT_CHAIN_POLICY_CHECK_APPLICATION_ROOT_FLAG() {
        return (int)131072L;
    }
    public static int MICROSOFT_ROOT_CERT_CHAIN_POLICY_DISABLE_FLIGHT_ROOT_FLAG() {
        return (int)262144L;
    }
    public static int SSL_F12_ERROR_TEXT_LENGTH() {
        return (int)256L;
    }
    public static int CERT_CHAIN_POLICY_SSL_F12_SUCCESS_LEVEL() {
        return (int)0L;
    }
    public static int CERT_CHAIN_POLICY_SSL_F12_WARNING_LEVEL() {
        return (int)1L;
    }
    public static int CERT_CHAIN_POLICY_SSL_F12_ERROR_LEVEL() {
        return (int)2L;
    }
    public static int CERT_CHAIN_POLICY_SSL_F12_NONE_CATEGORY() {
        return (int)0L;
    }
    public static int CERT_CHAIN_POLICY_SSL_F12_WEAK_CRYPTO_CATEGORY() {
        return (int)1L;
    }
    public static int CERT_CHAIN_POLICY_SSL_F12_ROOT_PROGRAM_CATEGORY() {
        return (int)2L;
    }
    public static int SSL_HPKP_PKP_HEADER_INDEX() {
        return (int)0L;
    }
    public static int SSL_HPKP_PKP_RO_HEADER_INDEX() {
        return (int)1L;
    }
    public static int SSL_HPKP_HEADER_COUNT() {
        return (int)2L;
    }
    public static int SSL_KEY_PIN_ERROR_TEXT_LENGTH() {
        return (int)512L;
    }
    public static int CERT_CHAIN_POLICY_SSL_KEY_PIN_SUCCESS() {
        return (int)0L;
    }
    public static int CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_WARNING() {
        return (int)1L;
    }
    public static int CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_WARNING() {
        return (int)2L;
    }
    public static int CRYPT_STRING_BASE64HEADER() {
        return (int)0L;
    }
    public static int CRYPT_STRING_BASE64() {
        return (int)1L;
    }
    public static int CRYPT_STRING_BINARY() {
        return (int)2L;
    }
    public static int CRYPT_STRING_BASE64REQUESTHEADER() {
        return (int)3L;
    }
    public static int CRYPT_STRING_HEX() {
        return (int)4L;
    }
    public static int CRYPT_STRING_HEXASCII() {
        return (int)5L;
    }
    public static int CRYPT_STRING_BASE64_ANY() {
        return (int)6L;
    }
    public static int CRYPT_STRING_ANY() {
        return (int)7L;
    }
    public static int CRYPT_STRING_HEX_ANY() {
        return (int)8L;
    }
    public static int CRYPT_STRING_BASE64X509CRLHEADER() {
        return (int)9L;
    }
    public static int CRYPT_STRING_HEXADDR() {
        return (int)10L;
    }
    public static int CRYPT_STRING_HEXASCIIADDR() {
        return (int)11L;
    }
    public static int CRYPT_STRING_HEXRAW() {
        return (int)12L;
    }
    public static int CRYPT_STRING_BASE64URI() {
        return (int)13L;
    }
    public static int CRYPT_STRING_ENCODEMASK() {
        return (int)255L;
    }
    public static int CRYPT_STRING_RESERVED100() {
        return (int)256L;
    }
    public static int CRYPT_STRING_RESERVED200() {
        return (int)512L;
    }
    public static int CRYPT_STRING_PERCENTESCAPE() {
        return (int)134217728L;
    }
    public static int CRYPT_STRING_HASHDATA() {
        return (int)268435456L;
    }
    public static int CRYPT_STRING_STRICT() {
        return (int)536870912L;
    }
    public static int CRYPT_STRING_NOCRLF() {
        return (int)1073741824L;
    }
    public static int PKCS12_IMPORT_SILENT() {
        return (int)64L;
    }
    public static int CRYPT_USER_KEYSET() {
        return (int)4096L;
    }
    public static int PKCS12_PREFER_CNG_KSP() {
        return (int)256L;
    }
    public static int PKCS12_ALWAYS_CNG_KSP() {
        return (int)512L;
    }
    public static int PKCS12_ONLY_CERTIFICATES() {
        return (int)1024L;
    }
    public static int PKCS12_ONLY_NOT_ENCRYPTED_CERTIFICATES() {
        return (int)2048L;
    }
    public static int PKCS12_ALLOW_OVERWRITE_KEY() {
        return (int)16384L;
    }
    public static int PKCS12_NO_PERSIST_KEY() {
        return (int)32768L;
    }
    public static int PKCS12_VIRTUAL_ISOLATION_KEY() {
        return (int)65536L;
    }
    public static int PKCS12_ONLY_CERTIFICATES_PROVIDER_TYPE() {
        return (int)0L;
    }
    public static int REPORT_NO_PRIVATE_KEY() {
        return (int)1L;
    }
    public static int REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY() {
        return (int)2L;
    }
    public static int EXPORT_PRIVATE_KEYS() {
        return (int)4L;
    }
    public static int PKCS12_INCLUDE_EXTENDED_PROPERTIES() {
        return (int)16L;
    }
    public static int PKCS12_PROTECT_TO_DOMAIN_SIDS() {
        return (int)32L;
    }
    public static int PKCS12_EXPORT_SILENT() {
        return (int)64L;
    }
    public static int PKCS12_EXPORT_PBES2_PARAMS() {
        return (int)128L;
    }
    public static int PKCS12_DISABLE_ENCRYPT_CERTIFICATES() {
        return (int)256L;
    }
    public static int PKCS12_ENCRYPT_CERTIFICATES() {
        return (int)512L;
    }
    public static int PKCS12_EXPORT_ECC_CURVE_PARAMETERS() {
        return (int)4096L;
    }
    public static int PKCS12_EXPORT_ECC_CURVE_OID() {
        return (int)8192L;
    }
    public static int CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_READ_FLAG() {
        return (int)1L;
    }
    public static int CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_WRITE_FLAG() {
        return (int)2L;
    }
    public static int CERT_SERVER_OCSP_RESPONSE_ASYNC_FLAG() {
        return (int)1L;
    }
    public static int CERT_SELECT_MAX_PARA() {
        return (int)500L;
    }
    public static int CERT_SELECT_BY_ENHKEY_USAGE() {
        return (int)1L;
    }
    public static int CERT_SELECT_BY_KEY_USAGE() {
        return (int)2L;
    }
    public static int CERT_SELECT_BY_POLICY_OID() {
        return (int)3L;
    }
    public static int CERT_SELECT_BY_PROV_NAME() {
        return (int)4L;
    }
    public static int CERT_SELECT_BY_EXTENSION() {
        return (int)5L;
    }
    public static int CERT_SELECT_BY_SUBJECT_HOST_NAME() {
        return (int)6L;
    }
    public static int CERT_SELECT_BY_ISSUER_ATTR() {
        return (int)7L;
    }
    public static int CERT_SELECT_BY_SUBJECT_ATTR() {
        return (int)8L;
    }
    public static int CERT_SELECT_BY_ISSUER_NAME() {
        return (int)9L;
    }
    public static int CERT_SELECT_BY_PUBLIC_KEY() {
        return (int)10L;
    }
    public static int CERT_SELECT_BY_TLS_SIGNATURES() {
        return (int)11L;
    }
    public static int CERT_SELECT_BY_ISSUER_DISPLAYNAME() {
        return (int)12L;
    }
    public static int CERT_SELECT_BY_FRIENDLYNAME() {
        return (int)13L;
    }
    public static int CERT_SELECT_BY_THUMBPRINT() {
        return (int)14L;
    }
    public static int CERT_SELECT_ALLOW_EXPIRED() {
        return (int)1L;
    }
    public static int CERT_SELECT_TRUSTED_ROOT() {
        return (int)2L;
    }
    public static int CERT_SELECT_DISALLOW_SELFSIGNED() {
        return (int)4L;
    }
    public static int CERT_SELECT_HAS_PRIVATE_KEY() {
        return (int)8L;
    }
    public static int CERT_SELECT_HAS_KEY_FOR_SIGNATURE() {
        return (int)16L;
    }
    public static int CERT_SELECT_HAS_KEY_FOR_KEY_EXCHANGE() {
        return (int)32L;
    }
    public static int CERT_SELECT_HARDWARE_ONLY() {
        return (int)64L;
    }
    public static int CERT_SELECT_ALLOW_DUPLICATES() {
        return (int)128L;
    }
    public static int CERT_SELECT_IGNORE_AUTOSELECT() {
        return (int)256L;
    }
    public static int TIMESTAMP_VERSION() {
        return (int)1L;
    }
    public static int TIMESTAMP_STATUS_GRANTED() {
        return (int)0L;
    }
    public static int TIMESTAMP_STATUS_GRANTED_WITH_MODS() {
        return (int)1L;
    }
    public static int TIMESTAMP_STATUS_REJECTED() {
        return (int)2L;
    }
    public static int TIMESTAMP_STATUS_WAITING() {
        return (int)3L;
    }
    public static int TIMESTAMP_STATUS_REVOCATION_WARNING() {
        return (int)4L;
    }
    public static int TIMESTAMP_STATUS_REVOKED() {
        return (int)5L;
    }
    public static int TIMESTAMP_FAILURE_BAD_ALG() {
        return (int)0L;
    }
    public static int TIMESTAMP_FAILURE_BAD_REQUEST() {
        return (int)2L;
    }
    public static int TIMESTAMP_FAILURE_BAD_FORMAT() {
        return (int)5L;
    }
    public static int TIMESTAMP_FAILURE_TIME_NOT_AVAILABLE() {
        return (int)14L;
    }
    public static int TIMESTAMP_FAILURE_POLICY_NOT_SUPPORTED() {
        return (int)15L;
    }
    public static int TIMESTAMP_FAILURE_EXTENSION_NOT_SUPPORTED() {
        return (int)16L;
    }
    public static int TIMESTAMP_FAILURE_INFO_NOT_AVAILABLE() {
        return (int)17L;
    }
    public static int TIMESTAMP_FAILURE_SYSTEM_FAILURE() {
        return (int)25L;
    }
    public static int TIMESTAMP_DONT_HASH_DATA() {
        return (int)1L;
    }
    public static int TIMESTAMP_VERIFY_CONTEXT_SIGNATURE() {
        return (int)32L;
    }
    public static int TIMESTAMP_NO_AUTH_RETRIEVAL() {
        return (int)131072L;
    }
    public static int CRYPT_OBJECT_LOCATOR_SPN_NAME_TYPE() {
        return (int)1L;
    }
    public static int CRYPT_OBJECT_LOCATOR_LAST_RESERVED_NAME_TYPE() {
        return (int)32L;
    }
    public static int CRYPT_OBJECT_LOCATOR_FIRST_RESERVED_USER_NAME_TYPE() {
        return (int)33L;
    }
    public static int CRYPT_OBJECT_LOCATOR_LAST_RESERVED_USER_NAME_TYPE() {
        return (int)65535L;
    }
    public static int CRYPT_OBJECT_LOCATOR_RELEASE_SYSTEM_SHUTDOWN() {
        return (int)1L;
    }
    public static int CRYPT_OBJECT_LOCATOR_RELEASE_SERVICE_STOP() {
        return (int)2L;
    }
    public static int CRYPT_OBJECT_LOCATOR_RELEASE_PROCESS_EXIT() {
        return (int)3L;
    }
    public static int CRYPT_OBJECT_LOCATOR_RELEASE_DLL_UNLOAD() {
        return (int)4L;
    }
    public static int CERT_FILE_HASH_USE_TYPE() {
        return (int)1L;
    }
    public static int CERT_TIMESTAMP_HASH_USE_TYPE() {
        return (int)2L;
    }
    public static int dwFORCE_KEY_PROTECTION_DISABLED() {
        return (int)0L;
    }
    public static int dwFORCE_KEY_PROTECTION_USER_SELECT() {
        return (int)1L;
    }
    public static int dwFORCE_KEY_PROTECTION_HIGH() {
        return (int)2L;
    }
    public static int CRYPTPROTECT_PROMPT_ON_UNPROTECT() {
        return (int)1L;
    }
    public static int CRYPTPROTECT_PROMPT_ON_PROTECT() {
        return (int)2L;
    }
    public static int CRYPTPROTECT_PROMPT_RESERVED() {
        return (int)4L;
    }
    public static int CRYPTPROTECT_PROMPT_STRONG() {
        return (int)8L;
    }
    public static int CRYPTPROTECT_PROMPT_REQUIRE_STRONG() {
        return (int)16L;
    }
    public static int CRYPTPROTECT_UI_FORBIDDEN() {
        return (int)1L;
    }
    public static int CRYPTPROTECT_LOCAL_MACHINE() {
        return (int)4L;
    }
    public static int CRYPTPROTECT_CRED_SYNC() {
        return (int)8L;
    }
    public static int CRYPTPROTECT_AUDIT() {
        return (int)16L;
    }
    public static int CRYPTPROTECT_NO_RECOVERY() {
        return (int)32L;
    }
    public static int CRYPTPROTECT_VERIFY_PROTECTION() {
        return (int)64L;
    }
    public static int CRYPTPROTECT_CRED_REGENERATE() {
        return (int)128L;
    }
    public static int CRYPTPROTECT_FIRST_RESERVED_FLAGVAL() {
        return (int)268435455L;
    }
    public static int CRYPTPROTECTMEMORY_BLOCK_SIZE() {
        return (int)16L;
    }
    public static int CRYPTPROTECTMEMORY_SAME_PROCESS() {
        return (int)0L;
    }
    public static int CRYPTPROTECTMEMORY_CROSS_PROCESS() {
        return (int)1L;
    }
    public static int CRYPTPROTECTMEMORY_SAME_LOGON() {
        return (int)2L;
    }
    public static int WINEFS_SETUSERKEY_SET_CAPABILITIES() {
        return (int)1L;
    }
    public static int EFS_COMPATIBILITY_VERSION_NCRYPT_PROTECTOR() {
        return (int)5L;
    }
    public static int EFS_COMPATIBILITY_VERSION_PFILE_PROTECTOR() {
        return (int)6L;
    }
    public static int EFS_SUBVER_UNKNOWN() {
        return (int)0L;
    }
    public static int EFS_EFS_SUBVER_EFS_CERT() {
        return (int)1L;
    }
    public static int EFS_PFILE_SUBVER_RMS() {
        return (int)2L;
    }
    public static int EFS_PFILE_SUBVER_APPX() {
        return (int)3L;
    }
    public static int MAX_SID_SIZE() {
        return (int)256L;
    }
    public static int EFS_METADATA_ADD_USER() {
        return (int)1L;
    }
    public static int EFS_METADATA_REMOVE_USER() {
        return (int)2L;
    }
    public static int EFS_METADATA_REPLACE_USER() {
        return (int)4L;
    }
    public static int EFS_METADATA_GENERAL_OP() {
        return (int)8L;
    }
    public static int FILE_DEVICE_BEEP() {
        return (int)1L;
    }
    public static int FILE_DEVICE_CD_ROM() {
        return (int)2L;
    }
    public static int FILE_DEVICE_CD_ROM_FILE_SYSTEM() {
        return (int)3L;
    }
    public static int FILE_DEVICE_CONTROLLER() {
        return (int)4L;
    }
    public static int FILE_DEVICE_DATALINK() {
        return (int)5L;
    }
    public static int FILE_DEVICE_DFS() {
        return (int)6L;
    }
    public static int FILE_DEVICE_DISK() {
        return (int)7L;
    }
    public static int FILE_DEVICE_DISK_FILE_SYSTEM() {
        return (int)8L;
    }
    public static int FILE_DEVICE_FILE_SYSTEM() {
        return (int)9L;
    }
    public static int FILE_DEVICE_INPORT_PORT() {
        return (int)10L;
    }
    public static int FILE_DEVICE_KEYBOARD() {
        return (int)11L;
    }
    public static int FILE_DEVICE_MAILSLOT() {
        return (int)12L;
    }
    public static int FILE_DEVICE_MIDI_IN() {
        return (int)13L;
    }
    public static int FILE_DEVICE_MIDI_OUT() {
        return (int)14L;
    }
    public static int FILE_DEVICE_MOUSE() {
        return (int)15L;
    }
    public static int FILE_DEVICE_MULTI_UNC_PROVIDER() {
        return (int)16L;
    }
    public static int FILE_DEVICE_NAMED_PIPE() {
        return (int)17L;
    }
    public static int FILE_DEVICE_NETWORK() {
        return (int)18L;
    }
    public static int FILE_DEVICE_NETWORK_BROWSER() {
        return (int)19L;
    }
    public static int FILE_DEVICE_NETWORK_FILE_SYSTEM() {
        return (int)20L;
    }
    public static int FILE_DEVICE_NULL() {
        return (int)21L;
    }
    public static int FILE_DEVICE_PARALLEL_PORT() {
        return (int)22L;
    }
    public static int FILE_DEVICE_PHYSICAL_NETCARD() {
        return (int)23L;
    }
    public static int FILE_DEVICE_PRINTER() {
        return (int)24L;
    }
    public static int FILE_DEVICE_SCANNER() {
        return (int)25L;
    }
    public static int FILE_DEVICE_SERIAL_MOUSE_PORT() {
        return (int)26L;
    }
    public static int FILE_DEVICE_SERIAL_PORT() {
        return (int)27L;
    }
    public static int FILE_DEVICE_SCREEN() {
        return (int)28L;
    }
    public static int FILE_DEVICE_SOUND() {
        return (int)29L;
    }
    public static int FILE_DEVICE_STREAMS() {
        return (int)30L;
    }
    public static int FILE_DEVICE_TAPE() {
        return (int)31L;
    }
    public static int FILE_DEVICE_TAPE_FILE_SYSTEM() {
        return (int)32L;
    }
    public static int FILE_DEVICE_TRANSPORT() {
        return (int)33L;
    }
    public static int FILE_DEVICE_UNKNOWN() {
        return (int)34L;
    }
    public static int FILE_DEVICE_VIDEO() {
        return (int)35L;
    }
    public static int FILE_DEVICE_VIRTUAL_DISK() {
        return (int)36L;
    }
    public static int FILE_DEVICE_WAVE_IN() {
        return (int)37L;
    }
    public static int FILE_DEVICE_WAVE_OUT() {
        return (int)38L;
    }
    public static int FILE_DEVICE_8042_PORT() {
        return (int)39L;
    }
    public static int FILE_DEVICE_NETWORK_REDIRECTOR() {
        return (int)40L;
    }
    public static int FILE_DEVICE_BATTERY() {
        return (int)41L;
    }
    public static int FILE_DEVICE_BUS_EXTENDER() {
        return (int)42L;
    }
    public static int FILE_DEVICE_MODEM() {
        return (int)43L;
    }
    public static int FILE_DEVICE_VDM() {
        return (int)44L;
    }
    public static int FILE_DEVICE_MASS_STORAGE() {
        return (int)45L;
    }
    public static int FILE_DEVICE_SMB() {
        return (int)46L;
    }
    public static int FILE_DEVICE_KS() {
        return (int)47L;
    }
    public static int FILE_DEVICE_CHANGER() {
        return (int)48L;
    }
    public static int FILE_DEVICE_SMARTCARD() {
        return (int)49L;
    }
    public static int FILE_DEVICE_ACPI() {
        return (int)50L;
    }
    public static int FILE_DEVICE_DVD() {
        return (int)51L;
    }
    public static int FILE_DEVICE_FULLSCREEN_VIDEO() {
        return (int)52L;
    }
    public static int FILE_DEVICE_DFS_FILE_SYSTEM() {
        return (int)53L;
    }
    public static int FILE_DEVICE_DFS_VOLUME() {
        return (int)54L;
    }
    public static int FILE_DEVICE_SERENUM() {
        return (int)55L;
    }
    public static int FILE_DEVICE_TERMSRV() {
        return (int)56L;
    }
    public static int FILE_DEVICE_KSEC() {
        return (int)57L;
    }
    public static int FILE_DEVICE_FIPS() {
        return (int)58L;
    }
    public static int FILE_DEVICE_INFINIBAND() {
        return (int)59L;
    }
    public static int FILE_DEVICE_VMBUS() {
        return (int)62L;
    }
    public static int FILE_DEVICE_CRYPT_PROVIDER() {
        return (int)63L;
    }
    public static int FILE_DEVICE_WPD() {
        return (int)64L;
    }
    public static int FILE_DEVICE_BLUETOOTH() {
        return (int)65L;
    }
    public static int FILE_DEVICE_MT_COMPOSITE() {
        return (int)66L;
    }
    public static int FILE_DEVICE_MT_TRANSPORT() {
        return (int)67L;
    }
    public static int FILE_DEVICE_BIOMETRIC() {
        return (int)68L;
    }
    public static int FILE_DEVICE_PMI() {
        return (int)69L;
    }
    public static int FILE_DEVICE_EHSTOR() {
        return (int)70L;
    }
    public static int FILE_DEVICE_DEVAPI() {
        return (int)71L;
    }
    public static int FILE_DEVICE_GPIO() {
        return (int)72L;
    }
    public static int FILE_DEVICE_USBEX() {
        return (int)73L;
    }
    public static int FILE_DEVICE_CONSOLE() {
        return (int)80L;
    }
    public static int FILE_DEVICE_NFP() {
        return (int)81L;
    }
    public static int FILE_DEVICE_SYSENV() {
        return (int)82L;
    }
    public static int FILE_DEVICE_VIRTUAL_BLOCK() {
        return (int)83L;
    }
    public static int FILE_DEVICE_POINT_OF_SERVICE() {
        return (int)84L;
    }
    public static int FILE_DEVICE_STORAGE_REPLICATION() {
        return (int)85L;
    }
    public static int FILE_DEVICE_TRUST_ENV() {
        return (int)86L;
    }
    public static int FILE_DEVICE_UCM() {
        return (int)87L;
    }
    public static int FILE_DEVICE_UCMTCPCI() {
        return (int)88L;
    }
    public static int FILE_DEVICE_PERSISTENT_MEMORY() {
        return (int)89L;
    }
    public static int FILE_DEVICE_NVDIMM() {
        return (int)90L;
    }
    public static int FILE_DEVICE_HOLOGRAPHIC() {
        return (int)91L;
    }
    public static int FILE_DEVICE_SDFXHCI() {
        return (int)92L;
    }
    public static int FILE_DEVICE_UCMUCSI() {
        return (int)93L;
    }
    public static int METHOD_BUFFERED() {
        return (int)0L;
    }
    public static int METHOD_IN_DIRECT() {
        return (int)1L;
    }
    public static int METHOD_OUT_DIRECT() {
        return (int)2L;
    }
    public static int METHOD_NEITHER() {
        return (int)3L;
    }
    public static int FILE_ANY_ACCESS() {
        return (int)0L;
    }
    public static int STORAGE_DEVICE_FLAGS_RANDOM_DEVICEGUID_REASON_CONFLICT() {
        return (int)1L;
    }
    public static int STORAGE_DEVICE_FLAGS_RANDOM_DEVICEGUID_REASON_NOHWID() {
        return (int)2L;
    }
    public static int STORAGE_DEVICE_FLAGS_PAGE_83_DEVICEGUID() {
        return (int)4L;
    }
    public static int RECOVERED_WRITES_VALID() {
        return (int)1L;
    }
    public static int UNRECOVERED_WRITES_VALID() {
        return (int)2L;
    }
    public static int RECOVERED_READS_VALID() {
        return (int)4L;
    }
    public static int UNRECOVERED_READS_VALID() {
        return (int)8L;
    }
    public static int WRITE_COMPRESSION_INFO_VALID() {
        return (int)16L;
    }
    public static int READ_COMPRESSION_INFO_VALID() {
        return (int)32L;
    }
    public static int MEDIA_ERASEABLE() {
        return (int)1L;
    }
    public static int MEDIA_WRITE_ONCE() {
        return (int)2L;
    }
    public static int MEDIA_READ_ONLY() {
        return (int)4L;
    }
    public static int MEDIA_READ_WRITE() {
        return (int)8L;
    }
    public static int MEDIA_WRITE_PROTECTED() {
        return (int)256L;
    }
    public static int STORAGE_FAILURE_PREDICTION_CONFIG_V1() {
        return (int)1L;
    }
    public static int SRB_TYPE_SCSI_REQUEST_BLOCK() {
        return (int)0L;
    }
    public static int SRB_TYPE_STORAGE_REQUEST_BLOCK() {
        return (int)1L;
    }
    public static int STORAGE_ADDRESS_TYPE_BTL8() {
        return (int)0L;
    }
    public static int STORAGE_RPMB_DESCRIPTOR_VERSION_1() {
        return (int)1L;
    }
    public static int STORAGE_RPMB_MINIMUM_RELIABLE_WRITE_SIZE() {
        return (int)512L;
    }
    public static int STORAGE_CRYPTO_CAPABILITY_VERSION_1() {
        return (int)1L;
    }
    public static int STORAGE_CRYPTO_DESCRIPTOR_VERSION_1() {
        return (int)1L;
    }
    public static int STORAGE_TEMPERATURE_VALUE_NOT_REPORTED() {
        return (int)32768L;
    }
    public static int STORAGE_TEMPERATURE_THRESHOLD_FLAG_ADAPTER_REQUEST() {
        return (int)1L;
    }
    public static int STORAGE_COMPONENT_ROLE_CACHE() {
        return (int)1L;
    }
    public static int STORAGE_COMPONENT_ROLE_TIERING() {
        return (int)2L;
    }
    public static int STORAGE_COMPONENT_ROLE_DATA() {
        return (int)4L;
    }
    public static int STORAGE_ATTRIBUTE_BYTE_ADDRESSABLE_IO() {
        return (int)1L;
    }
    public static int STORAGE_ATTRIBUTE_BLOCK_IO() {
        return (int)2L;
    }
    public static int STORAGE_ATTRIBUTE_DYNAMIC_PERSISTENCE() {
        return (int)4L;
    }
    public static int STORAGE_ATTRIBUTE_VOLATILE() {
        return (int)8L;
    }
    public static int STORAGE_ATTRIBUTE_ASYNC_EVENT_NOTIFICATION() {
        return (int)16L;
    }
    public static int STORAGE_ATTRIBUTE_PERF_SIZE_INDEPENDENT() {
        return (int)32L;
    }
    public static int STORAGE_DEVICE_MAX_OPERATIONAL_STATUS() {
        return (int)16L;
    }
    public static int DEVICE_DSM_FLAG_ENTIRE_DATA_SET_RANGE() {
        return (int)1L;
    }
    public static int DEVICE_DSM_FLAG_TRIM_BYPASS_RZAT() {
        return (int)1073741824L;
    }
    public static int DEVICE_DSM_NOTIFY_FLAG_BEGIN() {
        return (int)1L;
    }
    public static int DEVICE_DSM_NOTIFY_FLAG_END() {
        return (int)2L;
    }
    public static int STORAGE_OFFLOAD_MAX_TOKEN_LENGTH() {
        return (int)512L;
    }
    public static int STORAGE_OFFLOAD_TOKEN_ID_LENGTH() {
        return (int)504L;
    }
    public static int STORAGE_OFFLOAD_READ_RANGE_TRUNCATED() {
        return (int)1L;
    }
    public static int STORAGE_OFFLOAD_WRITE_RANGE_TRUNCATED() {
        return (int)1L;
    }
    public static int STORAGE_OFFLOAD_TOKEN_INVALID() {
        return (int)2L;
    }
    public static int DEVICE_DSM_FLAG_ALLOCATION_CONSOLIDATEABLE_ONLY() {
        return (int)1073741824L;
    }
    public static int DEVICE_DSM_PARAMETERS_V1() {
        return (int)1L;
    }
    public static int DEVICE_DSM_FLAG_REPAIR_INPUT_TOPOLOGY_ID_PRESENT() {
        return (int)1073741824L;
    }
    public static int DEVICE_DSM_FLAG_REPAIR_OUTPUT_PARITY_EXTENT() {
        return (int)536870912L;
    }
    public static int DEVICE_DSM_FLAG_SCRUB_SKIP_IN_SYNC() {
        return (int)268435456L;
    }
    public static int DEVICE_DSM_FLAG_SCRUB_OUTPUT_PARITY_EXTENT() {
        return (int)536870912L;
    }
    public static int DEVICE_DSM_FLAG_PHYSICAL_ADDRESSES_OMIT_TOTAL_RANGES() {
        return (int)268435456L;
    }
    public static int DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT_V1() {
        return (int)1L;
    }
    public static int DEVICE_STORAGE_NO_ERRORS() {
        return (int)1L;
    }
    public static int DEVICE_DSM_RANGE_ERROR_OUTPUT_V1() {
        return (int)1L;
    }
    public static int IOCTL_STORAGE_BC_VERSION() {
        return (int)1L;
    }
    public static int STORAGE_PRIORITY_HINT_SUPPORTED() {
        return (int)1L;
    }
    public static int ERROR_HISTORY_DIRECTORY_ENTRY_DEFAULT_COUNT() {
        return (int)8L;
    }
    public static int DEVICEDUMP_STRUCTURE_VERSION_V1() {
        return (int)1L;
    }
    public static int DEVICEDUMP_MAX_IDSTRING() {
        return (int)32L;
    }
    public static int MAX_FW_BUCKET_ID_LENGTH() {
        return (int)132L;
    }
    public static int DDUMP_FLAG_DATA_READ_FROM_DEVICE() {
        return (int)1L;
    }
    public static int FW_ISSUEID_NO_ISSUE() {
        return (int)0L;
    }
    public static int TC_PUBLIC_DEVICEDUMP_CONTENT_SMART() {
        return (int)1L;
    }
    public static int TC_PUBLIC_DEVICEDUMP_CONTENT_GPLOG() {
        return (int)2L;
    }
}



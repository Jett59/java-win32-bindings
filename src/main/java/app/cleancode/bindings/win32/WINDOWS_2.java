// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class WINDOWS_2 extends WINDOWS_1 {

    public static int DEVICEFAMILYDEVICEFORM_POINT_OF_SERVICE() {
        return (int)24L;
    }
    public static int DEVICEFAMILYDEVICEFORM_PRINTING() {
        return (int)25L;
    }
    public static int DEVICEFAMILYDEVICEFORM_THIN_CLIENT() {
        return (int)26L;
    }
    public static int DEVICEFAMILYDEVICEFORM_TOY() {
        return (int)27L;
    }
    public static int DEVICEFAMILYDEVICEFORM_VENDING() {
        return (int)28L;
    }
    public static int DEVICEFAMILYDEVICEFORM_INDUSTRY_OTHER() {
        return (int)29L;
    }
    public static int DEVICEFAMILYDEVICEFORM_XBOX_ONE() {
        return (int)30L;
    }
    public static int DEVICEFAMILYDEVICEFORM_XBOX_ONE_S() {
        return (int)31L;
    }
    public static int DEVICEFAMILYDEVICEFORM_XBOX_ONE_X() {
        return (int)32L;
    }
    public static int DEVICEFAMILYDEVICEFORM_XBOX_ONE_X_DEVKIT() {
        return (int)33L;
    }
    public static int DEVICEFAMILYDEVICEFORM_MAX() {
        return (int)33L;
    }
    public static int DLL_PROCESS_ATTACH() {
        return (int)1L;
    }
    public static int DLL_THREAD_ATTACH() {
        return (int)2L;
    }
    public static int DLL_THREAD_DETACH() {
        return (int)3L;
    }
    public static int DLL_PROCESS_DETACH() {
        return (int)0L;
    }
    public static int EVENTLOG_SEQUENTIAL_READ() {
        return (int)1L;
    }
    public static int EVENTLOG_SEEK_READ() {
        return (int)2L;
    }
    public static int EVENTLOG_FORWARDS_READ() {
        return (int)4L;
    }
    public static int EVENTLOG_BACKWARDS_READ() {
        return (int)8L;
    }
    public static int EVENTLOG_SUCCESS() {
        return (int)0L;
    }
    public static int EVENTLOG_ERROR_TYPE() {
        return (int)1L;
    }
    public static int EVENTLOG_WARNING_TYPE() {
        return (int)2L;
    }
    public static int EVENTLOG_INFORMATION_TYPE() {
        return (int)4L;
    }
    public static int EVENTLOG_AUDIT_SUCCESS() {
        return (int)8L;
    }
    public static int EVENTLOG_AUDIT_FAILURE() {
        return (int)16L;
    }
    public static int EVENTLOG_START_PAIRED_EVENT() {
        return (int)1L;
    }
    public static int EVENTLOG_END_PAIRED_EVENT() {
        return (int)2L;
    }
    public static int EVENTLOG_END_ALL_PAIRED_EVENTS() {
        return (int)4L;
    }
    public static int EVENTLOG_PAIRED_EVENT_ACTIVE() {
        return (int)8L;
    }
    public static int EVENTLOG_PAIRED_EVENT_INACTIVE() {
        return (int)16L;
    }
    public static int MAXLOGICALLOGNAMESIZE() {
        return (int)256L;
    }
    public static int REG_STANDARD_FORMAT() {
        return (int)1L;
    }
    public static int REG_LATEST_FORMAT() {
        return (int)2L;
    }
    public static int REG_NO_COMPRESSION() {
        return (int)4L;
    }
    public static int REG_FORCE_UNLOAD() {
        return (int)1L;
    }
    public static int SERVICE_KERNEL_DRIVER() {
        return (int)1L;
    }
    public static int SERVICE_FILE_SYSTEM_DRIVER() {
        return (int)2L;
    }
    public static int SERVICE_ADAPTER() {
        return (int)4L;
    }
    public static int SERVICE_RECOGNIZER_DRIVER() {
        return (int)8L;
    }
    public static int SERVICE_WIN32_OWN_PROCESS() {
        return (int)16L;
    }
    public static int SERVICE_WIN32_SHARE_PROCESS() {
        return (int)32L;
    }
    public static int SERVICE_USER_SERVICE() {
        return (int)64L;
    }
    public static int SERVICE_USERSERVICE_INSTANCE() {
        return (int)128L;
    }
    public static int SERVICE_INTERACTIVE_PROCESS() {
        return (int)256L;
    }
    public static int SERVICE_PKG_SERVICE() {
        return (int)512L;
    }
    public static int SERVICE_BOOT_START() {
        return (int)0L;
    }
    public static int SERVICE_SYSTEM_START() {
        return (int)1L;
    }
    public static int SERVICE_AUTO_START() {
        return (int)2L;
    }
    public static int SERVICE_DEMAND_START() {
        return (int)3L;
    }
    public static int SERVICE_DISABLED() {
        return (int)4L;
    }
    public static int SERVICE_ERROR_IGNORE() {
        return (int)0L;
    }
    public static int SERVICE_ERROR_NORMAL() {
        return (int)1L;
    }
    public static int SERVICE_ERROR_SEVERE() {
        return (int)2L;
    }
    public static int SERVICE_ERROR_CRITICAL() {
        return (int)3L;
    }
    public static int CM_SERVICE_NETWORK_BOOT_LOAD() {
        return (int)1L;
    }
    public static int CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD() {
        return (int)2L;
    }
    public static int CM_SERVICE_USB_DISK_BOOT_LOAD() {
        return (int)4L;
    }
    public static int CM_SERVICE_SD_DISK_BOOT_LOAD() {
        return (int)8L;
    }
    public static int CM_SERVICE_USB3_DISK_BOOT_LOAD() {
        return (int)16L;
    }
    public static int CM_SERVICE_MEASURED_BOOT_LOAD() {
        return (int)32L;
    }
    public static int CM_SERVICE_VERIFIER_BOOT_LOAD() {
        return (int)64L;
    }
    public static int CM_SERVICE_WINPE_BOOT_LOAD() {
        return (int)128L;
    }
    public static int CM_SERVICE_RAM_DISK_BOOT_LOAD() {
        return (int)256L;
    }
    public static int TAPE_DRIVE_FIXED() {
        return (int)1L;
    }
    public static int TAPE_DRIVE_SELECT() {
        return (int)2L;
    }
    public static int TAPE_DRIVE_INITIATOR() {
        return (int)4L;
    }
    public static int TAPE_DRIVE_ERASE_SHORT() {
        return (int)16L;
    }
    public static int TAPE_DRIVE_ERASE_LONG() {
        return (int)32L;
    }
    public static int TAPE_DRIVE_ERASE_BOP_ONLY() {
        return (int)64L;
    }
    public static int TAPE_DRIVE_ERASE_IMMEDIATE() {
        return (int)128L;
    }
    public static int TAPE_DRIVE_TAPE_CAPACITY() {
        return (int)256L;
    }
    public static int TAPE_DRIVE_TAPE_REMAINING() {
        return (int)512L;
    }
    public static int TAPE_DRIVE_FIXED_BLOCK() {
        return (int)1024L;
    }
    public static int TAPE_DRIVE_VARIABLE_BLOCK() {
        return (int)2048L;
    }
    public static int TAPE_DRIVE_WRITE_PROTECT() {
        return (int)4096L;
    }
    public static int TAPE_DRIVE_EOT_WZ_SIZE() {
        return (int)8192L;
    }
    public static int TAPE_DRIVE_ECC() {
        return (int)65536L;
    }
    public static int TAPE_DRIVE_COMPRESSION() {
        return (int)131072L;
    }
    public static int TAPE_DRIVE_PADDING() {
        return (int)262144L;
    }
    public static int TAPE_DRIVE_REPORT_SMKS() {
        return (int)524288L;
    }
    public static int TAPE_DRIVE_GET_ABSOLUTE_BLK() {
        return (int)1048576L;
    }
    public static int TAPE_DRIVE_GET_LOGICAL_BLK() {
        return (int)2097152L;
    }
    public static int TAPE_DRIVE_SET_EOT_WZ_SIZE() {
        return (int)4194304L;
    }
    public static int TAPE_DRIVE_EJECT_MEDIA() {
        return (int)16777216L;
    }
    public static int TAPE_DRIVE_CLEAN_REQUESTS() {
        return (int)33554432L;
    }
    public static int TAPE_DRIVE_SET_CMP_BOP_ONLY() {
        return (int)67108864L;
    }
    public static int APP_LOCAL_DEVICE_ID_SIZE() {
        return (int)32L;
    }
    public static int DM_UPDATE() {
        return (int)1L;
    }
    public static int DM_COPY() {
        return (int)2L;
    }
    public static int DM_PROMPT() {
        return (int)4L;
    }
    public static int DM_MODIFY() {
        return (int)8L;
    }
    public static int DC_FIELDS() {
        return (int)1L;
    }
    public static int DC_PAPERS() {
        return (int)2L;
    }
    public static int DC_PAPERSIZE() {
        return (int)3L;
    }
    public static int DC_MINEXTENT() {
        return (int)4L;
    }
    public static int DC_MAXEXTENT() {
        return (int)5L;
    }
    public static int DC_BINS() {
        return (int)6L;
    }
    public static int DC_DUPLEX() {
        return (int)7L;
    }
    public static int DC_SIZE() {
        return (int)8L;
    }
    public static int DC_EXTRA() {
        return (int)9L;
    }
    public static int DC_VERSION() {
        return (int)10L;
    }
    public static int DC_DRIVER() {
        return (int)11L;
    }
    public static int DC_BINNAMES() {
        return (int)12L;
    }
    public static int DC_ENUMRESOLUTIONS() {
        return (int)13L;
    }
    public static int DC_FILEDEPENDENCIES() {
        return (int)14L;
    }
    public static int DC_TRUETYPE() {
        return (int)15L;
    }
    public static int DC_PAPERNAMES() {
        return (int)16L;
    }
    public static int DC_ORIENTATION() {
        return (int)17L;
    }
    public static int DC_COPIES() {
        return (int)18L;
    }
    public static int FIND_FIRST_EX_CASE_SENSITIVE() {
        return (int)1L;
    }
    public static int FIND_FIRST_EX_LARGE_FETCH() {
        return (int)2L;
    }
    public static int FIND_FIRST_EX_ON_DISK_ENTRIES_ONLY() {
        return (int)4L;
    }
    public static int LOCKFILE_FAIL_IMMEDIATELY() {
        return (int)1L;
    }
    public static int LOCKFILE_EXCLUSIVE_LOCK() {
        return (int)2L;
    }
    public static int PROCESS_HEAP_REGION() {
        return (int)1L;
    }
    public static int PROCESS_HEAP_UNCOMMITTED_RANGE() {
        return (int)2L;
    }
    public static int PROCESS_HEAP_ENTRY_BUSY() {
        return (int)4L;
    }
    public static int PROCESS_HEAP_SEG_ALLOC() {
        return (int)8L;
    }
    public static int PROCESS_HEAP_ENTRY_MOVEABLE() {
        return (int)16L;
    }
    public static int PROCESS_HEAP_ENTRY_DDESHARE() {
        return (int)32L;
    }
    public static int EXCEPTION_DEBUG_EVENT() {
        return (int)1L;
    }
    public static int CREATE_THREAD_DEBUG_EVENT() {
        return (int)2L;
    }
    public static int CREATE_PROCESS_DEBUG_EVENT() {
        return (int)3L;
    }
    public static int EXIT_THREAD_DEBUG_EVENT() {
        return (int)4L;
    }
    public static int EXIT_PROCESS_DEBUG_EVENT() {
        return (int)5L;
    }
    public static int LOAD_DLL_DEBUG_EVENT() {
        return (int)6L;
    }
    public static int UNLOAD_DLL_DEBUG_EVENT() {
        return (int)7L;
    }
    public static int OUTPUT_DEBUG_STRING_EVENT() {
        return (int)8L;
    }
    public static int RIP_EVENT() {
        return (int)9L;
    }
    public static int LMEM_FIXED() {
        return (int)0L;
    }
    public static int LMEM_MOVEABLE() {
        return (int)2L;
    }
    public static int LMEM_NOCOMPACT() {
        return (int)16L;
    }
    public static int LMEM_NODISCARD() {
        return (int)32L;
    }
    public static int LMEM_ZEROINIT() {
        return (int)64L;
    }
    public static int LMEM_MODIFY() {
        return (int)128L;
    }
    public static int LMEM_DISCARDABLE() {
        return (int)3840L;
    }
    public static int LMEM_VALID_FLAGS() {
        return (int)3954L;
    }
    public static int LMEM_INVALID_HANDLE() {
        return (int)32768L;
    }
    public static int LMEM_DISCARDED() {
        return (int)16384L;
    }
    public static int LMEM_LOCKCOUNT() {
        return (int)255L;
    }
    public static int FILE_BEGIN() {
        return (int)0L;
    }
    public static int FILE_CURRENT() {
        return (int)1L;
    }
    public static int FILE_END() {
        return (int)2L;
    }
    public static int FILE_FLAG_OVERLAPPED() {
        return (int)1073741824L;
    }
    public static int FILE_FLAG_NO_BUFFERING() {
        return (int)536870912L;
    }
    public static int FILE_FLAG_RANDOM_ACCESS() {
        return (int)268435456L;
    }
    public static int FILE_FLAG_SEQUENTIAL_SCAN() {
        return (int)134217728L;
    }
    public static int FILE_FLAG_DELETE_ON_CLOSE() {
        return (int)67108864L;
    }
    public static int FILE_FLAG_BACKUP_SEMANTICS() {
        return (int)33554432L;
    }
    public static int FILE_FLAG_POSIX_SEMANTICS() {
        return (int)16777216L;
    }
    public static int FILE_FLAG_SESSION_AWARE() {
        return (int)8388608L;
    }
    public static int FILE_FLAG_OPEN_REPARSE_POINT() {
        return (int)2097152L;
    }
    public static int FILE_FLAG_OPEN_NO_RECALL() {
        return (int)1048576L;
    }
    public static int FILE_FLAG_FIRST_PIPE_INSTANCE() {
        return (int)524288L;
    }
    public static int FILE_FLAG_OPEN_REQUIRING_OPLOCK() {
        return (int)262144L;
    }
    public static int PROGRESS_CONTINUE() {
        return (int)0L;
    }
    public static int PROGRESS_CANCEL() {
        return (int)1L;
    }
    public static int PROGRESS_STOP() {
        return (int)2L;
    }
    public static int PROGRESS_QUIET() {
        return (int)3L;
    }
    public static int CALLBACK_CHUNK_FINISHED() {
        return (int)0L;
    }
    public static int CALLBACK_STREAM_SWITCH() {
        return (int)1L;
    }
    public static int COPY_FILE_FAIL_IF_EXISTS() {
        return (int)1L;
    }
    public static int COPY_FILE_RESTARTABLE() {
        return (int)2L;
    }
    public static int COPY_FILE_OPEN_SOURCE_FOR_WRITE() {
        return (int)4L;
    }
    public static int COPY_FILE_ALLOW_DECRYPTED_DESTINATION() {
        return (int)8L;
    }
    public static int COPY_FILE_COPY_SYMLINK() {
        return (int)2048L;
    }
    public static int COPY_FILE_NO_BUFFERING() {
        return (int)4096L;
    }
    public static int COPY_FILE_REQUEST_SECURITY_PRIVILEGES() {
        return (int)8192L;
    }
    public static int COPY_FILE_RESUME_FROM_PAUSE() {
        return (int)16384L;
    }
    public static int COPY_FILE_NO_OFFLOAD() {
        return (int)262144L;
    }
    public static int COPY_FILE_IGNORE_EDP_BLOCK() {
        return (int)4194304L;
    }
    public static int COPY_FILE_IGNORE_SOURCE_ENCRYPTION() {
        return (int)8388608L;
    }
    public static int COPY_FILE_DONT_REQUEST_DEST_WRITE_DAC() {
        return (int)33554432L;
    }
    public static int COPY_FILE_REQUEST_COMPRESSED_TRAFFIC() {
        return (int)268435456L;
    }
    public static int COPY_FILE_OPEN_AND_COPY_REPARSE_POINT() {
        return (int)2097152L;
    }
    public static int COPY_FILE_DIRECTORY() {
        return (int)128L;
    }
    public static int COPY_FILE_SKIP_ALTERNATE_STREAMS() {
        return (int)32768L;
    }
    public static int COPY_FILE_DISABLE_PRE_ALLOCATION() {
        return (int)67108864L;
    }
    public static int COPY_FILE_ENABLE_LOW_FREE_SPACE_MODE() {
        return (int)134217728L;
    }
    public static int REPLACEFILE_WRITE_THROUGH() {
        return (int)1L;
    }
    public static int REPLACEFILE_IGNORE_MERGE_ERRORS() {
        return (int)2L;
    }
    public static int REPLACEFILE_IGNORE_ACL_ERRORS() {
        return (int)4L;
    }
    public static int PIPE_ACCESS_INBOUND() {
        return (int)1L;
    }
    public static int PIPE_ACCESS_OUTBOUND() {
        return (int)2L;
    }
    public static int PIPE_ACCESS_DUPLEX() {
        return (int)3L;
    }
    public static int PIPE_CLIENT_END() {
        return (int)0L;
    }
    public static int PIPE_SERVER_END() {
        return (int)1L;
    }
    public static int PIPE_WAIT() {
        return (int)0L;
    }
    public static int PIPE_NOWAIT() {
        return (int)1L;
    }
    public static int PIPE_READMODE_BYTE() {
        return (int)0L;
    }
    public static int PIPE_READMODE_MESSAGE() {
        return (int)2L;
    }
    public static int PIPE_TYPE_BYTE() {
        return (int)0L;
    }
    public static int PIPE_TYPE_MESSAGE() {
        return (int)4L;
    }
    public static int PIPE_ACCEPT_REMOTE_CLIENTS() {
        return (int)0L;
    }
    public static int PIPE_REJECT_REMOTE_CLIENTS() {
        return (int)8L;
    }
    public static int PIPE_UNLIMITED_INSTANCES() {
        return (int)255L;
    }
    public static int SECURITY_CONTEXT_TRACKING() {
        return (int)262144L;
    }
    public static int SECURITY_EFFECTIVE_ONLY() {
        return (int)524288L;
    }
    public static int SECURITY_SQOS_PRESENT() {
        return (int)1048576L;
    }
    public static int SECURITY_VALID_SQOS_FLAGS() {
        return (int)2031616L;
    }
    public static int FAIL_FAST_GENERATE_EXCEPTION_ADDRESS() {
        return (int)1L;
    }
    public static int FAIL_FAST_NO_HARD_ERROR_DLG() {
        return (int)2L;
    }
    public static int DTR_CONTROL_DISABLE() {
        return (int)0L;
    }
    public static int DTR_CONTROL_ENABLE() {
        return (int)1L;
    }
    public static int DTR_CONTROL_HANDSHAKE() {
        return (int)2L;
    }
    public static int RTS_CONTROL_DISABLE() {
        return (int)0L;
    }
    public static int RTS_CONTROL_ENABLE() {
        return (int)1L;
    }
    public static int RTS_CONTROL_HANDSHAKE() {
        return (int)2L;
    }
    public static int RTS_CONTROL_TOGGLE() {
        return (int)3L;
    }
    public static int GMEM_FIXED() {
        return (int)0L;
    }
    public static int GMEM_MOVEABLE() {
        return (int)2L;
    }
    public static int GMEM_NOCOMPACT() {
        return (int)16L;
    }
    public static int GMEM_NODISCARD() {
        return (int)32L;
    }
    public static int GMEM_ZEROINIT() {
        return (int)64L;
    }
    public static int GMEM_MODIFY() {
        return (int)128L;
    }
    public static int GMEM_DISCARDABLE() {
        return (int)256L;
    }
    public static int GMEM_NOT_BANKED() {
        return (int)4096L;
    }
    public static int GMEM_SHARE() {
        return (int)8192L;
    }
    public static int GMEM_DDESHARE() {
        return (int)8192L;
    }
    public static int GMEM_NOTIFY() {
        return (int)16384L;
    }
    public static int GMEM_VALID_FLAGS() {
        return (int)32626L;
    }
    public static int GMEM_INVALID_HANDLE() {
        return (int)32768L;
    }
    public static int GMEM_DISCARDED() {
        return (int)16384L;
    }
    public static int GMEM_LOCKCOUNT() {
        return (int)255L;
    }
    public static int DEBUG_PROCESS() {
        return (int)1L;
    }
    public static int DEBUG_ONLY_THIS_PROCESS() {
        return (int)2L;
    }
    public static int CREATE_SUSPENDED() {
        return (int)4L;
    }
    public static int DETACHED_PROCESS() {
        return (int)8L;
    }
    public static int CREATE_NEW_CONSOLE() {
        return (int)16L;
    }
    public static int NORMAL_PRIORITY_CLASS() {
        return (int)32L;
    }
    public static int IDLE_PRIORITY_CLASS() {
        return (int)64L;
    }
    public static int HIGH_PRIORITY_CLASS() {
        return (int)128L;
    }
    public static int REALTIME_PRIORITY_CLASS() {
        return (int)256L;
    }
    public static int CREATE_NEW_PROCESS_GROUP() {
        return (int)512L;
    }
    public static int CREATE_UNICODE_ENVIRONMENT() {
        return (int)1024L;
    }
    public static int CREATE_SEPARATE_WOW_VDM() {
        return (int)2048L;
    }
    public static int CREATE_SHARED_WOW_VDM() {
        return (int)4096L;
    }
    public static int CREATE_FORCEDOS() {
        return (int)8192L;
    }
    public static int BELOW_NORMAL_PRIORITY_CLASS() {
        return (int)16384L;
    }
    public static int ABOVE_NORMAL_PRIORITY_CLASS() {
        return (int)32768L;
    }
    public static int INHERIT_PARENT_AFFINITY() {
        return (int)65536L;
    }
    public static int INHERIT_CALLER_PRIORITY() {
        return (int)131072L;
    }
    public static int CREATE_PROTECTED_PROCESS() {
        return (int)262144L;
    }
    public static int EXTENDED_STARTUPINFO_PRESENT() {
        return (int)524288L;
    }
    public static int PROCESS_MODE_BACKGROUND_BEGIN() {
        return (int)1048576L;
    }
    public static int PROCESS_MODE_BACKGROUND_END() {
        return (int)2097152L;
    }
    public static int CREATE_SECURE_PROCESS() {
        return (int)4194304L;
    }
    public static int CREATE_BREAKAWAY_FROM_JOB() {
        return (int)16777216L;
    }
    public static int CREATE_PRESERVE_CODE_AUTHZ_LEVEL() {
        return (int)33554432L;
    }
    public static int CREATE_DEFAULT_ERROR_MODE() {
        return (int)67108864L;
    }
    public static int CREATE_NO_WINDOW() {
        return (int)134217728L;
    }
    public static int PROFILE_USER() {
        return (int)268435456L;
    }
    public static int PROFILE_KERNEL() {
        return (int)536870912L;
    }
    public static int PROFILE_SERVER() {
        return (int)1073741824L;
    }
    public static int STACK_SIZE_PARAM_IS_A_RESERVATION() {
        return (int)65536L;
    }
    public static int THREAD_PRIORITY_NORMAL() {
        return (int)0L;
    }
    public static int THREAD_MODE_BACKGROUND_BEGIN() {
        return (int)65536L;
    }
    public static int THREAD_MODE_BACKGROUND_END() {
        return (int)131072L;
    }
    public static int VOLUME_NAME_DOS() {
        return (int)0L;
    }
    public static int VOLUME_NAME_GUID() {
        return (int)1L;
    }
    public static int VOLUME_NAME_NT() {
        return (int)2L;
    }
    public static int VOLUME_NAME_NONE() {
        return (int)4L;
    }
    public static int FILE_NAME_NORMALIZED() {
        return (int)0L;
    }
    public static int FILE_NAME_OPENED() {
        return (int)8L;
    }
    public static int DRIVE_UNKNOWN() {
        return (int)0L;
    }
    public static int DRIVE_NO_ROOT_DIR() {
        return (int)1L;
    }
    public static int DRIVE_REMOVABLE() {
        return (int)2L;
    }
    public static int DRIVE_FIXED() {
        return (int)3L;
    }
    public static int DRIVE_REMOTE() {
        return (int)4L;
    }
    public static int DRIVE_CDROM() {
        return (int)5L;
    }
    public static int DRIVE_RAMDISK() {
        return (int)6L;
    }
    public static int FILE_TYPE_UNKNOWN() {
        return (int)0L;
    }
    public static int FILE_TYPE_DISK() {
        return (int)1L;
    }
    public static int FILE_TYPE_CHAR() {
        return (int)2L;
    }
    public static int FILE_TYPE_PIPE() {
        return (int)3L;
    }
    public static int FILE_TYPE_REMOTE() {
        return (int)32768L;
    }
    public static int NOPARITY() {
        return (int)0L;
    }
    public static int ODDPARITY() {
        return (int)1L;
    }
    public static int EVENPARITY() {
        return (int)2L;
    }
    public static int MARKPARITY() {
        return (int)3L;
    }
    public static int SPACEPARITY() {
        return (int)4L;
    }
    public static int ONESTOPBIT() {
        return (int)0L;
    }
    public static int ONE5STOPBITS() {
        return (int)1L;
    }
    public static int TWOSTOPBITS() {
        return (int)2L;
    }
    public static int IGNORE() {
        return (int)0L;
    }
    public static int CBR_110() {
        return (int)110L;
    }
    public static int CBR_300() {
        return (int)300L;
    }
    public static int CBR_600() {
        return (int)600L;
    }
    public static int CBR_1200() {
        return (int)1200L;
    }
    public static int CBR_2400() {
        return (int)2400L;
    }
    public static int CBR_4800() {
        return (int)4800L;
    }
    public static int CBR_9600() {
        return (int)9600L;
    }
    public static int CBR_14400() {
        return (int)14400L;
    }
    public static int CBR_19200() {
        return (int)19200L;
    }
    public static int CBR_38400() {
        return (int)38400L;
    }
    public static int CBR_56000() {
        return (int)56000L;
    }
    public static int CBR_57600() {
        return (int)57600L;
    }
    public static int CBR_115200() {
        return (int)115200L;
    }
    public static int CBR_128000() {
        return (int)128000L;
    }
    public static int CBR_256000() {
        return (int)256000L;
    }
    public static int CE_RXOVER() {
        return (int)1L;
    }
    public static int CE_OVERRUN() {
        return (int)2L;
    }
    public static int CE_RXPARITY() {
        return (int)4L;
    }
    public static int CE_FRAME() {
        return (int)8L;
    }
    public static int CE_BREAK() {
        return (int)16L;
    }
    public static int CE_TXFULL() {
        return (int)256L;
    }
    public static int CE_PTO() {
        return (int)512L;
    }
    public static int CE_IOE() {
        return (int)1024L;
    }
    public static int CE_DNS() {
        return (int)2048L;
    }
    public static int CE_OOP() {
        return (int)4096L;
    }
    public static int CE_MODE() {
        return (int)32768L;
    }
    public static int EV_RXCHAR() {
        return (int)1L;
    }
    public static int EV_RXFLAG() {
        return (int)2L;
    }
    public static int EV_TXEMPTY() {
        return (int)4L;
    }
    public static int EV_CTS() {
        return (int)8L;
    }
    public static int EV_DSR() {
        return (int)16L;
    }
    public static int EV_RLSD() {
        return (int)32L;
    }
    public static int EV_BREAK() {
        return (int)64L;
    }
    public static int EV_ERR() {
        return (int)128L;
    }
    public static int EV_RING() {
        return (int)256L;
    }
    public static int EV_PERR() {
        return (int)512L;
    }
    public static int EV_RX80FULL() {
        return (int)1024L;
    }
    public static int EV_EVENT1() {
        return (int)2048L;
    }
    public static int EV_EVENT2() {
        return (int)4096L;
    }
    public static int SETXOFF() {
        return (int)1L;
    }
    public static int SETXON() {
        return (int)2L;
    }
    public static int SETRTS() {
        return (int)3L;
    }
    public static int CLRRTS() {
        return (int)4L;
    }
    public static int SETDTR() {
        return (int)5L;
    }
    public static int CLRDTR() {
        return (int)6L;
    }
    public static int RESETDEV() {
        return (int)7L;
    }
    public static int SETBREAK() {
        return (int)8L;
    }
    public static int CLRBREAK() {
        return (int)9L;
    }
    public static int PURGE_TXABORT() {
        return (int)1L;
    }
    public static int PURGE_RXABORT() {
        return (int)2L;
    }
    public static int PURGE_TXCLEAR() {
        return (int)4L;
    }
    public static int PURGE_RXCLEAR() {
        return (int)8L;
    }
    public static int LPTx() {
        return (int)128L;
    }
    public static int S_QUEUEEMPTY() {
        return (int)0L;
    }
    public static int S_THRESHOLD() {
        return (int)1L;
    }
    public static int S_ALLTHRESHOLD() {
        return (int)2L;
    }
    public static int S_NORMAL() {
        return (int)0L;
    }
    public static int S_LEGATO() {
        return (int)1L;
    }
    public static int S_STACCATO() {
        return (int)2L;
    }
    public static int S_PERIOD512() {
        return (int)0L;
    }
    public static int S_PERIOD1024() {
        return (int)1L;
    }
    public static int S_PERIOD2048() {
        return (int)2L;
    }
    public static int S_PERIODVOICE() {
        return (int)3L;
    }
    public static int S_WHITE512() {
        return (int)4L;
    }
    public static int S_WHITE1024() {
        return (int)5L;
    }
    public static int S_WHITE2048() {
        return (int)6L;
    }
    public static int S_WHITEVOICE() {
        return (int)7L;
    }
    public static int NMPWAIT_NOWAIT() {
        return (int)1L;
    }
    public static int NMPWAIT_USE_DEFAULT_WAIT() {
        return (int)0L;
    }
    public static int OF_READ() {
        return (int)0L;
    }
    public static int OF_WRITE() {
        return (int)1L;
    }
    public static int OF_READWRITE() {
        return (int)2L;
    }
    public static int OF_SHARE_COMPAT() {
        return (int)0L;
    }
    public static int OF_SHARE_EXCLUSIVE() {
        return (int)16L;
    }
    public static int OF_SHARE_DENY_WRITE() {
        return (int)32L;
    }
    public static int OF_SHARE_DENY_READ() {
        return (int)48L;
    }
    public static int OF_SHARE_DENY_NONE() {
        return (int)64L;
    }
    public static int OF_PARSE() {
        return (int)256L;
    }
    public static int OF_DELETE() {
        return (int)512L;
    }
    public static int OF_VERIFY() {
        return (int)1024L;
    }
    public static int OF_CANCEL() {
        return (int)2048L;
    }
    public static int OF_CREATE() {
        return (int)4096L;
    }
    public static int OF_PROMPT() {
        return (int)8192L;
    }
    public static int OF_EXIST() {
        return (int)16384L;
    }
    public static int OF_REOPEN() {
        return (int)32768L;
    }
    public static int OFS_MAXPATHNAME() {
        return (int)128L;
    }
    public static int MAXINTATOM() {
        return (int)49152L;
    }
    public static int SCS_32BIT_BINARY() {
        return (int)0L;
    }
    public static int SCS_DOS_BINARY() {
        return (int)1L;
    }
    public static int SCS_WOW_BINARY() {
        return (int)2L;
    }
    public static int SCS_PIF_BINARY() {
        return (int)3L;
    }
    public static int SCS_POSIX_BINARY() {
        return (int)4L;
    }
    public static int SCS_OS216_BINARY() {
        return (int)5L;
    }
    public static int SCS_64BIT_BINARY() {
        return (int)6L;
    }
    public static int FIBER_FLAG_FLOAT_SWITCH() {
        return (int)1L;
    }
    public static int PROCESS_DEP_ENABLE() {
        return (int)1L;
    }
    public static int PROCESS_DEP_DISABLE_ATL_THUNK_EMULATION() {
        return (int)2L;
    }
    public static int FILE_SKIP_COMPLETION_PORT_ON_SUCCESS() {
        return (int)1L;
    }
    public static int FILE_SKIP_SET_EVENT_ON_HANDLE() {
        return (int)2L;
    }
    public static int SEM_FAILCRITICALERRORS() {
        return (int)1L;
    }
    public static int SEM_NOGPFAULTERRORBOX() {
        return (int)2L;
    }
    public static int SEM_NOALIGNMENTFAULTEXCEPT() {
        return (int)4L;
    }
    public static int SEM_NOOPENFILEERRORBOX() {
        return (int)32768L;
    }
    public static int HANDLE_FLAG_INHERIT() {
        return (int)1L;
    }
    public static int HANDLE_FLAG_PROTECT_FROM_CLOSE() {
        return (int)2L;
    }
    public static int HINSTANCE_ERROR() {
        return (int)32L;
    }
    public static int GET_TAPE_MEDIA_INFORMATION() {
        return (int)0L;
    }
    public static int GET_TAPE_DRIVE_INFORMATION() {
        return (int)1L;
    }
    public static int SET_TAPE_MEDIA_INFORMATION() {
        return (int)0L;
    }
    public static int SET_TAPE_DRIVE_INFORMATION() {
        return (int)1L;
    }
    public static int FORMAT_MESSAGE_ALLOCATE_BUFFER() {
        return (int)256L;
    }
    public static int FORMAT_MESSAGE_IGNORE_INSERTS() {
        return (int)512L;
    }
    public static int FORMAT_MESSAGE_FROM_STRING() {
        return (int)1024L;
    }
    public static int FORMAT_MESSAGE_FROM_HMODULE() {
        return (int)2048L;
    }
    public static int FORMAT_MESSAGE_FROM_SYSTEM() {
        return (int)4096L;
    }
    public static int FORMAT_MESSAGE_ARGUMENT_ARRAY() {
        return (int)8192L;
    }
    public static int FORMAT_MESSAGE_MAX_WIDTH_MASK() {
        return (int)255L;
    }
    public static int FILE_ENCRYPTABLE() {
        return (int)0L;
    }
    public static int FILE_IS_ENCRYPTED() {
        return (int)1L;
    }
    public static int FILE_SYSTEM_ATTR() {
        return (int)2L;
    }
    public static int FILE_ROOT_DIR() {
        return (int)3L;
    }
    public static int FILE_SYSTEM_DIR() {
        return (int)4L;
    }
    public static int FILE_UNKNOWN() {
        return (int)5L;
    }
    public static int FILE_SYSTEM_NOT_SUPPORT() {
        return (int)6L;
    }
    public static int FILE_USER_DISALLOWED() {
        return (int)7L;
    }
    public static int FILE_READ_ONLY() {
        return (int)8L;
    }
    public static int FILE_DIR_DISALLOWED() {
        return (int)9L;
    }
    public static int BACKUP_INVALID() {
        return (int)0L;
    }
    public static int BACKUP_DATA() {
        return (int)1L;
    }
    public static int BACKUP_EA_DATA() {
        return (int)2L;
    }
    public static int BACKUP_SECURITY_DATA() {
        return (int)3L;
    }
    public static int BACKUP_ALTERNATE_DATA() {
        return (int)4L;
    }
    public static int BACKUP_LINK() {
        return (int)5L;
    }
    public static int BACKUP_PROPERTY_DATA() {
        return (int)6L;
    }
    public static int BACKUP_OBJECT_ID() {
        return (int)7L;
    }
    public static int BACKUP_REPARSE_DATA() {
        return (int)8L;
    }
    public static int BACKUP_SPARSE_BLOCK() {
        return (int)9L;
    }
    public static int BACKUP_TXFS_DATA() {
        return (int)10L;
    }
    public static int BACKUP_GHOSTED_FILE_EXTENTS() {
        return (int)11L;
    }
    public static int STREAM_NORMAL_ATTRIBUTE() {
        return (int)0L;
    }
    public static int STREAM_MODIFIED_WHEN_READ() {
        return (int)1L;
    }
    public static int STREAM_CONTAINS_SECURITY() {
        return (int)2L;
    }
    public static int STREAM_CONTAINS_PROPERTIES() {
        return (int)4L;
    }
    public static int STREAM_SPARSE_ATTRIBUTE() {
        return (int)8L;
    }
    public static int STREAM_CONTAINS_GHOSTED_FILE_EXTENTS() {
        return (int)16L;
    }
    public static int STARTF_USESHOWWINDOW() {
        return (int)1L;
    }
    public static int STARTF_USESIZE() {
        return (int)2L;
    }
    public static int STARTF_USEPOSITION() {
        return (int)4L;
    }
    public static int STARTF_USECOUNTCHARS() {
        return (int)8L;
    }
    public static int STARTF_USEFILLATTRIBUTE() {
        return (int)16L;
    }
    public static int STARTF_RUNFULLSCREEN() {
        return (int)32L;
    }
    public static int STARTF_FORCEONFEEDBACK() {
        return (int)64L;
    }
    public static int STARTF_FORCEOFFFEEDBACK() {
        return (int)128L;
    }
    public static int STARTF_USESTDHANDLES() {
        return (int)256L;
    }
    public static int STARTF_USEHOTKEY() {
        return (int)512L;
    }
    public static int STARTF_TITLEISLINKNAME() {
        return (int)2048L;
    }
    public static int STARTF_TITLEISAPPID() {
        return (int)4096L;
    }
    public static int STARTF_PREVENTPINNING() {
        return (int)8192L;
    }
    public static int STARTF_UNTRUSTEDSOURCE() {
        return (int)32768L;
    }
    public static int SHUTDOWN_NORETRY() {
        return (int)1L;
    }
    public static int PROTECTION_LEVEL_WINTCB_LIGHT() {
        return (int)0L;
    }
    public static int PROTECTION_LEVEL_WINDOWS() {
        return (int)1L;
    }
    public static int PROTECTION_LEVEL_WINDOWS_LIGHT() {
        return (int)2L;
    }
    public static int PROTECTION_LEVEL_ANTIMALWARE_LIGHT() {
        return (int)3L;
    }
    public static int PROTECTION_LEVEL_LSA_LIGHT() {
        return (int)4L;
    }
    public static int PROTECTION_LEVEL_WINTCB() {
        return (int)5L;
    }
    public static int PROTECTION_LEVEL_CODEGEN_LIGHT() {
        return (int)6L;
    }
    public static int PROTECTION_LEVEL_AUTHENTICODE() {
        return (int)7L;
    }
    public static int PROTECTION_LEVEL_PPL_APP() {
        return (int)8L;
    }
    public static int PROCESS_NAME_NATIVE() {
        return (int)1L;
    }
    public static int PROC_THREAD_ATTRIBUTE_NUMBER() {
        return (int)65535L;
    }
    public static int PROC_THREAD_ATTRIBUTE_THREAD() {
        return (int)65536L;
    }
    public static int PROC_THREAD_ATTRIBUTE_INPUT() {
        return (int)131072L;
    }
    public static int PROC_THREAD_ATTRIBUTE_ADDITIVE() {
        return (int)262144L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_DEP_ENABLE() {
        return (int)1L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_DEP_ATL_THUNK_ENABLE() {
        return (int)2L;
    }
    public static int PROCESS_CREATION_MITIGATION_POLICY_SEHOP_ENABLE() {
        return (int)4L;
    }
    public static int PROCESS_CREATION_CHILD_PROCESS_RESTRICTED() {
        return (int)1L;
    }
    public static int PROCESS_CREATION_CHILD_PROCESS_OVERRIDE() {
        return (int)2L;
    }
    public static int PROCESS_CREATION_CHILD_PROCESS_RESTRICTED_UNLESS_SECURE() {
        return (int)4L;
    }
    public static int PROCESS_CREATION_ALL_APPLICATION_PACKAGES_OPT_OUT() {
        return (int)1L;
    }
    public static int PROCESS_CREATION_DESKTOP_APP_BREAKAWAY_ENABLE_PROCESS_TREE() {
        return (int)1L;
    }
    public static int PROCESS_CREATION_DESKTOP_APP_BREAKAWAY_DISABLE_PROCESS_TREE() {
        return (int)2L;
    }
    public static int PROCESS_CREATION_DESKTOP_APP_BREAKAWAY_OVERRIDE() {
        return (int)4L;
    }
    public static int ATOM_FLAG_GLOBAL() {
        return (int)2L;
    }
    public static int BASE_SEARCH_PATH_ENABLE_SAFE_SEARCHMODE() {
        return (int)1L;
    }
    public static int BASE_SEARCH_PATH_DISABLE_SAFE_SEARCHMODE() {
        return (int)65536L;
    }
    public static int BASE_SEARCH_PATH_PERMANENT() {
        return (int)32768L;
    }
    public static int DDD_RAW_TARGET_PATH() {
        return (int)1L;
    }
    public static int DDD_REMOVE_DEFINITION() {
        return (int)2L;
    }
    public static int DDD_EXACT_MATCH_ON_REMOVE() {
        return (int)4L;
    }
    public static int DDD_NO_BROADCAST_SYSTEM() {
        return (int)8L;
    }
    public static int DDD_LUID_BROADCAST_DRIVE() {
        return (int)16L;
    }
    public static int MOVEFILE_REPLACE_EXISTING() {
        return (int)1L;
    }
    public static int MOVEFILE_COPY_ALLOWED() {
        return (int)2L;
    }
    public static int MOVEFILE_DELAY_UNTIL_REBOOT() {
        return (int)4L;
    }
    public static int MOVEFILE_WRITE_THROUGH() {
        return (int)8L;
    }
    public static int MOVEFILE_CREATE_HARDLINK() {
        return (int)16L;
    }
    public static int MOVEFILE_FAIL_IF_NOT_TRACKABLE() {
        return (int)32L;
    }
    public static int EVENTLOG_FULL_INFO() {
        return (int)0L;
    }
    public static int OPERATION_API_VERSION() {
        return (int)1L;
    }
    public static int OPERATION_START_TRACE_CURRENT_THREAD() {
        return (int)1L;
    }
    public static int OPERATION_END_DISCARD() {
        return (int)1L;
    }
    public static int MAX_COMPUTERNAME_LENGTH() {
        return (int)15L;
    }
    public static int LOGON32_LOGON_INTERACTIVE() {
        return (int)2L;
    }
    public static int LOGON32_LOGON_NETWORK() {
        return (int)3L;
    }
    public static int LOGON32_LOGON_BATCH() {
        return (int)4L;
    }
    public static int LOGON32_LOGON_SERVICE() {
        return (int)5L;
    }
    public static int LOGON32_LOGON_UNLOCK() {
        return (int)7L;
    }
    public static int LOGON32_LOGON_NETWORK_CLEARTEXT() {
        return (int)8L;
    }
    public static int LOGON32_LOGON_NEW_CREDENTIALS() {
        return (int)9L;
    }
    public static int LOGON32_PROVIDER_DEFAULT() {
        return (int)0L;
    }
    public static int LOGON32_PROVIDER_WINNT35() {
        return (int)1L;
    }
    public static int LOGON32_PROVIDER_WINNT40() {
        return (int)2L;
    }
    public static int LOGON32_PROVIDER_WINNT50() {
        return (int)3L;
    }
    public static int LOGON32_PROVIDER_VIRTUAL() {
        return (int)4L;
    }
    public static int LOGON_WITH_PROFILE() {
        return (int)1L;
    }
    public static int LOGON_NETCREDENTIALS_ONLY() {
        return (int)2L;
    }
    public static int HW_PROFILE_GUIDLEN() {
        return (int)39L;
    }
    public static int MAX_PROFILE_LEN() {
        return (int)80L;
    }
    public static int FACILITY_NULL() {
        return (int)0L;
    }
    public static int FACILITY_RPC() {
        return (int)1L;
    }
    public static int FACILITY_DISPATCH() {
        return (int)2L;
    }
    public static int FACILITY_STORAGE() {
        return (int)3L;
    }
    public static int FACILITY_ITF() {
        return (int)4L;
    }
    public static int FACILITY_WIN32() {
        return (int)7L;
    }
    public static int FACILITY_WINDOWS() {
        return (int)8L;
    }
    public static int FACILITY_SSPI() {
        return (int)9L;
    }
    public static int FACILITY_SECURITY() {
        return (int)9L;
    }
    public static int FACILITY_CONTROL() {
        return (int)10L;
    }
    public static int FACILITY_CERT() {
        return (int)11L;
    }
    public static int FACILITY_INTERNET() {
        return (int)12L;
    }
    public static int FACILITY_MEDIASERVER() {
        return (int)13L;
    }
    public static int FACILITY_MSMQ() {
        return (int)14L;
    }
    public static int FACILITY_SETUPAPI() {
        return (int)15L;
    }
    public static int FACILITY_SCARD() {
        return (int)16L;
    }
    public static int FACILITY_COMPLUS() {
        return (int)17L;
    }
    public static int FACILITY_AAF() {
        return (int)18L;
    }
    public static int FACILITY_URT() {
        return (int)19L;
    }
    public static int FACILITY_ACS() {
        return (int)20L;
    }
    public static int FACILITY_DPLAY() {
        return (int)21L;
    }
    public static int FACILITY_UMI() {
        return (int)22L;
    }
    public static int FACILITY_SXS() {
        return (int)23L;
    }
    public static int FACILITY_WINDOWS_CE() {
        return (int)24L;
    }
    public static int FACILITY_HTTP() {
        return (int)25L;
    }
    public static int FACILITY_USERMODE_COMMONLOG() {
        return (int)26L;
    }
    public static int FACILITY_WER() {
        return (int)27L;
    }
    public static int FACILITY_USERMODE_FILTER_MANAGER() {
        return (int)31L;
    }
    public static int FACILITY_BACKGROUNDCOPY() {
        return (int)32L;
    }
    public static int FACILITY_CONFIGURATION() {
        return (int)33L;
    }
    public static int FACILITY_WIA() {
        return (int)33L;
    }
    public static int FACILITY_STATE_MANAGEMENT() {
        return (int)34L;
    }
    public static int FACILITY_METADIRECTORY() {
        return (int)35L;
    }
    public static int FACILITY_WINDOWSUPDATE() {
        return (int)36L;
    }
    public static int FACILITY_DIRECTORYSERVICE() {
        return (int)37L;
    }
    public static int FACILITY_GRAPHICS() {
        return (int)38L;
    }
    public static int FACILITY_SHELL() {
        return (int)39L;
    }
    public static int FACILITY_NAP() {
        return (int)39L;
    }
    public static int FACILITY_TPM_SERVICES() {
        return (int)40L;
    }
    public static int FACILITY_TPM_SOFTWARE() {
        return (int)41L;
    }
    public static int FACILITY_UI() {
        return (int)42L;
    }
    public static int FACILITY_XAML() {
        return (int)43L;
    }
    public static int FACILITY_ACTION_QUEUE() {
        return (int)44L;
    }
    public static int FACILITY_PLA() {
        return (int)48L;
    }
    public static int FACILITY_WINDOWS_SETUP() {
        return (int)48L;
    }
    public static int FACILITY_FVE() {
        return (int)49L;
    }
    public static int FACILITY_FWP() {
        return (int)50L;
    }
    public static int FACILITY_WINRM() {
        return (int)51L;
    }
    public static int FACILITY_NDIS() {
        return (int)52L;
    }
    public static int FACILITY_USERMODE_HYPERVISOR() {
        return (int)53L;
    }
    public static int FACILITY_CMI() {
        return (int)54L;
    }
    public static int FACILITY_USERMODE_VIRTUALIZATION() {
        return (int)55L;
    }
    public static int FACILITY_USERMODE_VOLMGR() {
        return (int)56L;
    }
    public static int FACILITY_BCD() {
        return (int)57L;
    }
    public static int FACILITY_USERMODE_VHD() {
        return (int)58L;
    }
    public static int FACILITY_USERMODE_HNS() {
        return (int)59L;
    }
    public static int FACILITY_SDIAG() {
        return (int)60L;
    }
    public static int FACILITY_WEBSERVICES() {
        return (int)61L;
    }
    public static int FACILITY_WINPE() {
        return (int)61L;
    }
    public static int FACILITY_WPN() {
        return (int)62L;
    }
    public static int FACILITY_WINDOWS_STORE() {
        return (int)63L;
    }
    public static int FACILITY_INPUT() {
        return (int)64L;
    }
    public static int FACILITY_QUIC() {
        return (int)65L;
    }
    public static int FACILITY_EAP() {
        return (int)66L;
    }
    public static int FACILITY_WINDOWS_DEFENDER() {
        return (int)80L;
    }
    public static int FACILITY_OPC() {
        return (int)81L;
    }
    public static int FACILITY_XPS() {
        return (int)82L;
    }
    public static int FACILITY_MBN() {
        return (int)84L;
    }
    public static int FACILITY_POWERSHELL() {
        return (int)84L;
    }
    public static int FACILITY_RAS() {
        return (int)83L;
    }
    public static int FACILITY_P2P_INT() {
        return (int)98L;
    }
    public static int FACILITY_P2P() {
        return (int)99L;
    }
    public static int FACILITY_DAF() {
        return (int)100L;
    }
    public static int FACILITY_BLUETOOTH_ATT() {
        return (int)101L;
    }
    public static int FACILITY_AUDIO() {
        return (int)102L;
    }
    public static int FACILITY_STATEREPOSITORY() {
        return (int)103L;
    }
    public static int FACILITY_VISUALCPP() {
        return (int)109L;
    }
    public static int FACILITY_SCRIPT() {
        return (int)112L;
    }
    public static int FACILITY_PARSE() {
        return (int)113L;
    }
    public static int FACILITY_BLB() {
        return (int)120L;
    }
    public static int FACILITY_BLB_CLI() {
        return (int)121L;
    }
    public static int FACILITY_WSBAPP() {
        return (int)122L;
    }
    public static int FACILITY_BLBUI() {
        return (int)128L;
    }
    public static int FACILITY_USN() {
        return (int)129L;
    }
    public static int FACILITY_USERMODE_VOLSNAP() {
        return (int)130L;
    }
    public static int FACILITY_TIERING() {
        return (int)131L;
    }
    public static int FACILITY_WSB_ONLINE() {
        return (int)133L;
    }
    public static int FACILITY_ONLINE_ID() {
        return (int)134L;
    }
    public static int FACILITY_DEVICE_UPDATE_AGENT() {
        return (int)135L;
    }
    public static int FACILITY_DRVSERVICING() {
        return (int)136L;
    }
    public static int FACILITY_DLS() {
        return (int)153L;
    }
    public static int FACILITY_DELIVERY_OPTIMIZATION() {
        return (int)208L;
    }
    public static int FACILITY_USERMODE_SPACES() {
        return (int)231L;
    }
    public static int FACILITY_USER_MODE_SECURITY_CORE() {
        return (int)232L;
    }
    public static int FACILITY_USERMODE_LICENSING() {
        return (int)234L;
    }
    public static int FACILITY_SOS() {
        return (int)160L;
    }
    public static int FACILITY_DEBUGGERS() {
        return (int)176L;
    }
    public static int FACILITY_SPP() {
        return (int)256L;
    }
    public static int FACILITY_RESTORE() {
        return (int)256L;
    }
    public static int FACILITY_DMSERVER() {
        return (int)256L;
    }
    public static int FACILITY_DEPLOYMENT_SERVICES_SERVER() {
        return (int)257L;
    }
    public static int FACILITY_DEPLOYMENT_SERVICES_IMAGING() {
        return (int)258L;
    }
    public static int FACILITY_DEPLOYMENT_SERVICES_MANAGEMENT() {
        return (int)259L;
    }
    public static int FACILITY_DEPLOYMENT_SERVICES_UTIL() {
        return (int)260L;
    }
    public static int FACILITY_DEPLOYMENT_SERVICES_BINLSVC() {
        return (int)261L;
    }
    public static int FACILITY_DEPLOYMENT_SERVICES_PXE() {
        return (int)263L;
    }
    public static int FACILITY_DEPLOYMENT_SERVICES_TFTP() {
        return (int)264L;
    }
    public static int FACILITY_DEPLOYMENT_SERVICES_TRANSPORT_MANAGEMENT() {
        return (int)272L;
    }
    public static int FACILITY_DEPLOYMENT_SERVICES_DRIVER_PROVISIONING() {
        return (int)278L;
    }
    public static int FACILITY_DEPLOYMENT_SERVICES_MULTICAST_SERVER() {
        return (int)289L;
    }
    public static int FACILITY_DEPLOYMENT_SERVICES_MULTICAST_CLIENT() {
        return (int)290L;
    }
    public static int FACILITY_DEPLOYMENT_SERVICES_CONTENT_PROVIDER() {
        return (int)293L;
    }
    public static int FACILITY_LINGUISTIC_SERVICES() {
        return (int)305L;
    }
    public static int FACILITY_AUDIOSTREAMING() {
        return (int)1094L;
    }
    public static int FACILITY_TTD() {
        return (int)1490L;
    }
    public static int FACILITY_ACCELERATOR() {
        return (int)1536L;
    }
    public static int FACILITY_WMAAECMA() {
        return (int)1996L;
    }
    public static int FACILITY_DIRECTMUSIC() {
        return (int)2168L;
    }
    public static int FACILITY_DIRECT3D10() {
        return (int)2169L;
    }
    public static int FACILITY_DXGI() {
        return (int)2170L;
    }
    public static int FACILITY_DXGI_DDI() {
        return (int)2171L;
    }
    public static int FACILITY_DIRECT3D11() {
        return (int)2172L;
    }
    public static int FACILITY_DIRECT3D11_DEBUG() {
        return (int)2173L;
    }
    public static int FACILITY_DIRECT3D12() {
        return (int)2174L;
    }
    public static int FACILITY_DIRECT3D12_DEBUG() {
        return (int)2175L;
    }
    public static int FACILITY_DXCORE() {
        return (int)2176L;
    }
    public static int FACILITY_LEAP() {
        return (int)2184L;
    }
    public static int FACILITY_AUDCLNT() {
        return (int)2185L;
    }
    public static int FACILITY_WINCODEC_DWRITE_DWM() {
        return (int)2200L;
    }
    public static int FACILITY_WINML() {
        return (int)2192L;
    }
    public static int FACILITY_DIRECT2D() {
        return (int)2201L;
    }
    public static int FACILITY_DEFRAG() {
        return (int)2304L;
    }
    public static int FACILITY_USERMODE_SDBUS() {
        return (int)2305L;
    }
    public static int FACILITY_JSCRIPT() {
        return (int)2306L;
    }
    public static int FACILITY_PIDGENX() {
        return (int)2561L;
    }
    public static int FACILITY_EAS() {
        return (int)85L;
    }
    public static int FACILITY_WEB() {
        return (int)885L;
    }
    public static int FACILITY_WEB_SOCKET() {
        return (int)886L;
    }
    public static int FACILITY_MOBILE() {
        return (int)1793L;
    }
    public static int FACILITY_SQLITE() {
        return (int)1967L;
    }
    public static int FACILITY_UTC() {
        return (int)1989L;
    }
    public static int FACILITY_WEP() {
        return (int)2049L;
    }
    public static int FACILITY_SYNCENGINE() {
        return (int)2050L;
    }
    public static int FACILITY_XBOX() {
        return (int)2339L;
    }
    public static int FACILITY_GAME() {
        return (int)2340L;
    }
    public static int FACILITY_PIX() {
        return (int)2748L;
    }
    public static int DNS_ERROR_RESPONSE_CODES_BASE() {
        return (int)9000L;
    }
    public static int DNS_ERROR_MASK() {
        return (int)9000L;
    }
    public static int DNS_ERROR_DNSSEC_BASE() {
        return (int)9100L;
    }
    public static int DNS_ERROR_PACKET_FMT_BASE() {
        return (int)9500L;
    }
    public static int DNS_ERROR_GENERAL_API_BASE() {
        return (int)9550L;
    }
    public static int DNS_ERROR_ZONE_BASE() {
        return (int)9600L;
    }
    public static int DNS_ERROR_DATAFILE_BASE() {
        return (int)9650L;
    }
    public static int DNS_ERROR_DATABASE_BASE() {
        return (int)9700L;
    }
    public static int DNS_ERROR_OPERATION_BASE() {
        return (int)9750L;
    }
    public static int DNS_ERROR_SECURE_BASE() {
        return (int)9800L;
    }
    public static int DNS_ERROR_SETUP_BASE() {
        return (int)9850L;
    }
    public static int DNS_ERROR_DP_BASE() {
        return (int)9900L;
    }
    public static int WSABASEERR() {
        return (int)10000L;
    }
    public static int SEVERITY_SUCCESS() {
        return (int)0L;
    }
    public static int SEVERITY_ERROR() {
        return (int)1L;
    }
    public static int FACILITY_NT_BIT() {
        return (int)268435456L;
    }
    public static int NOERROR() {
        return (int)0L;
    }
    public static int XACT_S_FIRST() {
        return (int)315392L;
    }
    public static int XACT_S_LAST() {
        return (int)315408L;
    }
    public static int NTE_OP_OK() {
        return (int)0L;
    }
    public static int TC_NORMAL() {
        return (int)0L;
    }
    public static int TC_HARDERR() {
        return (int)1L;
    }
    public static int TC_GP_TRAP() {
        return (int)2L;
    }
    public static int TC_SIGNAL() {
        return (int)3L;
    }
    public static int AC_LINE_OFFLINE() {
        return (int)0L;
    }
    public static int AC_LINE_ONLINE() {
        return (int)1L;
    }
    public static int AC_LINE_BACKUP_POWER() {
        return (int)2L;
    }
    public static int AC_LINE_UNKNOWN() {
        return (int)255L;
    }
    public static int BATTERY_FLAG_HIGH() {
        return (int)1L;
    }
    public static int BATTERY_FLAG_LOW() {
        return (int)2L;
    }
    public static int BATTERY_FLAG_CRITICAL() {
        return (int)4L;
    }
    public static int BATTERY_FLAG_CHARGING() {
        return (int)8L;
    }
    public static int BATTERY_FLAG_NO_BATTERY() {
        return (int)128L;
    }
    public static int BATTERY_FLAG_UNKNOWN() {
        return (int)255L;
    }
    public static int BATTERY_PERCENTAGE_UNKNOWN() {
        return (int)255L;
    }
    public static int SYSTEM_STATUS_FLAG_POWER_SAVING_ON() {
        return (int)1L;
    }
    public static int ACTIVATION_CONTEXT_BASIC_INFORMATION_DEFINED() {
        return (int)1L;
    }
    public static int RESTART_MAX_CMD_LINE() {
        return (int)1024L;
    }
    public static int RESTART_NO_CRASH() {
        return (int)1L;
    }
    public static int RESTART_NO_HANG() {
        return (int)2L;
    }
    public static int RESTART_NO_PATCH() {
        return (int)4L;
    }
    public static int RESTART_NO_REBOOT() {
        return (int)8L;
    }
    public static int RECOVERY_DEFAULT_PING_INTERVAL() {
        return (int)5000L;
    }
    public static int FILE_RENAME_FLAG_REPLACE_IF_EXISTS() {
        return (int)1L;
    }
    public static int FILE_RENAME_FLAG_POSIX_SEMANTICS() {
        return (int)2L;
    }
    public static int FILE_RENAME_FLAG_SUPPRESS_PIN_STATE_INHERITANCE() {
        return (int)4L;
    }
    public static int FILE_DISPOSITION_FLAG_DO_NOT_DELETE() {
        return (int)0L;
    }
    public static int FILE_DISPOSITION_FLAG_DELETE() {
        return (int)1L;
    }
    public static int FILE_DISPOSITION_FLAG_POSIX_SEMANTICS() {
        return (int)2L;
    }
    public static int FILE_DISPOSITION_FLAG_FORCE_IMAGE_SECTION_CHECK() {
        return (int)4L;
    }
    public static int FILE_DISPOSITION_FLAG_ON_CLOSE() {
        return (int)8L;
    }
    public static int FILE_DISPOSITION_FLAG_IGNORE_READONLY_ATTRIBUTE() {
        return (int)16L;
    }
    public static int STORAGE_INFO_FLAGS_ALIGNED_DEVICE() {
        return (int)1L;
    }
    public static int STORAGE_INFO_FLAGS_PARTITION_ALIGNED_ON_DEVICE() {
        return (int)2L;
    }
    public static int REMOTE_PROTOCOL_INFO_FLAG_LOOPBACK() {
        return (int)1L;
    }
    public static int REMOTE_PROTOCOL_INFO_FLAG_OFFLINE() {
        return (int)2L;
    }
    public static int REMOTE_PROTOCOL_INFO_FLAG_PERSISTENT_HANDLE() {
        return (int)4L;
    }
    public static int RPI_FLAG_SMB2_SHARECAP_TIMEWARP() {
        return (int)2L;
    }
    public static int RPI_FLAG_SMB2_SHARECAP_DFS() {
        return (int)8L;
    }
    public static int RPI_FLAG_SMB2_SHARECAP_CONTINUOUS_AVAILABILITY() {
        return (int)16L;
    }
    public static int RPI_FLAG_SMB2_SHARECAP_SCALEOUT() {
        return (int)32L;
    }
    public static int RPI_FLAG_SMB2_SHARECAP_CLUSTER() {
        return (int)64L;
    }
    public static int RPI_SMB2_FLAG_SERVERCAP_DFS() {
        return (int)1L;
    }
    public static int RPI_SMB2_FLAG_SERVERCAP_LEASING() {
        return (int)2L;
    }
    public static int RPI_SMB2_FLAG_SERVERCAP_LARGEMTU() {
        return (int)4L;
    }
    public static int RPI_SMB2_FLAG_SERVERCAP_MULTICHANNEL() {
        return (int)8L;
    }
    public static int RPI_SMB2_FLAG_SERVERCAP_PERSISTENT_HANDLES() {
        return (int)16L;
    }
    public static int RPI_SMB2_FLAG_SERVERCAP_DIRECTORY_LEASING() {
        return (int)32L;
    }
    public static int MICROSOFT_WINBASE_H_DEFINE_INTERLOCKED_CPLUSPLUS_OVERLOADS() {
        return (int)0L;
    }
    public static int R2_BLACK() {
        return (int)1L;
    }
    public static int R2_NOTMERGEPEN() {
        return (int)2L;
    }
    public static int R2_MASKNOTPEN() {
        return (int)3L;
    }
    public static int R2_NOTCOPYPEN() {
        return (int)4L;
    }
    public static int R2_MASKPENNOT() {
        return (int)5L;
    }
    public static int R2_NOT() {
        return (int)6L;
    }
    public static int R2_XORPEN() {
        return (int)7L;
    }
    public static int R2_NOTMASKPEN() {
        return (int)8L;
    }
    public static int R2_MASKPEN() {
        return (int)9L;
    }
    public static int R2_NOTXORPEN() {
        return (int)10L;
    }
    public static int R2_NOP() {
        return (int)11L;
    }
    public static int R2_MERGENOTPEN() {
        return (int)12L;
    }
    public static int R2_COPYPEN() {
        return (int)13L;
    }
    public static int R2_MERGEPENNOT() {
        return (int)14L;
    }
    public static int R2_MERGEPEN() {
        return (int)15L;
    }
    public static int R2_WHITE() {
        return (int)16L;
    }
    public static int R2_LAST() {
        return (int)16L;
    }
    public static int ERROR() {
        return (int)0L;
    }
    public static int NULLREGION() {
        return (int)1L;
    }
    public static int SIMPLEREGION() {
        return (int)2L;
    }
    public static int COMPLEXREGION() {
        return (int)3L;
    }
    public static int RGN_AND() {
        return (int)1L;
    }
    public static int RGN_OR() {
        return (int)2L;
    }
    public static int RGN_XOR() {
        return (int)3L;
    }
    public static int RGN_DIFF() {
        return (int)4L;
    }
    public static int RGN_COPY() {
        return (int)5L;
    }
    public static int BLACKONWHITE() {
        return (int)1L;
    }
    public static int WHITEONBLACK() {
        return (int)2L;
    }
    public static int COLORONCOLOR() {
        return (int)3L;
    }
    public static int HALFTONE() {
        return (int)4L;
    }
    public static int MAXSTRETCHBLTMODE() {
        return (int)4L;
    }
    public static int ALTERNATE() {
        return (int)1L;
    }
    public static int WINDING() {
        return (int)2L;
    }
    public static int POLYFILL_LAST() {
        return (int)2L;
    }
    public static int LAYOUT_RTL() {
        return (int)1L;
    }
    public static int LAYOUT_BTT() {
        return (int)2L;
    }
    public static int LAYOUT_VBH() {
        return (int)4L;
    }
    public static int LAYOUT_BITMAPORIENTATIONPRESERVED() {
        return (int)8L;
    }
    public static int TA_NOUPDATECP() {
        return (int)0L;
    }
    public static int TA_UPDATECP() {
        return (int)1L;
    }
    public static int TA_LEFT() {
        return (int)0L;
    }
    public static int TA_RIGHT() {
        return (int)2L;
    }
    public static int TA_CENTER() {
        return (int)6L;
    }
    public static int TA_TOP() {
        return (int)0L;
    }
    public static int TA_BOTTOM() {
        return (int)8L;
    }
    public static int TA_BASELINE() {
        return (int)24L;
    }
    public static int TA_RTLREADING() {
        return (int)256L;
    }
    public static int ETO_OPAQUE() {
        return (int)2L;
    }
    public static int ETO_CLIPPED() {
        return (int)4L;
    }
    public static int ETO_GLYPH_INDEX() {
        return (int)16L;
    }
    public static int ETO_RTLREADING() {
        return (int)128L;
    }
    public static int ETO_NUMERICSLOCAL() {
        return (int)1024L;
    }
    public static int ETO_NUMERICSLATIN() {
        return (int)2048L;
    }
    public static int ETO_IGNORELANGUAGE() {
        return (int)4096L;
    }
    public static int ETO_PDY() {
        return (int)8192L;
    }
    public static int ETO_REVERSE_INDEX_MAP() {
        return (int)65536L;
    }
    public static int ASPECT_FILTERING() {
        return (int)1L;
    }
    public static int DCB_RESET() {
        return (int)1L;
    }
    public static int DCB_ACCUMULATE() {
        return (int)2L;
    }
    public static int DCB_ENABLE() {
        return (int)4L;
    }
    public static int DCB_DISABLE() {
        return (int)8L;
    }
    public static int META_SETBKCOLOR() {
        return (int)513L;
    }
    public static int META_SETBKMODE() {
        return (int)258L;
    }
    public static int META_SETMAPMODE() {
        return (int)259L;
    }
    public static int META_SETROP2() {
        return (int)260L;
    }
    public static int META_SETRELABS() {
        return (int)261L;
    }
    public static int META_SETPOLYFILLMODE() {
        return (int)262L;
    }
    public static int META_SETSTRETCHBLTMODE() {
        return (int)263L;
    }
    public static int META_SETTEXTCHAREXTRA() {
        return (int)264L;
    }
    public static int META_SETTEXTCOLOR() {
        return (int)521L;
    }
    public static int META_SETTEXTJUSTIFICATION() {
        return (int)522L;
    }
    public static int META_SETWINDOWORG() {
        return (int)523L;
    }
    public static int META_SETWINDOWEXT() {
        return (int)524L;
    }
    public static int META_SETVIEWPORTORG() {
        return (int)525L;
    }
    public static int META_SETVIEWPORTEXT() {
        return (int)526L;
    }
    public static int META_OFFSETWINDOWORG() {
        return (int)527L;
    }
    public static int META_SCALEWINDOWEXT() {
        return (int)1040L;
    }
    public static int META_OFFSETVIEWPORTORG() {
        return (int)529L;
    }
    public static int META_SCALEVIEWPORTEXT() {
        return (int)1042L;
    }
    public static int META_LINETO() {
        return (int)531L;
    }
    public static int META_MOVETO() {
        return (int)532L;
    }
    public static int META_EXCLUDECLIPRECT() {
        return (int)1045L;
    }
    public static int META_INTERSECTCLIPRECT() {
        return (int)1046L;
    }
    public static int META_ARC() {
        return (int)2071L;
    }
    public static int META_ELLIPSE() {
        return (int)1048L;
    }
    public static int META_FLOODFILL() {
        return (int)1049L;
    }
    public static int META_PIE() {
        return (int)2074L;
    }
    public static int META_RECTANGLE() {
        return (int)1051L;
    }
    public static int META_ROUNDRECT() {
        return (int)1564L;
    }
    public static int META_PATBLT() {
        return (int)1565L;
    }
    public static int META_SAVEDC() {
        return (int)30L;
    }
    public static int META_SETPIXEL() {
        return (int)1055L;
    }
    public static int META_OFFSETCLIPRGN() {
        return (int)544L;
    }
    public static int META_TEXTOUT() {
        return (int)1313L;
    }
    public static int META_BITBLT() {
        return (int)2338L;
    }
    public static int META_STRETCHBLT() {
        return (int)2851L;
    }
    public static int META_POLYGON() {
        return (int)804L;
    }
    public static int META_POLYLINE() {
        return (int)805L;
    }
    public static int META_ESCAPE() {
        return (int)1574L;
    }
    public static int META_RESTOREDC() {
        return (int)295L;
    }
    public static int META_FILLREGION() {
        return (int)552L;
    }
    public static int META_FRAMEREGION() {
        return (int)1065L;
    }
    public static int META_INVERTREGION() {
        return (int)298L;
    }
    public static int META_PAINTREGION() {
        return (int)299L;
    }
    public static int META_SELECTCLIPREGION() {
        return (int)300L;
    }
    public static int META_SELECTOBJECT() {
        return (int)301L;
    }
    public static int META_SETTEXTALIGN() {
        return (int)302L;
    }
    public static int META_CHORD() {
        return (int)2096L;
    }
    public static int META_SETMAPPERFLAGS() {
        return (int)561L;
    }
    public static int META_EXTTEXTOUT() {
        return (int)2610L;
    }
    public static int META_SETDIBTODEV() {
        return (int)3379L;
    }
    public static int META_SELECTPALETTE() {
        return (int)564L;
    }
    public static int META_REALIZEPALETTE() {
        return (int)53L;
    }
    public static int META_ANIMATEPALETTE() {
        return (int)1078L;
    }
    public static int META_SETPALENTRIES() {
        return (int)55L;
    }
    public static int META_POLYPOLYGON() {
        return (int)1336L;
    }
    public static int META_RESIZEPALETTE() {
        return (int)313L;
    }
    public static int META_DIBBITBLT() {
        return (int)2368L;
    }
    public static int META_DIBSTRETCHBLT() {
        return (int)2881L;
    }
    public static int META_DIBCREATEPATTERNBRUSH() {
        return (int)322L;
    }
    public static int META_STRETCHDIB() {
        return (int)3907L;
    }
    public static int META_EXTFLOODFILL() {
        return (int)1352L;
    }
    public static int META_SETLAYOUT() {
        return (int)329L;
    }
    public static int META_DELETEOBJECT() {
        return (int)496L;
    }
    public static int META_CREATEPALETTE() {
        return (int)247L;
    }
    public static int META_CREATEPATTERNBRUSH() {
        return (int)505L;
    }
    public static int META_CREATEPENINDIRECT() {
        return (int)762L;
    }
    public static int META_CREATEFONTINDIRECT() {
        return (int)763L;
    }
    public static int META_CREATEBRUSHINDIRECT() {
        return (int)764L;
    }
    public static int META_CREATEREGION() {
        return (int)1791L;
    }
    public static int NEWFRAME() {
        return (int)1L;
    }
    public static int ABORTDOC() {
        return (int)2L;
    }
    public static int NEXTBAND() {
        return (int)3L;
    }
    public static int SETCOLORTABLE() {
        return (int)4L;
    }
    public static int GETCOLORTABLE() {
        return (int)5L;
    }
    public static int FLUSHOUTPUT() {
        return (int)6L;
    }
    public static int DRAFTMODE() {
        return (int)7L;
    }
    public static int QUERYESCSUPPORT() {
        return (int)8L;
    }
    public static int SETABORTPROC() {
        return (int)9L;
    }
    public static int STARTDOC() {
        return (int)10L;
    }
    public static int ENDDOC() {
        return (int)11L;
    }
    public static int GETPHYSPAGESIZE() {
        return (int)12L;
    }
    public static int GETPRINTINGOFFSET() {
        return (int)13L;
    }
    public static int GETSCALINGFACTOR() {
        return (int)14L;
    }
    public static int MFCOMMENT() {
        return (int)15L;
    }
    public static int GETPENWIDTH() {
        return (int)16L;
    }
    public static int SETCOPYCOUNT() {
        return (int)17L;
    }
    public static int SELECTPAPERSOURCE() {
        return (int)18L;
    }
    public static int DEVICEDATA() {
        return (int)19L;
    }
    public static int PASSTHROUGH() {
        return (int)19L;
    }
    public static int GETTECHNOLGY() {
        return (int)20L;
    }
    public static int GETTECHNOLOGY() {
        return (int)20L;
    }
    public static int SETLINECAP() {
        return (int)21L;
    }
    public static int SETLINEJOIN() {
        return (int)22L;
    }
    public static int SETMITERLIMIT() {
        return (int)23L;
    }
    public static int BANDINFO() {
        return (int)24L;
    }
    public static int DRAWPATTERNRECT() {
        return (int)25L;
    }
    public static int GETVECTORPENSIZE() {
        return (int)26L;
    }
    public static int GETVECTORBRUSHSIZE() {
        return (int)27L;
    }
    public static int ENABLEDUPLEX() {
        return (int)28L;
    }
    public static int GETSETPAPERBINS() {
        return (int)29L;
    }
    public static int GETSETPRINTORIENT() {
        return (int)30L;
    }
    public static int ENUMPAPERBINS() {
        return (int)31L;
    }
    public static int SETDIBSCALING() {
        return (int)32L;
    }
    public static int EPSPRINTING() {
        return (int)33L;
    }
    public static int ENUMPAPERMETRICS() {
        return (int)34L;
    }
    public static int GETSETPAPERMETRICS() {
        return (int)35L;
    }
    public static int POSTSCRIPT_DATA() {
        return (int)37L;
    }
    public static int POSTSCRIPT_IGNORE() {
        return (int)38L;
    }
    public static int MOUSETRAILS() {
        return (int)39L;
    }
    public static int GETDEVICEUNITS() {
        return (int)42L;
    }
    public static int GETEXTENDEDTEXTMETRICS() {
        return (int)256L;
    }
    public static int GETEXTENTTABLE() {
        return (int)257L;
    }
    public static int GETPAIRKERNTABLE() {
        return (int)258L;
    }
    public static int GETTRACKKERNTABLE() {
        return (int)259L;
    }
    public static int EXTTEXTOUT() {
        return (int)512L;
    }
    public static int GETFACENAME() {
        return (int)513L;
    }
    public static int DOWNLOADFACE() {
        return (int)514L;
    }
    public static int ENABLERELATIVEWIDTHS() {
        return (int)768L;
    }
    public static int ENABLEPAIRKERNING() {
        return (int)769L;
    }
    public static int SETKERNTRACK() {
        return (int)770L;
    }
    public static int SETALLJUSTVALUES() {
        return (int)771L;
    }
    public static int SETCHARSET() {
        return (int)772L;
    }
    public static int STRETCHBLT() {
        return (int)2048L;
    }
    public static int METAFILE_DRIVER() {
        return (int)2049L;
    }
    public static int GETSETSCREENPARAMS() {
        return (int)3072L;
    }
    public static int QUERYDIBSUPPORT() {
        return (int)3073L;
    }
    public static int BEGIN_PATH() {
        return (int)4096L;
    }
    public static int CLIP_TO_PATH() {
        return (int)4097L;
    }
    public static int END_PATH() {
        return (int)4098L;
    }
    public static int EXT_DEVICE_CAPS() {
        return (int)4099L;
    }
    public static int RESTORE_CTM() {
        return (int)4100L;
    }
    public static int SAVE_CTM() {
        return (int)4101L;
    }
    public static int SET_ARC_DIRECTION() {
        return (int)4102L;
    }
    public static int SET_BACKGROUND_COLOR() {
        return (int)4103L;
    }
    public static int SET_POLY_MODE() {
        return (int)4104L;
    }
    public static int SET_SCREEN_ANGLE() {
        return (int)4105L;
    }
    public static int SET_SPREAD() {
        return (int)4106L;
    }
    public static int TRANSFORM_CTM() {
        return (int)4107L;
    }
    public static int SET_CLIP_BOX() {
        return (int)4108L;
    }
    public static int SET_BOUNDS() {
        return (int)4109L;
    }
    public static int SET_MIRROR_MODE() {
        return (int)4110L;
    }
    public static int OPENCHANNEL() {
        return (int)4110L;
    }
    public static int DOWNLOADHEADER() {
        return (int)4111L;
    }
    public static int CLOSECHANNEL() {
        return (int)4112L;
    }
    public static int POSTSCRIPT_PASSTHROUGH() {
        return (int)4115L;
    }
    public static int ENCAPSULATED_POSTSCRIPT() {
        return (int)4116L;
    }
    public static int POSTSCRIPT_IDENTIFY() {
        return (int)4117L;
    }
    public static int POSTSCRIPT_INJECTION() {
        return (int)4118L;
    }
    public static int CHECKJPEGFORMAT() {
        return (int)4119L;
    }
    public static int CHECKPNGFORMAT() {
        return (int)4120L;
    }
    public static int GET_PS_FEATURESETTING() {
        return (int)4121L;
    }
    public static int GDIPLUS_TS_QUERYVER() {
        return (int)4122L;
    }
    public static int GDIPLUS_TS_RECORD() {
        return (int)4123L;
    }
    public static int MILCORE_TS_QUERYVER_RESULT_FALSE() {
        return (int)0L;
    }
    public static int MILCORE_TS_QUERYVER_RESULT_TRUE() {
        return (int)2147483647L;
    }
    public static int SPCLPASSTHROUGH2() {
        return (int)4568L;
    }
    public static int PSIDENT_GDICENTRIC() {
        return (int)0L;
    }
    public static int PSIDENT_PSCENTRIC() {
        return (int)1L;
    }
    public static int PSINJECT_BEGINSTREAM() {
        return (int)1L;
    }
    public static int PSINJECT_PSADOBE() {
        return (int)2L;
    }
    public static int PSINJECT_PAGESATEND() {
        return (int)3L;
    }
    public static int PSINJECT_PAGES() {
        return (int)4L;
    }
    public static int PSINJECT_DOCNEEDEDRES() {
        return (int)5L;
    }
    public static int PSINJECT_DOCSUPPLIEDRES() {
        return (int)6L;
    }
    public static int PSINJECT_PAGEORDER() {
        return (int)7L;
    }
    public static int PSINJECT_ORIENTATION() {
        return (int)8L;
    }
    public static int PSINJECT_BOUNDINGBOX() {
        return (int)9L;
    }
    public static int PSINJECT_DOCUMENTPROCESSCOLORS() {
        return (int)10L;
    }
    public static int PSINJECT_COMMENTS() {
        return (int)11L;
    }
    public static int PSINJECT_BEGINDEFAULTS() {
        return (int)12L;
    }
    public static int PSINJECT_ENDDEFAULTS() {
        return (int)13L;
    }
    public static int PSINJECT_BEGINPROLOG() {
        return (int)14L;
    }
    public static int PSINJECT_ENDPROLOG() {
        return (int)15L;
    }
    public static int PSINJECT_BEGINSETUP() {
        return (int)16L;
    }
    public static int PSINJECT_ENDSETUP() {
        return (int)17L;
    }
    public static int PSINJECT_TRAILER() {
        return (int)18L;
    }
    public static int PSINJECT_EOF() {
        return (int)19L;
    }
    public static int PSINJECT_ENDSTREAM() {
        return (int)20L;
    }
    public static int PSINJECT_DOCUMENTPROCESSCOLORSATEND() {
        return (int)21L;
    }
    public static int PSINJECT_PAGENUMBER() {
        return (int)100L;
    }
    public static int PSINJECT_BEGINPAGESETUP() {
        return (int)101L;
    }
    public static int PSINJECT_ENDPAGESETUP() {
        return (int)102L;
    }
    public static int PSINJECT_PAGETRAILER() {
        return (int)103L;
    }
    public static int PSINJECT_PLATECOLOR() {
        return (int)104L;
    }
    public static int PSINJECT_SHOWPAGE() {
        return (int)105L;
    }
    public static int PSINJECT_PAGEBBOX() {
        return (int)106L;
    }
    public static int PSINJECT_ENDPAGECOMMENTS() {
        return (int)107L;
    }
    public static int PSINJECT_VMSAVE() {
        return (int)200L;
    }
    public static int PSINJECT_VMRESTORE() {
        return (int)201L;
    }
    public static int FEATURESETTING_NUP() {
        return (int)0L;
    }
    public static int FEATURESETTING_OUTPUT() {
        return (int)1L;
    }
    public static int FEATURESETTING_PSLEVEL() {
        return (int)2L;
    }
    public static int FEATURESETTING_CUSTPAPER() {
        return (int)3L;
    }
    public static int FEATURESETTING_MIRROR() {
        return (int)4L;
    }
    public static int FEATURESETTING_NEGATIVE() {
        return (int)5L;
    }
    public static int FEATURESETTING_PROTOCOL() {
        return (int)6L;
    }
    public static int FEATURESETTING_PRIVATE_BEGIN() {
        return (int)4096L;
    }
    public static int FEATURESETTING_PRIVATE_END() {
        return (int)8191L;
    }
    public static int PSPROTOCOL_ASCII() {
        return (int)0L;
    }
    public static int PSPROTOCOL_BCP() {
        return (int)1L;
    }
    public static int PSPROTOCOL_TBCP() {
        return (int)2L;
    }
    public static int PSPROTOCOL_BINARY() {
        return (int)3L;
    }
    public static int QDI_SETDIBITS() {
        return (int)1L;
    }
    public static int QDI_GETDIBITS() {
        return (int)2L;
    }
    public static int QDI_DIBTOSCREEN() {
        return (int)4L;
    }
    public static int QDI_STRETCHDIB() {
        return (int)8L;
    }
    public static int SP_NOTREPORTED() {
        return (int)16384L;
    }
    public static int PR_JOBSTATUS() {
        return (int)0L;
    }
    public static int OBJ_PEN() {
        return (int)1L;
    }
    public static int OBJ_BRUSH() {
        return (int)2L;
    }
    public static int OBJ_DC() {
        return (int)3L;
    }
    public static int OBJ_METADC() {
        return (int)4L;
    }
    public static int OBJ_PAL() {
        return (int)5L;
    }
    public static int OBJ_FONT() {
        return (int)6L;
    }
    public static int OBJ_BITMAP() {
        return (int)7L;
    }
    public static int OBJ_REGION() {
        return (int)8L;
    }
    public static int OBJ_METAFILE() {
        return (int)9L;
    }
    public static int OBJ_MEMDC() {
        return (int)10L;
    }
    public static int OBJ_EXTPEN() {
        return (int)11L;
    }
}



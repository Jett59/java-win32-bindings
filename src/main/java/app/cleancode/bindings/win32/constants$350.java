// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$350 {

    static final FunctionDescriptor PostMessageW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle PostMessageW$MH = RuntimeHelper.downcallHandle(
        "PostMessageW",
        constants$350.PostMessageW$FUNC
    );
    static final FunctionDescriptor PostThreadMessageA$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle PostThreadMessageA$MH = RuntimeHelper.downcallHandle(
        "PostThreadMessageA",
        constants$350.PostThreadMessageA$FUNC
    );
    static final FunctionDescriptor PostThreadMessageW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle PostThreadMessageW$MH = RuntimeHelper.downcallHandle(
        "PostThreadMessageW",
        constants$350.PostThreadMessageW$FUNC
    );
    static final FunctionDescriptor AttachThreadInput$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle AttachThreadInput$MH = RuntimeHelper.downcallHandle(
        "AttachThreadInput",
        constants$350.AttachThreadInput$FUNC
    );
    static final FunctionDescriptor ReplyMessage$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle ReplyMessage$MH = RuntimeHelper.downcallHandle(
        "ReplyMessage",
        constants$350.ReplyMessage$FUNC
    );
    static final FunctionDescriptor WaitMessage$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle WaitMessage$MH = RuntimeHelper.downcallHandle(
        "WaitMessage",
        constants$350.WaitMessage$FUNC
    );
}



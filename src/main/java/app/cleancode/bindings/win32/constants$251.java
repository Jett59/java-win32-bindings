// Generated by jextract

package app.cleancode.bindings.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$251 {

    static final FunctionDescriptor CreateWindowExW$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CreateWindowExW$MH = RuntimeHelper.downcallHandle(
        "CreateWindowExW",
        constants$251.CreateWindowExW$FUNC
    );
    static final FunctionDescriptor IsWindow$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle IsWindow$MH = RuntimeHelper.downcallHandle(
        "IsWindow",
        constants$251.IsWindow$FUNC
    );
    static final FunctionDescriptor IsMenu$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle IsMenu$MH = RuntimeHelper.downcallHandle(
        "IsMenu",
        constants$251.IsMenu$FUNC
    );
    static final FunctionDescriptor IsChild$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle IsChild$MH = RuntimeHelper.downcallHandle(
        "IsChild",
        constants$251.IsChild$FUNC
    );
    static final FunctionDescriptor DestroyWindow$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle DestroyWindow$MH = RuntimeHelper.downcallHandle(
        "DestroyWindow",
        constants$251.DestroyWindow$FUNC
    );
    static final FunctionDescriptor ShowWindow$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle ShowWindow$MH = RuntimeHelper.downcallHandle(
        "ShowWindow",
        constants$251.ShowWindow$FUNC
    );
}


